// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: dta-wed-api/v1/learning/learning.proto

package learning

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetUserSessionItemsByCourseIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CourseId int32 `protobuf:"varint,1,opt,name=courseId,proto3" json:"courseId,omitempty"`
	UserId   int32 `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *GetUserSessionItemsByCourseIdRequest) Reset() {
	*x = GetUserSessionItemsByCourseIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dta_wed_api_v1_learning_learning_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserSessionItemsByCourseIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserSessionItemsByCourseIdRequest) ProtoMessage() {}

func (x *GetUserSessionItemsByCourseIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dta_wed_api_v1_learning_learning_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserSessionItemsByCourseIdRequest.ProtoReflect.Descriptor instead.
func (*GetUserSessionItemsByCourseIdRequest) Descriptor() ([]byte, []int) {
	return file_dta_wed_api_v1_learning_learning_proto_rawDescGZIP(), []int{0}
}

func (x *GetUserSessionItemsByCourseIdRequest) GetCourseId() int32 {
	if x != nil {
		return x.CourseId
	}
	return 0
}

func (x *GetUserSessionItemsByCourseIdRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type GetUserSessionItemsByCourseIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*Session `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetUserSessionItemsByCourseIdResponse) Reset() {
	*x = GetUserSessionItemsByCourseIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dta_wed_api_v1_learning_learning_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserSessionItemsByCourseIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserSessionItemsByCourseIdResponse) ProtoMessage() {}

func (x *GetUserSessionItemsByCourseIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dta_wed_api_v1_learning_learning_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserSessionItemsByCourseIdResponse.ProtoReflect.Descriptor instead.
func (*GetUserSessionItemsByCourseIdResponse) Descriptor() ([]byte, []int) {
	return file_dta_wed_api_v1_learning_learning_proto_rawDescGZIP(), []int{1}
}

func (x *GetUserSessionItemsByCourseIdResponse) GetData() []*Session {
	if x != nil {
		return x.Data
	}
	return nil
}

type SessionItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionItemId      int32   `protobuf:"varint,1,opt,name=sessionItemId,proto3" json:"sessionItemId,omitempty"`
	ItemTypeId         int32   `protobuf:"varint,2,opt,name=itemTypeId,proto3" json:"itemTypeId,omitempty"`
	Order              int32   `protobuf:"varint,3,opt,name=order,proto3" json:"order,omitempty"`
	Name               string  `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Description        string  `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	LearningStatus     int32   `protobuf:"varint,6,opt,name=learningStatus,proto3" json:"learningStatus,omitempty"`
	UserLearningStatus int32   `protobuf:"varint,7,opt,name=userLearningStatus,proto3" json:"userLearningStatus,omitempty"`
	CreatedAt          int32   `protobuf:"varint,8,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt          int32   `protobuf:"varint,9,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	PageIds            []int32 `protobuf:"varint,10,rep,packed,name=pageIds,proto3" json:"pageIds,omitempty"`
}

func (x *SessionItem) Reset() {
	*x = SessionItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dta_wed_api_v1_learning_learning_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionItem) ProtoMessage() {}

func (x *SessionItem) ProtoReflect() protoreflect.Message {
	mi := &file_dta_wed_api_v1_learning_learning_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionItem.ProtoReflect.Descriptor instead.
func (*SessionItem) Descriptor() ([]byte, []int) {
	return file_dta_wed_api_v1_learning_learning_proto_rawDescGZIP(), []int{2}
}

func (x *SessionItem) GetSessionItemId() int32 {
	if x != nil {
		return x.SessionItemId
	}
	return 0
}

func (x *SessionItem) GetItemTypeId() int32 {
	if x != nil {
		return x.ItemTypeId
	}
	return 0
}

func (x *SessionItem) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *SessionItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SessionItem) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *SessionItem) GetLearningStatus() int32 {
	if x != nil {
		return x.LearningStatus
	}
	return 0
}

func (x *SessionItem) GetUserLearningStatus() int32 {
	if x != nil {
		return x.UserLearningStatus
	}
	return 0
}

func (x *SessionItem) GetCreatedAt() int32 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *SessionItem) GetUpdatedAt() int32 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *SessionItem) GetPageIds() []int32 {
	if x != nil {
		return x.PageIds
	}
	return nil
}

type Session struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId          int32          `protobuf:"varint,1,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
	Order              int32          `protobuf:"varint,2,opt,name=order,proto3" json:"order,omitempty"`
	Name               string         `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Description        string         `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	ProjectAppId       int32          `protobuf:"varint,5,opt,name=projectAppId,proto3" json:"projectAppId,omitempty"`
	LearningStatus     int32          `protobuf:"varint,6,opt,name=learningStatus,proto3" json:"learningStatus,omitempty"`
	UserLearningStatus int32          `protobuf:"varint,8,opt,name=userLearningStatus,proto3" json:"userLearningStatus,omitempty"`
	UpdatedAt          int32          `protobuf:"varint,9,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	CreatedAt          int32          `protobuf:"varint,10,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	SessionItems       []*SessionItem `protobuf:"bytes,11,rep,name=sessionItems,proto3" json:"sessionItems,omitempty"`
}

func (x *Session) Reset() {
	*x = Session{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dta_wed_api_v1_learning_learning_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Session) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Session) ProtoMessage() {}

func (x *Session) ProtoReflect() protoreflect.Message {
	mi := &file_dta_wed_api_v1_learning_learning_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Session.ProtoReflect.Descriptor instead.
func (*Session) Descriptor() ([]byte, []int) {
	return file_dta_wed_api_v1_learning_learning_proto_rawDescGZIP(), []int{3}
}

func (x *Session) GetSessionId() int32 {
	if x != nil {
		return x.SessionId
	}
	return 0
}

func (x *Session) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *Session) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Session) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Session) GetProjectAppId() int32 {
	if x != nil {
		return x.ProjectAppId
	}
	return 0
}

func (x *Session) GetLearningStatus() int32 {
	if x != nil {
		return x.LearningStatus
	}
	return 0
}

func (x *Session) GetUserLearningStatus() int32 {
	if x != nil {
		return x.UserLearningStatus
	}
	return 0
}

func (x *Session) GetUpdatedAt() int32 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *Session) GetCreatedAt() int32 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Session) GetSessionItems() []*SessionItem {
	if x != nil {
		return x.SessionItems
	}
	return nil
}

type GetDoneUserSessionItemsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int32 `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Date   int32 `protobuf:"varint,2,opt,name=date,proto3" json:"date,omitempty"`
}

func (x *GetDoneUserSessionItemsRequest) Reset() {
	*x = GetDoneUserSessionItemsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dta_wed_api_v1_learning_learning_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDoneUserSessionItemsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDoneUserSessionItemsRequest) ProtoMessage() {}

func (x *GetDoneUserSessionItemsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dta_wed_api_v1_learning_learning_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDoneUserSessionItemsRequest.ProtoReflect.Descriptor instead.
func (*GetDoneUserSessionItemsRequest) Descriptor() ([]byte, []int) {
	return file_dta_wed_api_v1_learning_learning_proto_rawDescGZIP(), []int{4}
}

func (x *GetDoneUserSessionItemsRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetDoneUserSessionItemsRequest) GetDate() int32 {
	if x != nil {
		return x.Date
	}
	return 0
}

type GetDoneUserSessionItemsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionItems []*GetDoneUserSessionItemsResponse_SessionItem `protobuf:"bytes,1,rep,name=sessionItems,proto3" json:"sessionItems,omitempty"`
}

func (x *GetDoneUserSessionItemsResponse) Reset() {
	*x = GetDoneUserSessionItemsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dta_wed_api_v1_learning_learning_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDoneUserSessionItemsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDoneUserSessionItemsResponse) ProtoMessage() {}

func (x *GetDoneUserSessionItemsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dta_wed_api_v1_learning_learning_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDoneUserSessionItemsResponse.ProtoReflect.Descriptor instead.
func (*GetDoneUserSessionItemsResponse) Descriptor() ([]byte, []int) {
	return file_dta_wed_api_v1_learning_learning_proto_rawDescGZIP(), []int{5}
}

func (x *GetDoneUserSessionItemsResponse) GetSessionItems() []*GetDoneUserSessionItemsResponse_SessionItem {
	if x != nil {
		return x.SessionItems
	}
	return nil
}

type CreateUserRecommendedSessionItemsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId         int32   `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	SessionItemIds []int32 `protobuf:"varint,2,rep,packed,name=sessionItemIds,proto3" json:"sessionItemIds,omitempty"`
}

func (x *CreateUserRecommendedSessionItemsRequest) Reset() {
	*x = CreateUserRecommendedSessionItemsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dta_wed_api_v1_learning_learning_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserRecommendedSessionItemsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserRecommendedSessionItemsRequest) ProtoMessage() {}

func (x *CreateUserRecommendedSessionItemsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dta_wed_api_v1_learning_learning_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserRecommendedSessionItemsRequest.ProtoReflect.Descriptor instead.
func (*CreateUserRecommendedSessionItemsRequest) Descriptor() ([]byte, []int) {
	return file_dta_wed_api_v1_learning_learning_proto_rawDescGZIP(), []int{6}
}

func (x *CreateUserRecommendedSessionItemsRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CreateUserRecommendedSessionItemsRequest) GetSessionItemIds() []int32 {
	if x != nil {
		return x.SessionItemIds
	}
	return nil
}

type GetUserRecommendedSessionItemsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int32 `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *GetUserRecommendedSessionItemsRequest) Reset() {
	*x = GetUserRecommendedSessionItemsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dta_wed_api_v1_learning_learning_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserRecommendedSessionItemsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserRecommendedSessionItemsRequest) ProtoMessage() {}

func (x *GetUserRecommendedSessionItemsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dta_wed_api_v1_learning_learning_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserRecommendedSessionItemsRequest.ProtoReflect.Descriptor instead.
func (*GetUserRecommendedSessionItemsRequest) Descriptor() ([]byte, []int) {
	return file_dta_wed_api_v1_learning_learning_proto_rawDescGZIP(), []int{7}
}

func (x *GetUserRecommendedSessionItemsRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type GetUserRecommendedSessionItemsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*GetUserRecommendedSessionItemsResponse_SessionItem `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetUserRecommendedSessionItemsResponse) Reset() {
	*x = GetUserRecommendedSessionItemsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dta_wed_api_v1_learning_learning_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserRecommendedSessionItemsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserRecommendedSessionItemsResponse) ProtoMessage() {}

func (x *GetUserRecommendedSessionItemsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dta_wed_api_v1_learning_learning_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserRecommendedSessionItemsResponse.ProtoReflect.Descriptor instead.
func (*GetUserRecommendedSessionItemsResponse) Descriptor() ([]byte, []int) {
	return file_dta_wed_api_v1_learning_learning_proto_rawDescGZIP(), []int{8}
}

func (x *GetUserRecommendedSessionItemsResponse) GetData() []*GetUserRecommendedSessionItemsResponse_SessionItem {
	if x != nil {
		return x.Data
	}
	return nil
}

type DeleteUserRecommendedSessionItemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionItemId int32 `protobuf:"varint,1,opt,name=sessionItemId,proto3" json:"sessionItemId,omitempty"`
	UserId        int32 `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *DeleteUserRecommendedSessionItemRequest) Reset() {
	*x = DeleteUserRecommendedSessionItemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dta_wed_api_v1_learning_learning_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUserRecommendedSessionItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserRecommendedSessionItemRequest) ProtoMessage() {}

func (x *DeleteUserRecommendedSessionItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dta_wed_api_v1_learning_learning_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserRecommendedSessionItemRequest.ProtoReflect.Descriptor instead.
func (*DeleteUserRecommendedSessionItemRequest) Descriptor() ([]byte, []int) {
	return file_dta_wed_api_v1_learning_learning_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteUserRecommendedSessionItemRequest) GetSessionItemId() int32 {
	if x != nil {
		return x.SessionItemId
	}
	return 0
}

func (x *DeleteUserRecommendedSessionItemRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type GetShuffledSessionItemsByUserIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId  int32 `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Shuffle bool  `protobuf:"varint,2,opt,name=shuffle,proto3" json:"shuffle,omitempty"`
}

func (x *GetShuffledSessionItemsByUserIdRequest) Reset() {
	*x = GetShuffledSessionItemsByUserIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dta_wed_api_v1_learning_learning_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetShuffledSessionItemsByUserIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShuffledSessionItemsByUserIdRequest) ProtoMessage() {}

func (x *GetShuffledSessionItemsByUserIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dta_wed_api_v1_learning_learning_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShuffledSessionItemsByUserIdRequest.ProtoReflect.Descriptor instead.
func (*GetShuffledSessionItemsByUserIdRequest) Descriptor() ([]byte, []int) {
	return file_dta_wed_api_v1_learning_learning_proto_rawDescGZIP(), []int{10}
}

func (x *GetShuffledSessionItemsByUserIdRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetShuffledSessionItemsByUserIdRequest) GetShuffle() bool {
	if x != nil {
		return x.Shuffle
	}
	return false
}

type GetShuffledSessionItemsByUserIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*SessionItem `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetShuffledSessionItemsByUserIdResponse) Reset() {
	*x = GetShuffledSessionItemsByUserIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dta_wed_api_v1_learning_learning_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetShuffledSessionItemsByUserIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShuffledSessionItemsByUserIdResponse) ProtoMessage() {}

func (x *GetShuffledSessionItemsByUserIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dta_wed_api_v1_learning_learning_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShuffledSessionItemsByUserIdResponse.ProtoReflect.Descriptor instead.
func (*GetShuffledSessionItemsByUserIdResponse) Descriptor() ([]byte, []int) {
	return file_dta_wed_api_v1_learning_learning_proto_rawDescGZIP(), []int{11}
}

func (x *GetShuffledSessionItemsByUserIdResponse) GetData() []*SessionItem {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetPageByPageIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageId int32 `protobuf:"varint,1,opt,name=pageId,proto3" json:"pageId,omitempty"`
}

func (x *GetPageByPageIdRequest) Reset() {
	*x = GetPageByPageIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dta_wed_api_v1_learning_learning_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPageByPageIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPageByPageIdRequest) ProtoMessage() {}

func (x *GetPageByPageIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dta_wed_api_v1_learning_learning_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPageByPageIdRequest.ProtoReflect.Descriptor instead.
func (*GetPageByPageIdRequest) Descriptor() ([]byte, []int) {
	return file_dta_wed_api_v1_learning_learning_proto_rawDescGZIP(), []int{12}
}

func (x *GetPageByPageIdRequest) GetPageId() int32 {
	if x != nil {
		return x.PageId
	}
	return 0
}

type GetPageByPageIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               int32            `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name             string           `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description      string           `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Order            int32            `protobuf:"varint,4,opt,name=order,proto3" json:"order,omitempty"`
	LessonId         int32            `protobuf:"varint,5,opt,name=lessonId,proto3" json:"lessonId,omitempty"`
	LearningStatusId int32            `protobuf:"varint,6,opt,name=learningStatusId,proto3" json:"learningStatusId,omitempty"`
	Contents         *structpb.Struct `protobuf:"bytes,7,opt,name=contents,proto3" json:"contents,omitempty"`
}

func (x *GetPageByPageIdResponse) Reset() {
	*x = GetPageByPageIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dta_wed_api_v1_learning_learning_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPageByPageIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPageByPageIdResponse) ProtoMessage() {}

func (x *GetPageByPageIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dta_wed_api_v1_learning_learning_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPageByPageIdResponse.ProtoReflect.Descriptor instead.
func (*GetPageByPageIdResponse) Descriptor() ([]byte, []int) {
	return file_dta_wed_api_v1_learning_learning_proto_rawDescGZIP(), []int{13}
}

func (x *GetPageByPageIdResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetPageByPageIdResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetPageByPageIdResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GetPageByPageIdResponse) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *GetPageByPageIdResponse) GetLessonId() int32 {
	if x != nil {
		return x.LessonId
	}
	return 0
}

func (x *GetPageByPageIdResponse) GetLearningStatusId() int32 {
	if x != nil {
		return x.LearningStatusId
	}
	return 0
}

func (x *GetPageByPageIdResponse) GetContents() *structpb.Struct {
	if x != nil {
		return x.Contents
	}
	return nil
}

type GetDoneUserSessionItemsResponse_SessionItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId          int32  `protobuf:"varint,1,opt,name=itemId,proto3" json:"itemId,omitempty"`
	ItemTypeId      int32  `protobuf:"varint,2,opt,name=itemTypeId,proto3" json:"itemTypeId,omitempty"`
	ItemOrder       int32  `protobuf:"varint,3,opt,name=itemOrder,proto3" json:"itemOrder,omitempty"`
	ItemName        string `protobuf:"bytes,4,opt,name=itemName,proto3" json:"itemName,omitempty"`
	ItemDescription string `protobuf:"bytes,5,opt,name=itemDescription,proto3" json:"itemDescription,omitempty"`
	SessionId       int32  `protobuf:"varint,6,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
	SessionName     int32  `protobuf:"varint,7,opt,name=sessionName,proto3" json:"sessionName,omitempty"`
	SessionOrder    int32  `protobuf:"varint,8,opt,name=sessionOrder,proto3" json:"sessionOrder,omitempty"`
	DoneAt          int32  `protobuf:"varint,9,opt,name=doneAt,proto3" json:"doneAt,omitempty"`
}

func (x *GetDoneUserSessionItemsResponse_SessionItem) Reset() {
	*x = GetDoneUserSessionItemsResponse_SessionItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dta_wed_api_v1_learning_learning_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDoneUserSessionItemsResponse_SessionItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDoneUserSessionItemsResponse_SessionItem) ProtoMessage() {}

func (x *GetDoneUserSessionItemsResponse_SessionItem) ProtoReflect() protoreflect.Message {
	mi := &file_dta_wed_api_v1_learning_learning_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDoneUserSessionItemsResponse_SessionItem.ProtoReflect.Descriptor instead.
func (*GetDoneUserSessionItemsResponse_SessionItem) Descriptor() ([]byte, []int) {
	return file_dta_wed_api_v1_learning_learning_proto_rawDescGZIP(), []int{5, 0}
}

func (x *GetDoneUserSessionItemsResponse_SessionItem) GetItemId() int32 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *GetDoneUserSessionItemsResponse_SessionItem) GetItemTypeId() int32 {
	if x != nil {
		return x.ItemTypeId
	}
	return 0
}

func (x *GetDoneUserSessionItemsResponse_SessionItem) GetItemOrder() int32 {
	if x != nil {
		return x.ItemOrder
	}
	return 0
}

func (x *GetDoneUserSessionItemsResponse_SessionItem) GetItemName() string {
	if x != nil {
		return x.ItemName
	}
	return ""
}

func (x *GetDoneUserSessionItemsResponse_SessionItem) GetItemDescription() string {
	if x != nil {
		return x.ItemDescription
	}
	return ""
}

func (x *GetDoneUserSessionItemsResponse_SessionItem) GetSessionId() int32 {
	if x != nil {
		return x.SessionId
	}
	return 0
}

func (x *GetDoneUserSessionItemsResponse_SessionItem) GetSessionName() int32 {
	if x != nil {
		return x.SessionName
	}
	return 0
}

func (x *GetDoneUserSessionItemsResponse_SessionItem) GetSessionOrder() int32 {
	if x != nil {
		return x.SessionOrder
	}
	return 0
}

func (x *GetDoneUserSessionItemsResponse_SessionItem) GetDoneAt() int32 {
	if x != nil {
		return x.DoneAt
	}
	return 0
}

type GetUserRecommendedSessionItemsResponse_SessionItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionItemId      int32   `protobuf:"varint,1,opt,name=sessionItemId,proto3" json:"sessionItemId,omitempty"`
	ItemTypeId         int32   `protobuf:"varint,2,opt,name=itemTypeId,proto3" json:"itemTypeId,omitempty"`
	Order              int32   `protobuf:"varint,3,opt,name=order,proto3" json:"order,omitempty"`
	Name               string  `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Description        string  `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	LearningStatus     int32   `protobuf:"varint,6,opt,name=learningStatus,proto3" json:"learningStatus,omitempty"`
	UserLearningStatus int32   `protobuf:"varint,7,opt,name=userLearningStatus,proto3" json:"userLearningStatus,omitempty"`
	CreatedAt          int32   `protobuf:"varint,8,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt          int32   `protobuf:"varint,9,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	PageIds            []int32 `protobuf:"varint,10,rep,packed,name=pageIds,proto3" json:"pageIds,omitempty"`
}

func (x *GetUserRecommendedSessionItemsResponse_SessionItem) Reset() {
	*x = GetUserRecommendedSessionItemsResponse_SessionItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dta_wed_api_v1_learning_learning_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserRecommendedSessionItemsResponse_SessionItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserRecommendedSessionItemsResponse_SessionItem) ProtoMessage() {}

func (x *GetUserRecommendedSessionItemsResponse_SessionItem) ProtoReflect() protoreflect.Message {
	mi := &file_dta_wed_api_v1_learning_learning_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserRecommendedSessionItemsResponse_SessionItem.ProtoReflect.Descriptor instead.
func (*GetUserRecommendedSessionItemsResponse_SessionItem) Descriptor() ([]byte, []int) {
	return file_dta_wed_api_v1_learning_learning_proto_rawDescGZIP(), []int{8, 0}
}

func (x *GetUserRecommendedSessionItemsResponse_SessionItem) GetSessionItemId() int32 {
	if x != nil {
		return x.SessionItemId
	}
	return 0
}

func (x *GetUserRecommendedSessionItemsResponse_SessionItem) GetItemTypeId() int32 {
	if x != nil {
		return x.ItemTypeId
	}
	return 0
}

func (x *GetUserRecommendedSessionItemsResponse_SessionItem) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *GetUserRecommendedSessionItemsResponse_SessionItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetUserRecommendedSessionItemsResponse_SessionItem) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GetUserRecommendedSessionItemsResponse_SessionItem) GetLearningStatus() int32 {
	if x != nil {
		return x.LearningStatus
	}
	return 0
}

func (x *GetUserRecommendedSessionItemsResponse_SessionItem) GetUserLearningStatus() int32 {
	if x != nil {
		return x.UserLearningStatus
	}
	return 0
}

func (x *GetUserRecommendedSessionItemsResponse_SessionItem) GetCreatedAt() int32 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *GetUserRecommendedSessionItemsResponse_SessionItem) GetUpdatedAt() int32 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *GetUserRecommendedSessionItemsResponse_SessionItem) GetPageIds() []int32 {
	if x != nil {
		return x.PageIds
	}
	return nil
}

var File_dta_wed_api_v1_learning_learning_proto protoreflect.FileDescriptor

var file_dta_wed_api_v1_learning_learning_proto_rawDesc = []byte{
	0x0a, 0x26, 0x64, 0x74, 0x61, 0x2d, 0x77, 0x65, 0x64, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31,
	0x2f, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2f, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69,
	0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x17, 0x64, 0x74, 0x61, 0x2e, 0x77, 0x65,
	0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e,
	0x67, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x6c, 0x0a, 0x24, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x42, 0x79, 0x43, 0x6f, 0x75, 0x72,
	0x73, 0x65, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x08, 0x63,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x1a, 0x02, 0x20, 0x00, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64,
	0x12, 0x1f, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x20, 0x00, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x22, 0x5d, 0x0a, 0x25, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x42, 0x79, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x64, 0x74, 0x61, 0x2e, 0x77,
	0x65, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69,
	0x6e, 0x67, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0xcd, 0x02, 0x0a, 0x0b, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d,
	0x12, 0x24, 0x0a, 0x0d, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x74, 0x65, 0x6d, 0x54, 0x79,
	0x70, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x69, 0x74, 0x65, 0x6d,
	0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x6c, 0x65, 0x61, 0x72,
	0x6e, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2e, 0x0a, 0x12, 0x75, 0x73,
	0x65, 0x72, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x75, 0x73, 0x65, 0x72, 0x4c, 0x65, 0x61, 0x72,
	0x6e, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x67, 0x65, 0x49, 0x64,
	0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x05, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x49, 0x64, 0x73,
	0x22, 0xf5, 0x02, 0x0a, 0x07, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x41, 0x70, 0x70, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x41, 0x70, 0x70, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x6c, 0x65,
	0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0e, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x2e, 0x0a, 0x12, 0x75, 0x73, 0x65, 0x72, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x69,
	0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12,
	0x75, 0x73, 0x65, 0x72, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x48,
	0x0a, 0x0c, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x0b,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x64, 0x74, 0x61, 0x2e, 0x77, 0x65, 0x64, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0c, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x55, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x44,
	0x6f, 0x6e, 0x65, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x74,
	0x65, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a,
	0x02, 0x20, 0x00, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x22,
	0xb3, 0x03, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x44, 0x6f, 0x6e, 0x65, 0x55, 0x73, 0x65, 0x72, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x68, 0x0a, 0x0c, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x74,
	0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x64, 0x74, 0x61, 0x2e,
	0x77, 0x65, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x6c, 0x65, 0x61, 0x72, 0x6e,
	0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x6f, 0x6e, 0x65, 0x55, 0x73, 0x65, 0x72, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x0c, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x1a, 0xa5, 0x02,
	0x0a, 0x0b, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x16, 0x0a,
	0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x69,
	0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70,
	0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x69, 0x74, 0x65, 0x6d, 0x54,
	0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x74, 0x65, 0x6d, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x69, 0x74, 0x65, 0x6d, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x28, 0x0a, 0x0f, 0x69, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x69, 0x74, 0x65, 0x6d, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0c, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x16, 0x0a,
	0x06, 0x64, 0x6f, 0x6e, 0x65, 0x41, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x64,
	0x6f, 0x6e, 0x65, 0x41, 0x74, 0x22, 0x73, 0x0a, 0x28, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1f, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x20, 0x00, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65,
	0x6d, 0x49, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0e, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x73, 0x22, 0x48, 0x0a, 0x25, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x65, 0x64,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x20, 0x00, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x22, 0xd9, 0x03, 0x0a, 0x26, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x5f, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4b, 0x2e,
	0x64, 0x74, 0x61, 0x2e, 0x77, 0x65, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x6c,
	0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x1a, 0xcd, 0x02, 0x0a, 0x0b, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d,
	0x12, 0x24, 0x0a, 0x0d, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x74, 0x65, 0x6d, 0x54, 0x79,
	0x70, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x69, 0x74, 0x65, 0x6d,
	0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x6c, 0x65, 0x61, 0x72,
	0x6e, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2e, 0x0a, 0x12, 0x75, 0x73,
	0x65, 0x72, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x75, 0x73, 0x65, 0x72, 0x4c, 0x65, 0x61, 0x72,
	0x6e, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x67, 0x65, 0x49, 0x64,
	0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x05, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x49, 0x64, 0x73,
	0x22, 0x67, 0x0a, 0x27, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0d, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x49,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x5a, 0x0a, 0x26, 0x47, 0x65, 0x74,
	0x53, 0x68, 0x75, 0x66, 0x66, 0x6c, 0x65, 0x64, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49,
	0x74, 0x65, 0x6d, 0x73, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x68, 0x75, 0x66, 0x66, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x68,
	0x75, 0x66, 0x66, 0x6c, 0x65, 0x22, 0x63, 0x0a, 0x27, 0x47, 0x65, 0x74, 0x53, 0x68, 0x75, 0x66,
	0x66, 0x6c, 0x65, 0x64, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x73,
	0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x38, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24,
	0x2e, 0x64, 0x74, 0x61, 0x2e, 0x77, 0x65, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x30, 0x0a, 0x16, 0x47, 0x65,
	0x74, 0x50, 0x61, 0x67, 0x65, 0x42, 0x79, 0x50, 0x61, 0x67, 0x65, 0x49, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x70, 0x61, 0x67, 0x65, 0x49, 0x64, 0x22, 0xf2, 0x01, 0x0a,
	0x17, 0x47, 0x65, 0x74, 0x50, 0x61, 0x67, 0x65, 0x42, 0x79, 0x50, 0x61, 0x67, 0x65, 0x49, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14,
	0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x49, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x2a, 0x0a, 0x10, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x6c, 0x65, 0x61, 0x72,
	0x6e, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x64, 0x12, 0x33, 0x0a, 0x08,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x73, 0x32, 0xb4, 0x0b, 0x0a, 0x0c, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x44, 0x61,
	0x74, 0x61, 0x12, 0xe3, 0x01, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x42, 0x79, 0x43, 0x6f, 0x75, 0x72,
	0x73, 0x65, 0x49, 0x64, 0x12, 0x3d, 0x2e, 0x64, 0x74, 0x61, 0x2e, 0x77, 0x65, 0x64, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65,
	0x6d, 0x73, 0x42, 0x79, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x3e, 0x2e, 0x64, 0x74, 0x61, 0x2e, 0x77, 0x65, 0x64, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d,
	0x73, 0x42, 0x79, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x43, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3d, 0x12, 0x3b, 0x2f, 0x76, 0x31,
	0x2f, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x2f, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x2f, 0x7b,
	0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x7d, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f,
	0x7b, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x7d, 0x12, 0xc3, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74,
	0x44, 0x6f, 0x6e, 0x65, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49,
	0x74, 0x65, 0x6d, 0x73, 0x12, 0x37, 0x2e, 0x64, 0x74, 0x61, 0x2e, 0x77, 0x65, 0x64, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x47,
	0x65, 0x74, 0x44, 0x6f, 0x6e, 0x65, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e,
	0x64, 0x74, 0x61, 0x2e, 0x77, 0x65, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x6c,
	0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x6f, 0x6e, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x35, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2f, 0x12,
	0x2d, 0x2f, 0x76, 0x31, 0x2f, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2f, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73,
	0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x7d, 0x2f, 0x64, 0x6f, 0x6e, 0x65, 0x12, 0xc3,
	0x01, 0x0a, 0x21, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49,
	0x74, 0x65, 0x6d, 0x73, 0x12, 0x41, 0x2e, 0x64, 0x74, 0x61, 0x2e, 0x77, 0x65, 0x64, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x64, 0x65, 0x64, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x43, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3d, 0x22, 0x38, 0x2f, 0x76, 0x31, 0x2f, 0x6c, 0x65, 0x61,
	0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2f, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65,
	0x6d, 0x73, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x7d, 0x3a, 0x01, 0x2a, 0x12, 0xe3, 0x01, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x3e, 0x2e, 0x64, 0x74, 0x61, 0x2e, 0x77, 0x65,
	0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e,
	0x67, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x64, 0x65, 0x64, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3f, 0x2e, 0x64, 0x74, 0x61, 0x2e, 0x77, 0x65,
	0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e,
	0x67, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x64, 0x65, 0x64, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x40, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3a,
	0x12, 0x38, 0x2f, 0x76, 0x31, 0x2f, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2f, 0x72,
	0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x2f, 0x75, 0x73, 0x65, 0x72,
	0x73, 0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x7d, 0x12, 0xce, 0x01, 0x0a, 0x20, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x64, 0x65, 0x64, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x40, 0x2e, 0x64, 0x74, 0x61, 0x2e, 0x77, 0x65, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x50, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x4a, 0x2a, 0x48, 0x2f, 0x76, 0x31, 0x2f, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2f,
	0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x2f, 0x7b, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x7d, 0x2f, 0x75, 0x73, 0x65,
	0x72, 0x73, 0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x7d, 0x12, 0xde, 0x01, 0x0a, 0x1f,
	0x47, 0x65, 0x74, 0x53, 0x68, 0x75, 0x66, 0x66, 0x6c, 0x65, 0x64, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x3f, 0x2e, 0x64, 0x74, 0x61, 0x2e, 0x77, 0x65, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x68, 0x75,
	0x66, 0x66, 0x6c, 0x65, 0x64, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d,
	0x73, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x40, 0x2e, 0x64, 0x74, 0x61, 0x2e, 0x77, 0x65, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x68,
	0x75, 0x66, 0x66, 0x6c, 0x65, 0x64, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65,
	0x6d, 0x73, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x38, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x32, 0x12, 0x30, 0x2f, 0x76, 0x31, 0x2f,
	0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x74, 0x65, 0x6d, 0x73, 0x2f, 0x73, 0x68, 0x75, 0x66, 0x66, 0x6c, 0x65, 0x2f, 0x75, 0x73,
	0x65, 0x72, 0x73, 0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x7d, 0x12, 0x99, 0x01, 0x0a,
	0x0f, 0x47, 0x65, 0x74, 0x50, 0x61, 0x67, 0x65, 0x42, 0x79, 0x50, 0x61, 0x67, 0x65, 0x49, 0x64,
	0x12, 0x2f, 0x2e, 0x64, 0x74, 0x61, 0x2e, 0x77, 0x65, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61,
	0x67, 0x65, 0x42, 0x79, 0x50, 0x61, 0x67, 0x65, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x30, 0x2e, 0x64, 0x74, 0x61, 0x2e, 0x77, 0x65, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x50,
	0x61, 0x67, 0x65, 0x42, 0x79, 0x50, 0x61, 0x67, 0x65, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x12, 0x1b, 0x2f, 0x76, 0x31,
	0x2f, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2f, 0x70, 0x61, 0x67, 0x65, 0x73, 0x2f,
	0x7b, 0x70, 0x61, 0x67, 0x65, 0x49, 0x64, 0x7d, 0x42, 0x48, 0x5a, 0x46, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x77, 0x65, 0x6c, 0x74, 0x63, 0x6f, 0x72, 0x70, 0x2f,
	0x64, 0x74, 0x61, 0x2d, 0x77, 0x65, 0x64, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x64, 0x74, 0x61, 0x2d, 0x77,
	0x65, 0x64, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69,
	0x6e, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_dta_wed_api_v1_learning_learning_proto_rawDescOnce sync.Once
	file_dta_wed_api_v1_learning_learning_proto_rawDescData = file_dta_wed_api_v1_learning_learning_proto_rawDesc
)

func file_dta_wed_api_v1_learning_learning_proto_rawDescGZIP() []byte {
	file_dta_wed_api_v1_learning_learning_proto_rawDescOnce.Do(func() {
		file_dta_wed_api_v1_learning_learning_proto_rawDescData = protoimpl.X.CompressGZIP(file_dta_wed_api_v1_learning_learning_proto_rawDescData)
	})
	return file_dta_wed_api_v1_learning_learning_proto_rawDescData
}

var file_dta_wed_api_v1_learning_learning_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_dta_wed_api_v1_learning_learning_proto_goTypes = []interface{}{
	(*GetUserSessionItemsByCourseIdRequest)(nil),               // 0: dta.wed.api.v1.learning.GetUserSessionItemsByCourseIdRequest
	(*GetUserSessionItemsByCourseIdResponse)(nil),              // 1: dta.wed.api.v1.learning.GetUserSessionItemsByCourseIdResponse
	(*SessionItem)(nil),                                        // 2: dta.wed.api.v1.learning.SessionItem
	(*Session)(nil),                                            // 3: dta.wed.api.v1.learning.Session
	(*GetDoneUserSessionItemsRequest)(nil),                     // 4: dta.wed.api.v1.learning.GetDoneUserSessionItemsRequest
	(*GetDoneUserSessionItemsResponse)(nil),                    // 5: dta.wed.api.v1.learning.GetDoneUserSessionItemsResponse
	(*CreateUserRecommendedSessionItemsRequest)(nil),           // 6: dta.wed.api.v1.learning.CreateUserRecommendedSessionItemsRequest
	(*GetUserRecommendedSessionItemsRequest)(nil),              // 7: dta.wed.api.v1.learning.GetUserRecommendedSessionItemsRequest
	(*GetUserRecommendedSessionItemsResponse)(nil),             // 8: dta.wed.api.v1.learning.GetUserRecommendedSessionItemsResponse
	(*DeleteUserRecommendedSessionItemRequest)(nil),            // 9: dta.wed.api.v1.learning.DeleteUserRecommendedSessionItemRequest
	(*GetShuffledSessionItemsByUserIdRequest)(nil),             // 10: dta.wed.api.v1.learning.GetShuffledSessionItemsByUserIdRequest
	(*GetShuffledSessionItemsByUserIdResponse)(nil),            // 11: dta.wed.api.v1.learning.GetShuffledSessionItemsByUserIdResponse
	(*GetPageByPageIdRequest)(nil),                             // 12: dta.wed.api.v1.learning.GetPageByPageIdRequest
	(*GetPageByPageIdResponse)(nil),                            // 13: dta.wed.api.v1.learning.GetPageByPageIdResponse
	(*GetDoneUserSessionItemsResponse_SessionItem)(nil),        // 14: dta.wed.api.v1.learning.GetDoneUserSessionItemsResponse.SessionItem
	(*GetUserRecommendedSessionItemsResponse_SessionItem)(nil), // 15: dta.wed.api.v1.learning.GetUserRecommendedSessionItemsResponse.SessionItem
	(*structpb.Struct)(nil),                                    // 16: google.protobuf.Struct
	(*emptypb.Empty)(nil),                                      // 17: google.protobuf.Empty
}
var file_dta_wed_api_v1_learning_learning_proto_depIdxs = []int32{
	3,  // 0: dta.wed.api.v1.learning.GetUserSessionItemsByCourseIdResponse.data:type_name -> dta.wed.api.v1.learning.Session
	2,  // 1: dta.wed.api.v1.learning.Session.sessionItems:type_name -> dta.wed.api.v1.learning.SessionItem
	14, // 2: dta.wed.api.v1.learning.GetDoneUserSessionItemsResponse.sessionItems:type_name -> dta.wed.api.v1.learning.GetDoneUserSessionItemsResponse.SessionItem
	15, // 3: dta.wed.api.v1.learning.GetUserRecommendedSessionItemsResponse.data:type_name -> dta.wed.api.v1.learning.GetUserRecommendedSessionItemsResponse.SessionItem
	2,  // 4: dta.wed.api.v1.learning.GetShuffledSessionItemsByUserIdResponse.data:type_name -> dta.wed.api.v1.learning.SessionItem
	16, // 5: dta.wed.api.v1.learning.GetPageByPageIdResponse.contents:type_name -> google.protobuf.Struct
	0,  // 6: dta.wed.api.v1.learning.LearningData.GetUserSessionItemsByCourseId:input_type -> dta.wed.api.v1.learning.GetUserSessionItemsByCourseIdRequest
	4,  // 7: dta.wed.api.v1.learning.LearningData.GetDoneUserSessionItems:input_type -> dta.wed.api.v1.learning.GetDoneUserSessionItemsRequest
	6,  // 8: dta.wed.api.v1.learning.LearningData.CreateUserRecommendedSessionItems:input_type -> dta.wed.api.v1.learning.CreateUserRecommendedSessionItemsRequest
	7,  // 9: dta.wed.api.v1.learning.LearningData.GetUserRecommendedSessionItems:input_type -> dta.wed.api.v1.learning.GetUserRecommendedSessionItemsRequest
	9,  // 10: dta.wed.api.v1.learning.LearningData.DeleteUserRecommendedSessionItem:input_type -> dta.wed.api.v1.learning.DeleteUserRecommendedSessionItemRequest
	10, // 11: dta.wed.api.v1.learning.LearningData.GetShuffledSessionItemsByUserId:input_type -> dta.wed.api.v1.learning.GetShuffledSessionItemsByUserIdRequest
	12, // 12: dta.wed.api.v1.learning.LearningData.GetPageByPageId:input_type -> dta.wed.api.v1.learning.GetPageByPageIdRequest
	1,  // 13: dta.wed.api.v1.learning.LearningData.GetUserSessionItemsByCourseId:output_type -> dta.wed.api.v1.learning.GetUserSessionItemsByCourseIdResponse
	5,  // 14: dta.wed.api.v1.learning.LearningData.GetDoneUserSessionItems:output_type -> dta.wed.api.v1.learning.GetDoneUserSessionItemsResponse
	17, // 15: dta.wed.api.v1.learning.LearningData.CreateUserRecommendedSessionItems:output_type -> google.protobuf.Empty
	8,  // 16: dta.wed.api.v1.learning.LearningData.GetUserRecommendedSessionItems:output_type -> dta.wed.api.v1.learning.GetUserRecommendedSessionItemsResponse
	17, // 17: dta.wed.api.v1.learning.LearningData.DeleteUserRecommendedSessionItem:output_type -> google.protobuf.Empty
	11, // 18: dta.wed.api.v1.learning.LearningData.GetShuffledSessionItemsByUserId:output_type -> dta.wed.api.v1.learning.GetShuffledSessionItemsByUserIdResponse
	13, // 19: dta.wed.api.v1.learning.LearningData.GetPageByPageId:output_type -> dta.wed.api.v1.learning.GetPageByPageIdResponse
	13, // [13:20] is the sub-list for method output_type
	6,  // [6:13] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_dta_wed_api_v1_learning_learning_proto_init() }
func file_dta_wed_api_v1_learning_learning_proto_init() {
	if File_dta_wed_api_v1_learning_learning_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_dta_wed_api_v1_learning_learning_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserSessionItemsByCourseIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dta_wed_api_v1_learning_learning_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserSessionItemsByCourseIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dta_wed_api_v1_learning_learning_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dta_wed_api_v1_learning_learning_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Session); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dta_wed_api_v1_learning_learning_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDoneUserSessionItemsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dta_wed_api_v1_learning_learning_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDoneUserSessionItemsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dta_wed_api_v1_learning_learning_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserRecommendedSessionItemsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dta_wed_api_v1_learning_learning_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserRecommendedSessionItemsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dta_wed_api_v1_learning_learning_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserRecommendedSessionItemsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dta_wed_api_v1_learning_learning_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteUserRecommendedSessionItemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dta_wed_api_v1_learning_learning_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetShuffledSessionItemsByUserIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dta_wed_api_v1_learning_learning_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetShuffledSessionItemsByUserIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dta_wed_api_v1_learning_learning_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPageByPageIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dta_wed_api_v1_learning_learning_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPageByPageIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dta_wed_api_v1_learning_learning_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDoneUserSessionItemsResponse_SessionItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dta_wed_api_v1_learning_learning_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserRecommendedSessionItemsResponse_SessionItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_dta_wed_api_v1_learning_learning_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_dta_wed_api_v1_learning_learning_proto_goTypes,
		DependencyIndexes: file_dta_wed_api_v1_learning_learning_proto_depIdxs,
		MessageInfos:      file_dta_wed_api_v1_learning_learning_proto_msgTypes,
	}.Build()
	File_dta_wed_api_v1_learning_learning_proto = out.File
	file_dta_wed_api_v1_learning_learning_proto_rawDesc = nil
	file_dta_wed_api_v1_learning_learning_proto_goTypes = nil
	file_dta_wed_api_v1_learning_learning_proto_depIdxs = nil
}
