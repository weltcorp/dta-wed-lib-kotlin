//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: dta-wed-api/v1/learning/learning.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import GRPC
import NIO
import NIOConcurrencyHelpers
import SwiftProtobuf


/// Usage: instantiate `Dta_Wed_Api_V1_Learning_LearningDataClient`, then call methods of this protocol to make API calls.
internal protocol Dta_Wed_Api_V1_Learning_LearningDataClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Dta_Wed_Api_V1_Learning_LearningDataClientInterceptorFactoryProtocol? { get }

  func getUserSessionItemsByCourseId(
    _ request: Dta_Wed_Api_V1_Learning_GetUserSessionItemsByCourseIdRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Dta_Wed_Api_V1_Learning_GetUserSessionItemsByCourseIdRequest, Dta_Wed_Api_V1_Learning_GetUserSessionItemsByCourseIdResponse>

  func getDoneUserSessionItems(
    _ request: Dta_Wed_Api_V1_Learning_GetDoneUserSessionItemsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Dta_Wed_Api_V1_Learning_GetDoneUserSessionItemsRequest, Dta_Wed_Api_V1_Learning_GetDoneUserSessionItemsResponse>

  func createUserRecommendedSessionItems(
    _ request: Dta_Wed_Api_V1_Learning_CreateUserRecommendedSessionItemsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Dta_Wed_Api_V1_Learning_CreateUserRecommendedSessionItemsRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func getUserRecommendedSessionItems(
    _ request: Dta_Wed_Api_V1_Learning_GetUserRecommendedSessionItemsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Dta_Wed_Api_V1_Learning_GetUserRecommendedSessionItemsRequest, Dta_Wed_Api_V1_Learning_GetUserRecommendedSessionItemsResponse>

  func deleteUserRecommendedSessionItem(
    _ request: Dta_Wed_Api_V1_Learning_DeleteUserRecommendedSessionItemRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Dta_Wed_Api_V1_Learning_DeleteUserRecommendedSessionItemRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func getShuffledSessionItemsByUserId(
    _ request: Dta_Wed_Api_V1_Learning_GetShuffledSessionItemsByUserIdRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Dta_Wed_Api_V1_Learning_GetShuffledSessionItemsByUserIdRequest, Dta_Wed_Api_V1_Learning_GetShuffledSessionItemsByUserIdResponse>

  func getPageByPageId(
    _ request: Dta_Wed_Api_V1_Learning_GetPageByPageIdRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Dta_Wed_Api_V1_Learning_GetPageByPageIdRequest, Dta_Wed_Api_V1_Learning_GetPageByPageIdResponse>
}

extension Dta_Wed_Api_V1_Learning_LearningDataClientProtocol {
  internal var serviceName: String {
    return "dta.wed.api.v1.learning.LearningData"
  }

  /// Unary call to GetUserSessionItemsByCourseId
  ///
  /// - Parameters:
  ///   - request: Request to send to GetUserSessionItemsByCourseId.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getUserSessionItemsByCourseId(
    _ request: Dta_Wed_Api_V1_Learning_GetUserSessionItemsByCourseIdRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Dta_Wed_Api_V1_Learning_GetUserSessionItemsByCourseIdRequest, Dta_Wed_Api_V1_Learning_GetUserSessionItemsByCourseIdResponse> {
    return self.makeUnaryCall(
      path: Dta_Wed_Api_V1_Learning_LearningDataClientMetadata.Methods.getUserSessionItemsByCourseId.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetUserSessionItemsByCourseIdInterceptors() ?? []
    )
  }

  /// Unary call to GetDoneUserSessionItems
  ///
  /// - Parameters:
  ///   - request: Request to send to GetDoneUserSessionItems.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getDoneUserSessionItems(
    _ request: Dta_Wed_Api_V1_Learning_GetDoneUserSessionItemsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Dta_Wed_Api_V1_Learning_GetDoneUserSessionItemsRequest, Dta_Wed_Api_V1_Learning_GetDoneUserSessionItemsResponse> {
    return self.makeUnaryCall(
      path: Dta_Wed_Api_V1_Learning_LearningDataClientMetadata.Methods.getDoneUserSessionItems.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetDoneUserSessionItemsInterceptors() ?? []
    )
  }

  /// Unary call to CreateUserRecommendedSessionItems
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateUserRecommendedSessionItems.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func createUserRecommendedSessionItems(
    _ request: Dta_Wed_Api_V1_Learning_CreateUserRecommendedSessionItemsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Dta_Wed_Api_V1_Learning_CreateUserRecommendedSessionItemsRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Dta_Wed_Api_V1_Learning_LearningDataClientMetadata.Methods.createUserRecommendedSessionItems.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateUserRecommendedSessionItemsInterceptors() ?? []
    )
  }

  /// Unary call to GetUserRecommendedSessionItems
  ///
  /// - Parameters:
  ///   - request: Request to send to GetUserRecommendedSessionItems.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getUserRecommendedSessionItems(
    _ request: Dta_Wed_Api_V1_Learning_GetUserRecommendedSessionItemsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Dta_Wed_Api_V1_Learning_GetUserRecommendedSessionItemsRequest, Dta_Wed_Api_V1_Learning_GetUserRecommendedSessionItemsResponse> {
    return self.makeUnaryCall(
      path: Dta_Wed_Api_V1_Learning_LearningDataClientMetadata.Methods.getUserRecommendedSessionItems.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetUserRecommendedSessionItemsInterceptors() ?? []
    )
  }

  /// Unary call to DeleteUserRecommendedSessionItem
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteUserRecommendedSessionItem.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func deleteUserRecommendedSessionItem(
    _ request: Dta_Wed_Api_V1_Learning_DeleteUserRecommendedSessionItemRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Dta_Wed_Api_V1_Learning_DeleteUserRecommendedSessionItemRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Dta_Wed_Api_V1_Learning_LearningDataClientMetadata.Methods.deleteUserRecommendedSessionItem.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteUserRecommendedSessionItemInterceptors() ?? []
    )
  }

  /// Unary call to GetShuffledSessionItemsByUserId
  ///
  /// - Parameters:
  ///   - request: Request to send to GetShuffledSessionItemsByUserId.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getShuffledSessionItemsByUserId(
    _ request: Dta_Wed_Api_V1_Learning_GetShuffledSessionItemsByUserIdRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Dta_Wed_Api_V1_Learning_GetShuffledSessionItemsByUserIdRequest, Dta_Wed_Api_V1_Learning_GetShuffledSessionItemsByUserIdResponse> {
    return self.makeUnaryCall(
      path: Dta_Wed_Api_V1_Learning_LearningDataClientMetadata.Methods.getShuffledSessionItemsByUserId.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetShuffledSessionItemsByUserIdInterceptors() ?? []
    )
  }

  /// Unary call to GetPageByPageId
  ///
  /// - Parameters:
  ///   - request: Request to send to GetPageByPageId.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getPageByPageId(
    _ request: Dta_Wed_Api_V1_Learning_GetPageByPageIdRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Dta_Wed_Api_V1_Learning_GetPageByPageIdRequest, Dta_Wed_Api_V1_Learning_GetPageByPageIdResponse> {
    return self.makeUnaryCall(
      path: Dta_Wed_Api_V1_Learning_LearningDataClientMetadata.Methods.getPageByPageId.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetPageByPageIdInterceptors() ?? []
    )
  }
}

#if compiler(>=5.6)
@available(*, deprecated)
extension Dta_Wed_Api_V1_Learning_LearningDataClient: @unchecked Sendable {}
#endif // compiler(>=5.6)

@available(*, deprecated, renamed: "Dta_Wed_Api_V1_Learning_LearningDataNIOClient")
internal final class Dta_Wed_Api_V1_Learning_LearningDataClient: Dta_Wed_Api_V1_Learning_LearningDataClientProtocol {
  private let lock = Lock()
  private var _defaultCallOptions: CallOptions
  private var _interceptors: Dta_Wed_Api_V1_Learning_LearningDataClientInterceptorFactoryProtocol?
  internal let channel: GRPCChannel
  internal var defaultCallOptions: CallOptions {
    get { self.lock.withLock { return self._defaultCallOptions } }
    set { self.lock.withLockVoid { self._defaultCallOptions = newValue } }
  }
  internal var interceptors: Dta_Wed_Api_V1_Learning_LearningDataClientInterceptorFactoryProtocol? {
    get { self.lock.withLock { return self._interceptors } }
    set { self.lock.withLockVoid { self._interceptors = newValue } }
  }

  /// Creates a client for the dta.wed.api.v1.learning.LearningData service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Dta_Wed_Api_V1_Learning_LearningDataClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self._defaultCallOptions = defaultCallOptions
    self._interceptors = interceptors
  }
}

internal struct Dta_Wed_Api_V1_Learning_LearningDataNIOClient: Dta_Wed_Api_V1_Learning_LearningDataClientProtocol {
  internal var channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Dta_Wed_Api_V1_Learning_LearningDataClientInterceptorFactoryProtocol?

  /// Creates a client for the dta.wed.api.v1.learning.LearningData service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Dta_Wed_Api_V1_Learning_LearningDataClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

#if compiler(>=5.6)
@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal protocol Dta_Wed_Api_V1_Learning_LearningDataAsyncClientProtocol: GRPCClient {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Dta_Wed_Api_V1_Learning_LearningDataClientInterceptorFactoryProtocol? { get }

  func makeGetUserSessionItemsByCourseIDCall(
    _ request: Dta_Wed_Api_V1_Learning_GetUserSessionItemsByCourseIdRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Dta_Wed_Api_V1_Learning_GetUserSessionItemsByCourseIdRequest, Dta_Wed_Api_V1_Learning_GetUserSessionItemsByCourseIdResponse>

  func makeGetDoneUserSessionItemsCall(
    _ request: Dta_Wed_Api_V1_Learning_GetDoneUserSessionItemsRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Dta_Wed_Api_V1_Learning_GetDoneUserSessionItemsRequest, Dta_Wed_Api_V1_Learning_GetDoneUserSessionItemsResponse>

  func makeCreateUserRecommendedSessionItemsCall(
    _ request: Dta_Wed_Api_V1_Learning_CreateUserRecommendedSessionItemsRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Dta_Wed_Api_V1_Learning_CreateUserRecommendedSessionItemsRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func makeGetUserRecommendedSessionItemsCall(
    _ request: Dta_Wed_Api_V1_Learning_GetUserRecommendedSessionItemsRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Dta_Wed_Api_V1_Learning_GetUserRecommendedSessionItemsRequest, Dta_Wed_Api_V1_Learning_GetUserRecommendedSessionItemsResponse>

  func makeDeleteUserRecommendedSessionItemCall(
    _ request: Dta_Wed_Api_V1_Learning_DeleteUserRecommendedSessionItemRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Dta_Wed_Api_V1_Learning_DeleteUserRecommendedSessionItemRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func makeGetShuffledSessionItemsByUserIDCall(
    _ request: Dta_Wed_Api_V1_Learning_GetShuffledSessionItemsByUserIdRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Dta_Wed_Api_V1_Learning_GetShuffledSessionItemsByUserIdRequest, Dta_Wed_Api_V1_Learning_GetShuffledSessionItemsByUserIdResponse>

  func makeGetPageByPageIDCall(
    _ request: Dta_Wed_Api_V1_Learning_GetPageByPageIdRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Dta_Wed_Api_V1_Learning_GetPageByPageIdRequest, Dta_Wed_Api_V1_Learning_GetPageByPageIdResponse>
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Dta_Wed_Api_V1_Learning_LearningDataAsyncClientProtocol {
  internal static var serviceDescriptor: GRPCServiceDescriptor {
    return Dta_Wed_Api_V1_Learning_LearningDataClientMetadata.serviceDescriptor
  }

  internal var interceptors: Dta_Wed_Api_V1_Learning_LearningDataClientInterceptorFactoryProtocol? {
    return nil
  }

  internal func makeGetUserSessionItemsByCourseIDCall(
    _ request: Dta_Wed_Api_V1_Learning_GetUserSessionItemsByCourseIdRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Dta_Wed_Api_V1_Learning_GetUserSessionItemsByCourseIdRequest, Dta_Wed_Api_V1_Learning_GetUserSessionItemsByCourseIdResponse> {
    return self.makeAsyncUnaryCall(
      path: Dta_Wed_Api_V1_Learning_LearningDataClientMetadata.Methods.getUserSessionItemsByCourseId.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetUserSessionItemsByCourseIdInterceptors() ?? []
    )
  }

  internal func makeGetDoneUserSessionItemsCall(
    _ request: Dta_Wed_Api_V1_Learning_GetDoneUserSessionItemsRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Dta_Wed_Api_V1_Learning_GetDoneUserSessionItemsRequest, Dta_Wed_Api_V1_Learning_GetDoneUserSessionItemsResponse> {
    return self.makeAsyncUnaryCall(
      path: Dta_Wed_Api_V1_Learning_LearningDataClientMetadata.Methods.getDoneUserSessionItems.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetDoneUserSessionItemsInterceptors() ?? []
    )
  }

  internal func makeCreateUserRecommendedSessionItemsCall(
    _ request: Dta_Wed_Api_V1_Learning_CreateUserRecommendedSessionItemsRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Dta_Wed_Api_V1_Learning_CreateUserRecommendedSessionItemsRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Dta_Wed_Api_V1_Learning_LearningDataClientMetadata.Methods.createUserRecommendedSessionItems.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateUserRecommendedSessionItemsInterceptors() ?? []
    )
  }

  internal func makeGetUserRecommendedSessionItemsCall(
    _ request: Dta_Wed_Api_V1_Learning_GetUserRecommendedSessionItemsRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Dta_Wed_Api_V1_Learning_GetUserRecommendedSessionItemsRequest, Dta_Wed_Api_V1_Learning_GetUserRecommendedSessionItemsResponse> {
    return self.makeAsyncUnaryCall(
      path: Dta_Wed_Api_V1_Learning_LearningDataClientMetadata.Methods.getUserRecommendedSessionItems.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetUserRecommendedSessionItemsInterceptors() ?? []
    )
  }

  internal func makeDeleteUserRecommendedSessionItemCall(
    _ request: Dta_Wed_Api_V1_Learning_DeleteUserRecommendedSessionItemRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Dta_Wed_Api_V1_Learning_DeleteUserRecommendedSessionItemRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Dta_Wed_Api_V1_Learning_LearningDataClientMetadata.Methods.deleteUserRecommendedSessionItem.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteUserRecommendedSessionItemInterceptors() ?? []
    )
  }

  internal func makeGetShuffledSessionItemsByUserIDCall(
    _ request: Dta_Wed_Api_V1_Learning_GetShuffledSessionItemsByUserIdRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Dta_Wed_Api_V1_Learning_GetShuffledSessionItemsByUserIdRequest, Dta_Wed_Api_V1_Learning_GetShuffledSessionItemsByUserIdResponse> {
    return self.makeAsyncUnaryCall(
      path: Dta_Wed_Api_V1_Learning_LearningDataClientMetadata.Methods.getShuffledSessionItemsByUserId.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetShuffledSessionItemsByUserIdInterceptors() ?? []
    )
  }

  internal func makeGetPageByPageIDCall(
    _ request: Dta_Wed_Api_V1_Learning_GetPageByPageIdRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Dta_Wed_Api_V1_Learning_GetPageByPageIdRequest, Dta_Wed_Api_V1_Learning_GetPageByPageIdResponse> {
    return self.makeAsyncUnaryCall(
      path: Dta_Wed_Api_V1_Learning_LearningDataClientMetadata.Methods.getPageByPageId.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetPageByPageIdInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Dta_Wed_Api_V1_Learning_LearningDataAsyncClientProtocol {
  internal func getUserSessionItemsByCourseId(
    _ request: Dta_Wed_Api_V1_Learning_GetUserSessionItemsByCourseIdRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Dta_Wed_Api_V1_Learning_GetUserSessionItemsByCourseIdResponse {
    return try await self.performAsyncUnaryCall(
      path: Dta_Wed_Api_V1_Learning_LearningDataClientMetadata.Methods.getUserSessionItemsByCourseId.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetUserSessionItemsByCourseIdInterceptors() ?? []
    )
  }

  internal func getDoneUserSessionItems(
    _ request: Dta_Wed_Api_V1_Learning_GetDoneUserSessionItemsRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Dta_Wed_Api_V1_Learning_GetDoneUserSessionItemsResponse {
    return try await self.performAsyncUnaryCall(
      path: Dta_Wed_Api_V1_Learning_LearningDataClientMetadata.Methods.getDoneUserSessionItems.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetDoneUserSessionItemsInterceptors() ?? []
    )
  }

  internal func createUserRecommendedSessionItems(
    _ request: Dta_Wed_Api_V1_Learning_CreateUserRecommendedSessionItemsRequest,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Dta_Wed_Api_V1_Learning_LearningDataClientMetadata.Methods.createUserRecommendedSessionItems.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateUserRecommendedSessionItemsInterceptors() ?? []
    )
  }

  internal func getUserRecommendedSessionItems(
    _ request: Dta_Wed_Api_V1_Learning_GetUserRecommendedSessionItemsRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Dta_Wed_Api_V1_Learning_GetUserRecommendedSessionItemsResponse {
    return try await self.performAsyncUnaryCall(
      path: Dta_Wed_Api_V1_Learning_LearningDataClientMetadata.Methods.getUserRecommendedSessionItems.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetUserRecommendedSessionItemsInterceptors() ?? []
    )
  }

  internal func deleteUserRecommendedSessionItem(
    _ request: Dta_Wed_Api_V1_Learning_DeleteUserRecommendedSessionItemRequest,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Dta_Wed_Api_V1_Learning_LearningDataClientMetadata.Methods.deleteUserRecommendedSessionItem.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteUserRecommendedSessionItemInterceptors() ?? []
    )
  }

  internal func getShuffledSessionItemsByUserId(
    _ request: Dta_Wed_Api_V1_Learning_GetShuffledSessionItemsByUserIdRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Dta_Wed_Api_V1_Learning_GetShuffledSessionItemsByUserIdResponse {
    return try await self.performAsyncUnaryCall(
      path: Dta_Wed_Api_V1_Learning_LearningDataClientMetadata.Methods.getShuffledSessionItemsByUserId.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetShuffledSessionItemsByUserIdInterceptors() ?? []
    )
  }

  internal func getPageByPageId(
    _ request: Dta_Wed_Api_V1_Learning_GetPageByPageIdRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Dta_Wed_Api_V1_Learning_GetPageByPageIdResponse {
    return try await self.performAsyncUnaryCall(
      path: Dta_Wed_Api_V1_Learning_LearningDataClientMetadata.Methods.getPageByPageId.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetPageByPageIdInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal struct Dta_Wed_Api_V1_Learning_LearningDataAsyncClient: Dta_Wed_Api_V1_Learning_LearningDataAsyncClientProtocol {
  internal var channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Dta_Wed_Api_V1_Learning_LearningDataClientInterceptorFactoryProtocol?

  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Dta_Wed_Api_V1_Learning_LearningDataClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

#endif // compiler(>=5.6)

internal protocol Dta_Wed_Api_V1_Learning_LearningDataClientInterceptorFactoryProtocol: GRPCSendable {

  /// - Returns: Interceptors to use when invoking 'getUserSessionItemsByCourseId'.
  func makeGetUserSessionItemsByCourseIdInterceptors() -> [ClientInterceptor<Dta_Wed_Api_V1_Learning_GetUserSessionItemsByCourseIdRequest, Dta_Wed_Api_V1_Learning_GetUserSessionItemsByCourseIdResponse>]

  /// - Returns: Interceptors to use when invoking 'getDoneUserSessionItems'.
  func makeGetDoneUserSessionItemsInterceptors() -> [ClientInterceptor<Dta_Wed_Api_V1_Learning_GetDoneUserSessionItemsRequest, Dta_Wed_Api_V1_Learning_GetDoneUserSessionItemsResponse>]

  /// - Returns: Interceptors to use when invoking 'createUserRecommendedSessionItems'.
  func makeCreateUserRecommendedSessionItemsInterceptors() -> [ClientInterceptor<Dta_Wed_Api_V1_Learning_CreateUserRecommendedSessionItemsRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'getUserRecommendedSessionItems'.
  func makeGetUserRecommendedSessionItemsInterceptors() -> [ClientInterceptor<Dta_Wed_Api_V1_Learning_GetUserRecommendedSessionItemsRequest, Dta_Wed_Api_V1_Learning_GetUserRecommendedSessionItemsResponse>]

  /// - Returns: Interceptors to use when invoking 'deleteUserRecommendedSessionItem'.
  func makeDeleteUserRecommendedSessionItemInterceptors() -> [ClientInterceptor<Dta_Wed_Api_V1_Learning_DeleteUserRecommendedSessionItemRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'getShuffledSessionItemsByUserId'.
  func makeGetShuffledSessionItemsByUserIdInterceptors() -> [ClientInterceptor<Dta_Wed_Api_V1_Learning_GetShuffledSessionItemsByUserIdRequest, Dta_Wed_Api_V1_Learning_GetShuffledSessionItemsByUserIdResponse>]

  /// - Returns: Interceptors to use when invoking 'getPageByPageId'.
  func makeGetPageByPageIdInterceptors() -> [ClientInterceptor<Dta_Wed_Api_V1_Learning_GetPageByPageIdRequest, Dta_Wed_Api_V1_Learning_GetPageByPageIdResponse>]
}

internal enum Dta_Wed_Api_V1_Learning_LearningDataClientMetadata {
  internal static let serviceDescriptor = GRPCServiceDescriptor(
    name: "LearningData",
    fullName: "dta.wed.api.v1.learning.LearningData",
    methods: [
      Dta_Wed_Api_V1_Learning_LearningDataClientMetadata.Methods.getUserSessionItemsByCourseId,
      Dta_Wed_Api_V1_Learning_LearningDataClientMetadata.Methods.getDoneUserSessionItems,
      Dta_Wed_Api_V1_Learning_LearningDataClientMetadata.Methods.createUserRecommendedSessionItems,
      Dta_Wed_Api_V1_Learning_LearningDataClientMetadata.Methods.getUserRecommendedSessionItems,
      Dta_Wed_Api_V1_Learning_LearningDataClientMetadata.Methods.deleteUserRecommendedSessionItem,
      Dta_Wed_Api_V1_Learning_LearningDataClientMetadata.Methods.getShuffledSessionItemsByUserId,
      Dta_Wed_Api_V1_Learning_LearningDataClientMetadata.Methods.getPageByPageId,
    ]
  )

  internal enum Methods {
    internal static let getUserSessionItemsByCourseId = GRPCMethodDescriptor(
      name: "GetUserSessionItemsByCourseId",
      path: "/dta.wed.api.v1.learning.LearningData/GetUserSessionItemsByCourseId",
      type: GRPCCallType.unary
    )

    internal static let getDoneUserSessionItems = GRPCMethodDescriptor(
      name: "GetDoneUserSessionItems",
      path: "/dta.wed.api.v1.learning.LearningData/GetDoneUserSessionItems",
      type: GRPCCallType.unary
    )

    internal static let createUserRecommendedSessionItems = GRPCMethodDescriptor(
      name: "CreateUserRecommendedSessionItems",
      path: "/dta.wed.api.v1.learning.LearningData/CreateUserRecommendedSessionItems",
      type: GRPCCallType.unary
    )

    internal static let getUserRecommendedSessionItems = GRPCMethodDescriptor(
      name: "GetUserRecommendedSessionItems",
      path: "/dta.wed.api.v1.learning.LearningData/GetUserRecommendedSessionItems",
      type: GRPCCallType.unary
    )

    internal static let deleteUserRecommendedSessionItem = GRPCMethodDescriptor(
      name: "DeleteUserRecommendedSessionItem",
      path: "/dta.wed.api.v1.learning.LearningData/DeleteUserRecommendedSessionItem",
      type: GRPCCallType.unary
    )

    internal static let getShuffledSessionItemsByUserId = GRPCMethodDescriptor(
      name: "GetShuffledSessionItemsByUserId",
      path: "/dta.wed.api.v1.learning.LearningData/GetShuffledSessionItemsByUserId",
      type: GRPCCallType.unary
    )

    internal static let getPageByPageId = GRPCMethodDescriptor(
      name: "GetPageByPageId",
      path: "/dta.wed.api.v1.learning.LearningData/GetPageByPageId",
      type: GRPCCallType.unary
    )
  }
}

