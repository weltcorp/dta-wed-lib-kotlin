// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: dta-wed-api/v1/patients/patients.proto

package patients

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetPatientsByAccountIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId  int32  `protobuf:"varint,1,opt,name=accountId,proto3" json:"accountId,omitempty"`
	Accesscode string `protobuf:"bytes,2,opt,name=accesscode,proto3" json:"accesscode,omitempty"`
	Email      string `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *GetPatientsByAccountIdRequest) Reset() {
	*x = GetPatientsByAccountIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dta_wed_api_v1_patients_patients_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPatientsByAccountIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPatientsByAccountIdRequest) ProtoMessage() {}

func (x *GetPatientsByAccountIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dta_wed_api_v1_patients_patients_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPatientsByAccountIdRequest.ProtoReflect.Descriptor instead.
func (*GetPatientsByAccountIdRequest) Descriptor() ([]byte, []int) {
	return file_dta_wed_api_v1_patients_patients_proto_rawDescGZIP(), []int{0}
}

func (x *GetPatientsByAccountIdRequest) GetAccountId() int32 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *GetPatientsByAccountIdRequest) GetAccesscode() string {
	if x != nil {
		return x.Accesscode
	}
	return ""
}

func (x *GetPatientsByAccountIdRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type GetPatientsByAccountIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Patients []*GetPatientsByAccountIdResponse_Patient `protobuf:"bytes,1,rep,name=patients,proto3" json:"patients,omitempty"`
}

func (x *GetPatientsByAccountIdResponse) Reset() {
	*x = GetPatientsByAccountIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dta_wed_api_v1_patients_patients_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPatientsByAccountIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPatientsByAccountIdResponse) ProtoMessage() {}

func (x *GetPatientsByAccountIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dta_wed_api_v1_patients_patients_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPatientsByAccountIdResponse.ProtoReflect.Descriptor instead.
func (*GetPatientsByAccountIdResponse) Descriptor() ([]byte, []int) {
	return file_dta_wed_api_v1_patients_patients_proto_rawDescGZIP(), []int{1}
}

func (x *GetPatientsByAccountIdResponse) GetPatients() []*GetPatientsByAccountIdResponse_Patient {
	if x != nil {
		return x.Patients
	}
	return nil
}

type GetPatientByUserIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int32 `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *GetPatientByUserIdRequest) Reset() {
	*x = GetPatientByUserIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dta_wed_api_v1_patients_patients_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPatientByUserIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPatientByUserIdRequest) ProtoMessage() {}

func (x *GetPatientByUserIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dta_wed_api_v1_patients_patients_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPatientByUserIdRequest.ProtoReflect.Descriptor instead.
func (*GetPatientByUserIdRequest) Descriptor() ([]byte, []int) {
	return file_dta_wed_api_v1_patients_patients_proto_rawDescGZIP(), []int{2}
}

func (x *GetPatientByUserIdRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type GetPatientByUserIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId        int32                                     `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Accesscode    string                                    `protobuf:"bytes,2,opt,name=accesscode,proto3" json:"accesscode,omitempty"`
	Email         string                                    `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	CreatedAt     int32                                     `protobuf:"varint,4,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	Status        int32                                     `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`
	Schedule      *GetPatientByUserIdResponse_Schedule      `protobuf:"bytes,6,opt,name=schedule,proto3" json:"schedule,omitempty"`
	MedicalDoctor *GetPatientByUserIdResponse_MedicalDoctor `protobuf:"bytes,7,opt,name=medicalDoctor,proto3" json:"medicalDoctor,omitempty"`
}

func (x *GetPatientByUserIdResponse) Reset() {
	*x = GetPatientByUserIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dta_wed_api_v1_patients_patients_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPatientByUserIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPatientByUserIdResponse) ProtoMessage() {}

func (x *GetPatientByUserIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dta_wed_api_v1_patients_patients_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPatientByUserIdResponse.ProtoReflect.Descriptor instead.
func (*GetPatientByUserIdResponse) Descriptor() ([]byte, []int) {
	return file_dta_wed_api_v1_patients_patients_proto_rawDescGZIP(), []int{3}
}

func (x *GetPatientByUserIdResponse) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetPatientByUserIdResponse) GetAccesscode() string {
	if x != nil {
		return x.Accesscode
	}
	return ""
}

func (x *GetPatientByUserIdResponse) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *GetPatientByUserIdResponse) GetCreatedAt() int32 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *GetPatientByUserIdResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GetPatientByUserIdResponse) GetSchedule() *GetPatientByUserIdResponse_Schedule {
	if x != nil {
		return x.Schedule
	}
	return nil
}

func (x *GetPatientByUserIdResponse) GetMedicalDoctor() *GetPatientByUserIdResponse_MedicalDoctor {
	if x != nil {
		return x.MedicalDoctor
	}
	return nil
}

type GetPatientsBySiteIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SiteId     int32  `protobuf:"varint,1,opt,name=siteId,proto3" json:"siteId,omitempty"`
	Accesscode string `protobuf:"bytes,2,opt,name=accesscode,proto3" json:"accesscode,omitempty"`
	Email      string `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	Limit      int32  `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	Page       int32  `protobuf:"varint,5,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *GetPatientsBySiteIdRequest) Reset() {
	*x = GetPatientsBySiteIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dta_wed_api_v1_patients_patients_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPatientsBySiteIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPatientsBySiteIdRequest) ProtoMessage() {}

func (x *GetPatientsBySiteIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dta_wed_api_v1_patients_patients_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPatientsBySiteIdRequest.ProtoReflect.Descriptor instead.
func (*GetPatientsBySiteIdRequest) Descriptor() ([]byte, []int) {
	return file_dta_wed_api_v1_patients_patients_proto_rawDescGZIP(), []int{4}
}

func (x *GetPatientsBySiteIdRequest) GetSiteId() int32 {
	if x != nil {
		return x.SiteId
	}
	return 0
}

func (x *GetPatientsBySiteIdRequest) GetAccesscode() string {
	if x != nil {
		return x.Accesscode
	}
	return ""
}

func (x *GetPatientsBySiteIdRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *GetPatientsBySiteIdRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetPatientsBySiteIdRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

type GetPatientsBySiteIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Unregistered []*GetPatientsBySiteIdResponse_UnregisteredAccesscode `protobuf:"bytes,1,rep,name=unregistered,proto3" json:"unregistered,omitempty"`
	Patients     []*GetPatientsBySiteIdResponse_Patient                `protobuf:"bytes,2,rep,name=patients,proto3" json:"patients,omitempty"`
}

func (x *GetPatientsBySiteIdResponse) Reset() {
	*x = GetPatientsBySiteIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dta_wed_api_v1_patients_patients_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPatientsBySiteIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPatientsBySiteIdResponse) ProtoMessage() {}

func (x *GetPatientsBySiteIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dta_wed_api_v1_patients_patients_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPatientsBySiteIdResponse.ProtoReflect.Descriptor instead.
func (*GetPatientsBySiteIdResponse) Descriptor() ([]byte, []int) {
	return file_dta_wed_api_v1_patients_patients_proto_rawDescGZIP(), []int{5}
}

func (x *GetPatientsBySiteIdResponse) GetUnregistered() []*GetPatientsBySiteIdResponse_UnregisteredAccesscode {
	if x != nil {
		return x.Unregistered
	}
	return nil
}

func (x *GetPatientsBySiteIdResponse) GetPatients() []*GetPatientsBySiteIdResponse_Patient {
	if x != nil {
		return x.Patients
	}
	return nil
}

type GetPatientMedicalRecordsByUserIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    int32 `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	StartDate int64 `protobuf:"varint,2,opt,name=startDate,proto3" json:"startDate,omitempty"`
	EndDate   int64 `protobuf:"varint,3,opt,name=endDate,proto3" json:"endDate,omitempty"`
}

func (x *GetPatientMedicalRecordsByUserIdRequest) Reset() {
	*x = GetPatientMedicalRecordsByUserIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dta_wed_api_v1_patients_patients_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPatientMedicalRecordsByUserIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPatientMedicalRecordsByUserIdRequest) ProtoMessage() {}

func (x *GetPatientMedicalRecordsByUserIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dta_wed_api_v1_patients_patients_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPatientMedicalRecordsByUserIdRequest.ProtoReflect.Descriptor instead.
func (*GetPatientMedicalRecordsByUserIdRequest) Descriptor() ([]byte, []int) {
	return file_dta_wed_api_v1_patients_patients_proto_rawDescGZIP(), []int{6}
}

func (x *GetPatientMedicalRecordsByUserIdRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetPatientMedicalRecordsByUserIdRequest) GetStartDate() int64 {
	if x != nil {
		return x.StartDate
	}
	return 0
}

func (x *GetPatientMedicalRecordsByUserIdRequest) GetEndDate() int64 {
	if x != nil {
		return x.EndDate
	}
	return 0
}

type DiaryItemAnswers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId      int32              `protobuf:"varint,1,opt,name=itemId,proto3" json:"itemId,omitempty"`
	ItemAnswers []*DiaryItemAnswer `protobuf:"bytes,2,rep,name=itemAnswers,proto3" json:"itemAnswers,omitempty"`
}

func (x *DiaryItemAnswers) Reset() {
	*x = DiaryItemAnswers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dta_wed_api_v1_patients_patients_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiaryItemAnswers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiaryItemAnswers) ProtoMessage() {}

func (x *DiaryItemAnswers) ProtoReflect() protoreflect.Message {
	mi := &file_dta_wed_api_v1_patients_patients_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiaryItemAnswers.ProtoReflect.Descriptor instead.
func (*DiaryItemAnswers) Descriptor() ([]byte, []int) {
	return file_dta_wed_api_v1_patients_patients_proto_rawDescGZIP(), []int{7}
}

func (x *DiaryItemAnswers) GetItemId() int32 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *DiaryItemAnswers) GetItemAnswers() []*DiaryItemAnswer {
	if x != nil {
		return x.ItemAnswers
	}
	return nil
}

type DiaryItemAnswer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemAnswerId      int32            `protobuf:"varint,1,opt,name=itemAnswerId,proto3" json:"itemAnswerId,omitempty"`
	ItemAnswerText    string           `protobuf:"bytes,2,opt,name=itemAnswerText,proto3" json:"itemAnswerText,omitempty"`
	ItemAnswerData    *structpb.Struct `protobuf:"bytes,3,opt,name=itemAnswerData,proto3" json:"itemAnswerData,omitempty"`
	OptionId          int32            `protobuf:"varint,4,opt,name=optionId,proto3" json:"optionId,omitempty"`
	OptionTitle       string           `protobuf:"bytes,5,opt,name=optionTitle,proto3" json:"optionTitle,omitempty"`
	OptionDescription string           `protobuf:"bytes,6,opt,name=optionDescription,proto3" json:"optionDescription,omitempty"`
	OptionData        *structpb.Struct `protobuf:"bytes,7,opt,name=optionData,proto3" json:"optionData,omitempty"`
}

func (x *DiaryItemAnswer) Reset() {
	*x = DiaryItemAnswer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dta_wed_api_v1_patients_patients_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiaryItemAnswer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiaryItemAnswer) ProtoMessage() {}

func (x *DiaryItemAnswer) ProtoReflect() protoreflect.Message {
	mi := &file_dta_wed_api_v1_patients_patients_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiaryItemAnswer.ProtoReflect.Descriptor instead.
func (*DiaryItemAnswer) Descriptor() ([]byte, []int) {
	return file_dta_wed_api_v1_patients_patients_proto_rawDescGZIP(), []int{8}
}

func (x *DiaryItemAnswer) GetItemAnswerId() int32 {
	if x != nil {
		return x.ItemAnswerId
	}
	return 0
}

func (x *DiaryItemAnswer) GetItemAnswerText() string {
	if x != nil {
		return x.ItemAnswerText
	}
	return ""
}

func (x *DiaryItemAnswer) GetItemAnswerData() *structpb.Struct {
	if x != nil {
		return x.ItemAnswerData
	}
	return nil
}

func (x *DiaryItemAnswer) GetOptionId() int32 {
	if x != nil {
		return x.OptionId
	}
	return 0
}

func (x *DiaryItemAnswer) GetOptionTitle() string {
	if x != nil {
		return x.OptionTitle
	}
	return ""
}

func (x *DiaryItemAnswer) GetOptionDescription() string {
	if x != nil {
		return x.OptionDescription
	}
	return ""
}

func (x *DiaryItemAnswer) GetOptionData() *structpb.Struct {
	if x != nil {
		return x.OptionData
	}
	return nil
}

type GetPatientMedicalRecordsByUserIdRequestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PeriodOfDates *GetPatientMedicalRecordsByUserIdRequestResponse_PeriodOfDates `protobuf:"bytes,1,opt,name=periodOfDates,proto3" json:"periodOfDates,omitempty"`
	Data          []*GetPatientMedicalRecordsByUserIdRequestResponse_Data        `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetPatientMedicalRecordsByUserIdRequestResponse) Reset() {
	*x = GetPatientMedicalRecordsByUserIdRequestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dta_wed_api_v1_patients_patients_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPatientMedicalRecordsByUserIdRequestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPatientMedicalRecordsByUserIdRequestResponse) ProtoMessage() {}

func (x *GetPatientMedicalRecordsByUserIdRequestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dta_wed_api_v1_patients_patients_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPatientMedicalRecordsByUserIdRequestResponse.ProtoReflect.Descriptor instead.
func (*GetPatientMedicalRecordsByUserIdRequestResponse) Descriptor() ([]byte, []int) {
	return file_dta_wed_api_v1_patients_patients_proto_rawDescGZIP(), []int{9}
}

func (x *GetPatientMedicalRecordsByUserIdRequestResponse) GetPeriodOfDates() *GetPatientMedicalRecordsByUserIdRequestResponse_PeriodOfDates {
	if x != nil {
		return x.PeriodOfDates
	}
	return nil
}

func (x *GetPatientMedicalRecordsByUserIdRequestResponse) GetData() []*GetPatientMedicalRecordsByUserIdRequestResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetDropoutPatientsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SiteId int32 `protobuf:"varint,1,opt,name=siteId,proto3" json:"siteId,omitempty"`
}

func (x *GetDropoutPatientsRequest) Reset() {
	*x = GetDropoutPatientsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dta_wed_api_v1_patients_patients_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDropoutPatientsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDropoutPatientsRequest) ProtoMessage() {}

func (x *GetDropoutPatientsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dta_wed_api_v1_patients_patients_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDropoutPatientsRequest.ProtoReflect.Descriptor instead.
func (*GetDropoutPatientsRequest) Descriptor() ([]byte, []int) {
	return file_dta_wed_api_v1_patients_patients_proto_rawDescGZIP(), []int{10}
}

func (x *GetDropoutPatientsRequest) GetSiteId() int32 {
	if x != nil {
		return x.SiteId
	}
	return 0
}

type GetDropoutPatientsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count int32                                 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	Data  []*GetDropoutPatientsResponse_Patient `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetDropoutPatientsResponse) Reset() {
	*x = GetDropoutPatientsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dta_wed_api_v1_patients_patients_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDropoutPatientsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDropoutPatientsResponse) ProtoMessage() {}

func (x *GetDropoutPatientsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dta_wed_api_v1_patients_patients_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDropoutPatientsResponse.ProtoReflect.Descriptor instead.
func (*GetDropoutPatientsResponse) Descriptor() ([]byte, []int) {
	return file_dta_wed_api_v1_patients_patients_proto_rawDescGZIP(), []int{11}
}

func (x *GetDropoutPatientsResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *GetDropoutPatientsResponse) GetData() []*GetDropoutPatientsResponse_Patient {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetPatientsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit      int32  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Page       int32  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	SortBy     string `protobuf:"bytes,3,opt,name=sortBy,proto3" json:"sortBy,omitempty"`
	Asc        string `protobuf:"bytes,4,opt,name=asc,proto3" json:"asc,omitempty"`
	SiteId     int32  `protobuf:"varint,5,opt,name=siteId,proto3" json:"siteId,omitempty"`
	Accesscode string `protobuf:"bytes,6,opt,name=accesscode,proto3" json:"accesscode,omitempty"`
	Email      string `protobuf:"bytes,7,opt,name=email,proto3" json:"email,omitempty"`
	Status     int32  `protobuf:"varint,8,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *GetPatientsRequest) Reset() {
	*x = GetPatientsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dta_wed_api_v1_patients_patients_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPatientsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPatientsRequest) ProtoMessage() {}

func (x *GetPatientsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dta_wed_api_v1_patients_patients_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPatientsRequest.ProtoReflect.Descriptor instead.
func (*GetPatientsRequest) Descriptor() ([]byte, []int) {
	return file_dta_wed_api_v1_patients_patients_proto_rawDescGZIP(), []int{12}
}

func (x *GetPatientsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetPatientsRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetPatientsRequest) GetSortBy() string {
	if x != nil {
		return x.SortBy
	}
	return ""
}

func (x *GetPatientsRequest) GetAsc() string {
	if x != nil {
		return x.Asc
	}
	return ""
}

func (x *GetPatientsRequest) GetSiteId() int32 {
	if x != nil {
		return x.SiteId
	}
	return 0
}

func (x *GetPatientsRequest) GetAccesscode() string {
	if x != nil {
		return x.Accesscode
	}
	return ""
}

func (x *GetPatientsRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *GetPatientsRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type GetPatientsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalCount int32                          `protobuf:"varint,1,opt,name=totalCount,proto3" json:"totalCount,omitempty"`
	Page       int32                          `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	Count      int32                          `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
	Patients   []*GetPatientsResponse_Patient `protobuf:"bytes,4,rep,name=patients,proto3" json:"patients,omitempty"`
}

func (x *GetPatientsResponse) Reset() {
	*x = GetPatientsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dta_wed_api_v1_patients_patients_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPatientsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPatientsResponse) ProtoMessage() {}

func (x *GetPatientsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dta_wed_api_v1_patients_patients_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPatientsResponse.ProtoReflect.Descriptor instead.
func (*GetPatientsResponse) Descriptor() ([]byte, []int) {
	return file_dta_wed_api_v1_patients_patients_proto_rawDescGZIP(), []int{13}
}

func (x *GetPatientsResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *GetPatientsResponse) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetPatientsResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *GetPatientsResponse) GetPatients() []*GetPatientsResponse_Patient {
	if x != nil {
		return x.Patients
	}
	return nil
}

type GetPatientOverviewRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     int32  `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Accesscode string `protobuf:"bytes,2,opt,name=accesscode,proto3" json:"accesscode,omitempty"`
}

func (x *GetPatientOverviewRequest) Reset() {
	*x = GetPatientOverviewRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dta_wed_api_v1_patients_patients_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPatientOverviewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPatientOverviewRequest) ProtoMessage() {}

func (x *GetPatientOverviewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dta_wed_api_v1_patients_patients_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPatientOverviewRequest.ProtoReflect.Descriptor instead.
func (*GetPatientOverviewRequest) Descriptor() ([]byte, []int) {
	return file_dta_wed_api_v1_patients_patients_proto_rawDescGZIP(), []int{14}
}

func (x *GetPatientOverviewRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetPatientOverviewRequest) GetAccesscode() string {
	if x != nil {
		return x.Accesscode
	}
	return ""
}

type GetPatientOverviewResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Accesscode     string                                    `protobuf:"bytes,1,opt,name=accesscode,proto3" json:"accesscode,omitempty"`
	UserId         int32                                     `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`
	Email          string                                    `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	Status         int32                                     `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`
	GroupId        int32                                     `protobuf:"varint,5,opt,name=groupId,proto3" json:"groupId,omitempty"`
	SiteId         int32                                     `protobuf:"varint,6,opt,name=siteId,proto3" json:"siteId,omitempty"`
	StartedAt      int32                                     `protobuf:"varint,7,opt,name=startedAt,proto3" json:"startedAt,omitempty"`
	NthDay         int32                                     `protobuf:"varint,9,opt,name=nthDay,proto3" json:"nthDay,omitempty"`
	AppAccessDays  int32                                     `protobuf:"varint,10,opt,name=appAccessDays,proto3" json:"appAccessDays,omitempty"`
	DiaryDoneCount int32                                     `protobuf:"varint,11,opt,name=diaryDoneCount,proto3" json:"diaryDoneCount,omitempty"`
	Visits         []*GetPatientOverviewResponse_Visit       `protobuf:"bytes,12,rep,name=visits,proto3" json:"visits,omitempty"`
	StatusNote     *GetPatientOverviewResponse_StatusNote    `protobuf:"bytes,13,opt,name=statusNote,proto3" json:"statusNote,omitempty"`
	Lessons        *GetPatientOverviewResponse_Lesson        `protobuf:"bytes,14,opt,name=lessons,proto3" json:"lessons,omitempty"`
	MedicalDoctor  *GetPatientOverviewResponse_MedicalDoctor `protobuf:"bytes,15,opt,name=medicalDoctor,proto3" json:"medicalDoctor,omitempty"`
}

func (x *GetPatientOverviewResponse) Reset() {
	*x = GetPatientOverviewResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dta_wed_api_v1_patients_patients_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPatientOverviewResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPatientOverviewResponse) ProtoMessage() {}

func (x *GetPatientOverviewResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dta_wed_api_v1_patients_patients_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPatientOverviewResponse.ProtoReflect.Descriptor instead.
func (*GetPatientOverviewResponse) Descriptor() ([]byte, []int) {
	return file_dta_wed_api_v1_patients_patients_proto_rawDescGZIP(), []int{15}
}

func (x *GetPatientOverviewResponse) GetAccesscode() string {
	if x != nil {
		return x.Accesscode
	}
	return ""
}

func (x *GetPatientOverviewResponse) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetPatientOverviewResponse) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *GetPatientOverviewResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GetPatientOverviewResponse) GetGroupId() int32 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *GetPatientOverviewResponse) GetSiteId() int32 {
	if x != nil {
		return x.SiteId
	}
	return 0
}

func (x *GetPatientOverviewResponse) GetStartedAt() int32 {
	if x != nil {
		return x.StartedAt
	}
	return 0
}

func (x *GetPatientOverviewResponse) GetNthDay() int32 {
	if x != nil {
		return x.NthDay
	}
	return 0
}

func (x *GetPatientOverviewResponse) GetAppAccessDays() int32 {
	if x != nil {
		return x.AppAccessDays
	}
	return 0
}

func (x *GetPatientOverviewResponse) GetDiaryDoneCount() int32 {
	if x != nil {
		return x.DiaryDoneCount
	}
	return 0
}

func (x *GetPatientOverviewResponse) GetVisits() []*GetPatientOverviewResponse_Visit {
	if x != nil {
		return x.Visits
	}
	return nil
}

func (x *GetPatientOverviewResponse) GetStatusNote() *GetPatientOverviewResponse_StatusNote {
	if x != nil {
		return x.StatusNote
	}
	return nil
}

func (x *GetPatientOverviewResponse) GetLessons() *GetPatientOverviewResponse_Lesson {
	if x != nil {
		return x.Lessons
	}
	return nil
}

func (x *GetPatientOverviewResponse) GetMedicalDoctor() *GetPatientOverviewResponse_MedicalDoctor {
	if x != nil {
		return x.MedicalDoctor
	}
	return nil
}

type GetPatientClinicalRecordsByUserIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int32 `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *GetPatientClinicalRecordsByUserIdRequest) Reset() {
	*x = GetPatientClinicalRecordsByUserIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dta_wed_api_v1_patients_patients_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPatientClinicalRecordsByUserIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPatientClinicalRecordsByUserIdRequest) ProtoMessage() {}

func (x *GetPatientClinicalRecordsByUserIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dta_wed_api_v1_patients_patients_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPatientClinicalRecordsByUserIdRequest.ProtoReflect.Descriptor instead.
func (*GetPatientClinicalRecordsByUserIdRequest) Descriptor() ([]byte, []int) {
	return file_dta_wed_api_v1_patients_patients_proto_rawDescGZIP(), []int{16}
}

func (x *GetPatientClinicalRecordsByUserIdRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type GetPatientClinicalRecordsByUserIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count int32                                             `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	Data  []*GetPatientClinicalRecordsByUserIdResponse_Data `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetPatientClinicalRecordsByUserIdResponse) Reset() {
	*x = GetPatientClinicalRecordsByUserIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dta_wed_api_v1_patients_patients_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPatientClinicalRecordsByUserIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPatientClinicalRecordsByUserIdResponse) ProtoMessage() {}

func (x *GetPatientClinicalRecordsByUserIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dta_wed_api_v1_patients_patients_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPatientClinicalRecordsByUserIdResponse.ProtoReflect.Descriptor instead.
func (*GetPatientClinicalRecordsByUserIdResponse) Descriptor() ([]byte, []int) {
	return file_dta_wed_api_v1_patients_patients_proto_rawDescGZIP(), []int{17}
}

func (x *GetPatientClinicalRecordsByUserIdResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *GetPatientClinicalRecordsByUserIdResponse) GetData() []*GetPatientClinicalRecordsByUserIdResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type DisablePatientByUserIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int32  `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Status int32  `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	Note   string `protobuf:"bytes,3,opt,name=note,proto3" json:"note,omitempty"`
}

func (x *DisablePatientByUserIdRequest) Reset() {
	*x = DisablePatientByUserIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dta_wed_api_v1_patients_patients_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisablePatientByUserIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisablePatientByUserIdRequest) ProtoMessage() {}

func (x *DisablePatientByUserIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dta_wed_api_v1_patients_patients_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisablePatientByUserIdRequest.ProtoReflect.Descriptor instead.
func (*DisablePatientByUserIdRequest) Descriptor() ([]byte, []int) {
	return file_dta_wed_api_v1_patients_patients_proto_rawDescGZIP(), []int{18}
}

func (x *DisablePatientByUserIdRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *DisablePatientByUserIdRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *DisablePatientByUserIdRequest) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

type GetPatientsByVisitIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VisitId int32 `protobuf:"varint,1,opt,name=visitId,proto3" json:"visitId,omitempty"`
	SiteId  int32 `protobuf:"varint,2,opt,name=siteId,proto3" json:"siteId,omitempty"`
}

func (x *GetPatientsByVisitIdRequest) Reset() {
	*x = GetPatientsByVisitIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dta_wed_api_v1_patients_patients_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPatientsByVisitIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPatientsByVisitIdRequest) ProtoMessage() {}

func (x *GetPatientsByVisitIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dta_wed_api_v1_patients_patients_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPatientsByVisitIdRequest.ProtoReflect.Descriptor instead.
func (*GetPatientsByVisitIdRequest) Descriptor() ([]byte, []int) {
	return file_dta_wed_api_v1_patients_patients_proto_rawDescGZIP(), []int{19}
}

func (x *GetPatientsByVisitIdRequest) GetVisitId() int32 {
	if x != nil {
		return x.VisitId
	}
	return 0
}

func (x *GetPatientsByVisitIdRequest) GetSiteId() int32 {
	if x != nil {
		return x.SiteId
	}
	return 0
}

type GetPatientsByVisitIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count int32                                `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	Users []*GetPatientsByVisitIdResponse_User `protobuf:"bytes,2,rep,name=users,proto3" json:"users,omitempty"`
}

func (x *GetPatientsByVisitIdResponse) Reset() {
	*x = GetPatientsByVisitIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dta_wed_api_v1_patients_patients_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPatientsByVisitIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPatientsByVisitIdResponse) ProtoMessage() {}

func (x *GetPatientsByVisitIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dta_wed_api_v1_patients_patients_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPatientsByVisitIdResponse.ProtoReflect.Descriptor instead.
func (*GetPatientsByVisitIdResponse) Descriptor() ([]byte, []int) {
	return file_dta_wed_api_v1_patients_patients_proto_rawDescGZIP(), []int{20}
}

func (x *GetPatientsByVisitIdResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *GetPatientsByVisitIdResponse) GetUsers() []*GetPatientsByVisitIdResponse_User {
	if x != nil {
		return x.Users
	}
	return nil
}

type GetPatientsByAccountIdResponse_Patient struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     int32                  `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Accesscode string                 `protobuf:"bytes,2,opt,name=accesscode,proto3" json:"accesscode,omitempty"`
	Email      string                 `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	CreatedAt  *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	Status     int32                  `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *GetPatientsByAccountIdResponse_Patient) Reset() {
	*x = GetPatientsByAccountIdResponse_Patient{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dta_wed_api_v1_patients_patients_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPatientsByAccountIdResponse_Patient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPatientsByAccountIdResponse_Patient) ProtoMessage() {}

func (x *GetPatientsByAccountIdResponse_Patient) ProtoReflect() protoreflect.Message {
	mi := &file_dta_wed_api_v1_patients_patients_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPatientsByAccountIdResponse_Patient.ProtoReflect.Descriptor instead.
func (*GetPatientsByAccountIdResponse_Patient) Descriptor() ([]byte, []int) {
	return file_dta_wed_api_v1_patients_patients_proto_rawDescGZIP(), []int{1, 0}
}

func (x *GetPatientsByAccountIdResponse_Patient) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetPatientsByAccountIdResponse_Patient) GetAccesscode() string {
	if x != nil {
		return x.Accesscode
	}
	return ""
}

func (x *GetPatientsByAccountIdResponse_Patient) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *GetPatientsByAccountIdResponse_Patient) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *GetPatientsByAccountIdResponse_Patient) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type GetPatientByUserIdResponse_Schedule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartAt int32 `protobuf:"varint,1,opt,name=startAt,proto3" json:"startAt,omitempty"`
	EndAt   int32 `protobuf:"varint,2,opt,name=endAt,proto3" json:"endAt,omitempty"`
	UserDay int32 `protobuf:"varint,3,opt,name=userDay,proto3" json:"userDay,omitempty"`
}

func (x *GetPatientByUserIdResponse_Schedule) Reset() {
	*x = GetPatientByUserIdResponse_Schedule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dta_wed_api_v1_patients_patients_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPatientByUserIdResponse_Schedule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPatientByUserIdResponse_Schedule) ProtoMessage() {}

func (x *GetPatientByUserIdResponse_Schedule) ProtoReflect() protoreflect.Message {
	mi := &file_dta_wed_api_v1_patients_patients_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPatientByUserIdResponse_Schedule.ProtoReflect.Descriptor instead.
func (*GetPatientByUserIdResponse_Schedule) Descriptor() ([]byte, []int) {
	return file_dta_wed_api_v1_patients_patients_proto_rawDescGZIP(), []int{3, 0}
}

func (x *GetPatientByUserIdResponse_Schedule) GetStartAt() int32 {
	if x != nil {
		return x.StartAt
	}
	return 0
}

func (x *GetPatientByUserIdResponse_Schedule) GetEndAt() int32 {
	if x != nil {
		return x.EndAt
	}
	return 0
}

func (x *GetPatientByUserIdResponse_Schedule) GetUserDay() int32 {
	if x != nil {
		return x.UserDay
	}
	return 0
}

type GetPatientByUserIdResponse_MedicalDoctor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId int32  `protobuf:"varint,1,opt,name=accountId,proto3" json:"accountId,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Email     string `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *GetPatientByUserIdResponse_MedicalDoctor) Reset() {
	*x = GetPatientByUserIdResponse_MedicalDoctor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dta_wed_api_v1_patients_patients_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPatientByUserIdResponse_MedicalDoctor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPatientByUserIdResponse_MedicalDoctor) ProtoMessage() {}

func (x *GetPatientByUserIdResponse_MedicalDoctor) ProtoReflect() protoreflect.Message {
	mi := &file_dta_wed_api_v1_patients_patients_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPatientByUserIdResponse_MedicalDoctor.ProtoReflect.Descriptor instead.
func (*GetPatientByUserIdResponse_MedicalDoctor) Descriptor() ([]byte, []int) {
	return file_dta_wed_api_v1_patients_patients_proto_rawDescGZIP(), []int{3, 1}
}

func (x *GetPatientByUserIdResponse_MedicalDoctor) GetAccountId() int32 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *GetPatientByUserIdResponse_MedicalDoctor) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetPatientByUserIdResponse_MedicalDoctor) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type GetPatientsBySiteIdResponse_Patient struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     int32  `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Accesscode string `protobuf:"bytes,2,opt,name=accesscode,proto3" json:"accesscode,omitempty"`
	Email      string `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	CreatedAt  int32  `protobuf:"varint,4,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	Status     int32  `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *GetPatientsBySiteIdResponse_Patient) Reset() {
	*x = GetPatientsBySiteIdResponse_Patient{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dta_wed_api_v1_patients_patients_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPatientsBySiteIdResponse_Patient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPatientsBySiteIdResponse_Patient) ProtoMessage() {}

func (x *GetPatientsBySiteIdResponse_Patient) ProtoReflect() protoreflect.Message {
	mi := &file_dta_wed_api_v1_patients_patients_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPatientsBySiteIdResponse_Patient.ProtoReflect.Descriptor instead.
func (*GetPatientsBySiteIdResponse_Patient) Descriptor() ([]byte, []int) {
	return file_dta_wed_api_v1_patients_patients_proto_rawDescGZIP(), []int{5, 0}
}

func (x *GetPatientsBySiteIdResponse_Patient) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetPatientsBySiteIdResponse_Patient) GetAccesscode() string {
	if x != nil {
		return x.Accesscode
	}
	return ""
}

func (x *GetPatientsBySiteIdResponse_Patient) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *GetPatientsBySiteIdResponse_Patient) GetCreatedAt() int32 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *GetPatientsBySiteIdResponse_Patient) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type GetPatientsBySiteIdResponse_UnregisteredAccesscode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Accesscode          string `protobuf:"bytes,1,opt,name=accesscode,proto3" json:"accesscode,omitempty"`
	Email               string `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	AccesscodeCreatedAt int32  `protobuf:"varint,3,opt,name=accesscodeCreatedAt,proto3" json:"accesscodeCreatedAt,omitempty"`
}

func (x *GetPatientsBySiteIdResponse_UnregisteredAccesscode) Reset() {
	*x = GetPatientsBySiteIdResponse_UnregisteredAccesscode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dta_wed_api_v1_patients_patients_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPatientsBySiteIdResponse_UnregisteredAccesscode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPatientsBySiteIdResponse_UnregisteredAccesscode) ProtoMessage() {}

func (x *GetPatientsBySiteIdResponse_UnregisteredAccesscode) ProtoReflect() protoreflect.Message {
	mi := &file_dta_wed_api_v1_patients_patients_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPatientsBySiteIdResponse_UnregisteredAccesscode.ProtoReflect.Descriptor instead.
func (*GetPatientsBySiteIdResponse_UnregisteredAccesscode) Descriptor() ([]byte, []int) {
	return file_dta_wed_api_v1_patients_patients_proto_rawDescGZIP(), []int{5, 1}
}

func (x *GetPatientsBySiteIdResponse_UnregisteredAccesscode) GetAccesscode() string {
	if x != nil {
		return x.Accesscode
	}
	return ""
}

func (x *GetPatientsBySiteIdResponse_UnregisteredAccesscode) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *GetPatientsBySiteIdResponse_UnregisteredAccesscode) GetAccesscodeCreatedAt() int32 {
	if x != nil {
		return x.AccesscodeCreatedAt
	}
	return 0
}

type GetPatientMedicalRecordsByUserIdRequestResponse_Diary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date     int32               `protobuf:"varint,1,opt,name=date,proto3" json:"date,omitempty"`
	AnswerId int32               `protobuf:"varint,2,opt,name=answerId,proto3" json:"answerId,omitempty"`
	DiaryId  int32               `protobuf:"varint,3,opt,name=diaryId,proto3" json:"diaryId,omitempty"`
	Items    []*DiaryItemAnswers `protobuf:"bytes,4,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *GetPatientMedicalRecordsByUserIdRequestResponse_Diary) Reset() {
	*x = GetPatientMedicalRecordsByUserIdRequestResponse_Diary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dta_wed_api_v1_patients_patients_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPatientMedicalRecordsByUserIdRequestResponse_Diary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPatientMedicalRecordsByUserIdRequestResponse_Diary) ProtoMessage() {}

func (x *GetPatientMedicalRecordsByUserIdRequestResponse_Diary) ProtoReflect() protoreflect.Message {
	mi := &file_dta_wed_api_v1_patients_patients_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPatientMedicalRecordsByUserIdRequestResponse_Diary.ProtoReflect.Descriptor instead.
func (*GetPatientMedicalRecordsByUserIdRequestResponse_Diary) Descriptor() ([]byte, []int) {
	return file_dta_wed_api_v1_patients_patients_proto_rawDescGZIP(), []int{9, 0}
}

func (x *GetPatientMedicalRecordsByUserIdRequestResponse_Diary) GetDate() int32 {
	if x != nil {
		return x.Date
	}
	return 0
}

func (x *GetPatientMedicalRecordsByUserIdRequestResponse_Diary) GetAnswerId() int32 {
	if x != nil {
		return x.AnswerId
	}
	return 0
}

func (x *GetPatientMedicalRecordsByUserIdRequestResponse_Diary) GetDiaryId() int32 {
	if x != nil {
		return x.DiaryId
	}
	return 0
}

func (x *GetPatientMedicalRecordsByUserIdRequestResponse_Diary) GetItems() []*DiaryItemAnswers {
	if x != nil {
		return x.Items
	}
	return nil
}

type GetPatientMedicalRecordsByUserIdRequestResponse_Lessons struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Core     *GetPatientMedicalRecordsByUserIdRequestResponse_Lessons_Core     `protobuf:"bytes,1,opt,name=core,proto3" json:"core,omitempty"`
	Elective *GetPatientMedicalRecordsByUserIdRequestResponse_Lessons_Elective `protobuf:"bytes,2,opt,name=elective,proto3" json:"elective,omitempty"`
}

func (x *GetPatientMedicalRecordsByUserIdRequestResponse_Lessons) Reset() {
	*x = GetPatientMedicalRecordsByUserIdRequestResponse_Lessons{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dta_wed_api_v1_patients_patients_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPatientMedicalRecordsByUserIdRequestResponse_Lessons) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPatientMedicalRecordsByUserIdRequestResponse_Lessons) ProtoMessage() {}

func (x *GetPatientMedicalRecordsByUserIdRequestResponse_Lessons) ProtoReflect() protoreflect.Message {
	mi := &file_dta_wed_api_v1_patients_patients_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPatientMedicalRecordsByUserIdRequestResponse_Lessons.ProtoReflect.Descriptor instead.
func (*GetPatientMedicalRecordsByUserIdRequestResponse_Lessons) Descriptor() ([]byte, []int) {
	return file_dta_wed_api_v1_patients_patients_proto_rawDescGZIP(), []int{9, 1}
}

func (x *GetPatientMedicalRecordsByUserIdRequestResponse_Lessons) GetCore() *GetPatientMedicalRecordsByUserIdRequestResponse_Lessons_Core {
	if x != nil {
		return x.Core
	}
	return nil
}

func (x *GetPatientMedicalRecordsByUserIdRequestResponse_Lessons) GetElective() *GetPatientMedicalRecordsByUserIdRequestResponse_Lessons_Elective {
	if x != nil {
		return x.Elective
	}
	return nil
}

type GetPatientMedicalRecordsByUserIdRequestResponse_Questionnaire struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AnswerCount int32 `protobuf:"varint,1,opt,name=answerCount,proto3" json:"answerCount,omitempty"`
}

func (x *GetPatientMedicalRecordsByUserIdRequestResponse_Questionnaire) Reset() {
	*x = GetPatientMedicalRecordsByUserIdRequestResponse_Questionnaire{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dta_wed_api_v1_patients_patients_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPatientMedicalRecordsByUserIdRequestResponse_Questionnaire) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPatientMedicalRecordsByUserIdRequestResponse_Questionnaire) ProtoMessage() {}

func (x *GetPatientMedicalRecordsByUserIdRequestResponse_Questionnaire) ProtoReflect() protoreflect.Message {
	mi := &file_dta_wed_api_v1_patients_patients_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPatientMedicalRecordsByUserIdRequestResponse_Questionnaire.ProtoReflect.Descriptor instead.
func (*GetPatientMedicalRecordsByUserIdRequestResponse_Questionnaire) Descriptor() ([]byte, []int) {
	return file_dta_wed_api_v1_patients_patients_proto_rawDescGZIP(), []int{9, 2}
}

func (x *GetPatientMedicalRecordsByUserIdRequestResponse_Questionnaire) GetAnswerCount() int32 {
	if x != nil {
		return x.AnswerCount
	}
	return 0
}

type GetPatientMedicalRecordsByUserIdRequestResponse_MedicalNote struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Note      string `protobuf:"bytes,2,opt,name=note,proto3" json:"note,omitempty"`
	CreatedAt int32  `protobuf:"varint,3,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt int32  `protobuf:"varint,4,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *GetPatientMedicalRecordsByUserIdRequestResponse_MedicalNote) Reset() {
	*x = GetPatientMedicalRecordsByUserIdRequestResponse_MedicalNote{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dta_wed_api_v1_patients_patients_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPatientMedicalRecordsByUserIdRequestResponse_MedicalNote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPatientMedicalRecordsByUserIdRequestResponse_MedicalNote) ProtoMessage() {}

func (x *GetPatientMedicalRecordsByUserIdRequestResponse_MedicalNote) ProtoReflect() protoreflect.Message {
	mi := &file_dta_wed_api_v1_patients_patients_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPatientMedicalRecordsByUserIdRequestResponse_MedicalNote.ProtoReflect.Descriptor instead.
func (*GetPatientMedicalRecordsByUserIdRequestResponse_MedicalNote) Descriptor() ([]byte, []int) {
	return file_dta_wed_api_v1_patients_patients_proto_rawDescGZIP(), []int{9, 3}
}

func (x *GetPatientMedicalRecordsByUserIdRequestResponse_MedicalNote) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetPatientMedicalRecordsByUserIdRequestResponse_MedicalNote) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

func (x *GetPatientMedicalRecordsByUserIdRequestResponse_MedicalNote) GetCreatedAt() int32 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *GetPatientMedicalRecordsByUserIdRequestResponse_MedicalNote) GetUpdatedAt() int32 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type GetPatientMedicalRecordsByUserIdRequestResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date           int32                                                          `protobuf:"varint,1,opt,name=date,proto3" json:"date,omitempty"`
	Diaries        []*GetPatientMedicalRecordsByUserIdRequestResponse_Diary       `protobuf:"bytes,2,rep,name=diaries,proto3" json:"diaries,omitempty"`
	Lessons        *GetPatientMedicalRecordsByUserIdRequestResponse_Lessons       `protobuf:"bytes,3,opt,name=lessons,proto3" json:"lessons,omitempty"`
	Questionnaires *GetPatientMedicalRecordsByUserIdRequestResponse_Questionnaire `protobuf:"bytes,4,opt,name=questionnaires,proto3" json:"questionnaires,omitempty"`
	MedicalNotes   []*GetPatientMedicalRecordsByUserIdRequestResponse_MedicalNote `protobuf:"bytes,5,rep,name=medicalNotes,proto3" json:"medicalNotes,omitempty"`
}

func (x *GetPatientMedicalRecordsByUserIdRequestResponse_Data) Reset() {
	*x = GetPatientMedicalRecordsByUserIdRequestResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dta_wed_api_v1_patients_patients_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPatientMedicalRecordsByUserIdRequestResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPatientMedicalRecordsByUserIdRequestResponse_Data) ProtoMessage() {}

func (x *GetPatientMedicalRecordsByUserIdRequestResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_dta_wed_api_v1_patients_patients_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPatientMedicalRecordsByUserIdRequestResponse_Data.ProtoReflect.Descriptor instead.
func (*GetPatientMedicalRecordsByUserIdRequestResponse_Data) Descriptor() ([]byte, []int) {
	return file_dta_wed_api_v1_patients_patients_proto_rawDescGZIP(), []int{9, 4}
}

func (x *GetPatientMedicalRecordsByUserIdRequestResponse_Data) GetDate() int32 {
	if x != nil {
		return x.Date
	}
	return 0
}

func (x *GetPatientMedicalRecordsByUserIdRequestResponse_Data) GetDiaries() []*GetPatientMedicalRecordsByUserIdRequestResponse_Diary {
	if x != nil {
		return x.Diaries
	}
	return nil
}

func (x *GetPatientMedicalRecordsByUserIdRequestResponse_Data) GetLessons() *GetPatientMedicalRecordsByUserIdRequestResponse_Lessons {
	if x != nil {
		return x.Lessons
	}
	return nil
}

func (x *GetPatientMedicalRecordsByUserIdRequestResponse_Data) GetQuestionnaires() *GetPatientMedicalRecordsByUserIdRequestResponse_Questionnaire {
	if x != nil {
		return x.Questionnaires
	}
	return nil
}

func (x *GetPatientMedicalRecordsByUserIdRequestResponse_Data) GetMedicalNotes() []*GetPatientMedicalRecordsByUserIdRequestResponse_MedicalNote {
	if x != nil {
		return x.MedicalNotes
	}
	return nil
}

type GetPatientMedicalRecordsByUserIdRequestResponse_PeriodOfDates struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Start int32 `protobuf:"varint,1,opt,name=start,proto3" json:"start,omitempty"`
	End   int32 `protobuf:"varint,2,opt,name=end,proto3" json:"end,omitempty"`
}

func (x *GetPatientMedicalRecordsByUserIdRequestResponse_PeriodOfDates) Reset() {
	*x = GetPatientMedicalRecordsByUserIdRequestResponse_PeriodOfDates{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dta_wed_api_v1_patients_patients_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPatientMedicalRecordsByUserIdRequestResponse_PeriodOfDates) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPatientMedicalRecordsByUserIdRequestResponse_PeriodOfDates) ProtoMessage() {}

func (x *GetPatientMedicalRecordsByUserIdRequestResponse_PeriodOfDates) ProtoReflect() protoreflect.Message {
	mi := &file_dta_wed_api_v1_patients_patients_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPatientMedicalRecordsByUserIdRequestResponse_PeriodOfDates.ProtoReflect.Descriptor instead.
func (*GetPatientMedicalRecordsByUserIdRequestResponse_PeriodOfDates) Descriptor() ([]byte, []int) {
	return file_dta_wed_api_v1_patients_patients_proto_rawDescGZIP(), []int{9, 5}
}

func (x *GetPatientMedicalRecordsByUserIdRequestResponse_PeriodOfDates) GetStart() int32 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *GetPatientMedicalRecordsByUserIdRequestResponse_PeriodOfDates) GetEnd() int32 {
	if x != nil {
		return x.End
	}
	return 0
}

type GetPatientMedicalRecordsByUserIdRequestResponse_Lessons_Core struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CourseId int32  `protobuf:"varint,1,opt,name=courseId,proto3" json:"courseId,omitempty"`
	Progress string `protobuf:"bytes,2,opt,name=progress,proto3" json:"progress,omitempty"`
}

func (x *GetPatientMedicalRecordsByUserIdRequestResponse_Lessons_Core) Reset() {
	*x = GetPatientMedicalRecordsByUserIdRequestResponse_Lessons_Core{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dta_wed_api_v1_patients_patients_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPatientMedicalRecordsByUserIdRequestResponse_Lessons_Core) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPatientMedicalRecordsByUserIdRequestResponse_Lessons_Core) ProtoMessage() {}

func (x *GetPatientMedicalRecordsByUserIdRequestResponse_Lessons_Core) ProtoReflect() protoreflect.Message {
	mi := &file_dta_wed_api_v1_patients_patients_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPatientMedicalRecordsByUserIdRequestResponse_Lessons_Core.ProtoReflect.Descriptor instead.
func (*GetPatientMedicalRecordsByUserIdRequestResponse_Lessons_Core) Descriptor() ([]byte, []int) {
	return file_dta_wed_api_v1_patients_patients_proto_rawDescGZIP(), []int{9, 1, 0}
}

func (x *GetPatientMedicalRecordsByUserIdRequestResponse_Lessons_Core) GetCourseId() int32 {
	if x != nil {
		return x.CourseId
	}
	return 0
}

func (x *GetPatientMedicalRecordsByUserIdRequestResponse_Lessons_Core) GetProgress() string {
	if x != nil {
		return x.Progress
	}
	return ""
}

type GetPatientMedicalRecordsByUserIdRequestResponse_Lessons_Elective struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CourseId int32                                                                      `protobuf:"varint,1,opt,name=courseId,proto3" json:"courseId,omitempty"`
	Count    int32                                                                      `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	Data     []*GetPatientMedicalRecordsByUserIdRequestResponse_Lessons_Elective_Lesson `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetPatientMedicalRecordsByUserIdRequestResponse_Lessons_Elective) Reset() {
	*x = GetPatientMedicalRecordsByUserIdRequestResponse_Lessons_Elective{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dta_wed_api_v1_patients_patients_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPatientMedicalRecordsByUserIdRequestResponse_Lessons_Elective) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPatientMedicalRecordsByUserIdRequestResponse_Lessons_Elective) ProtoMessage() {}

func (x *GetPatientMedicalRecordsByUserIdRequestResponse_Lessons_Elective) ProtoReflect() protoreflect.Message {
	mi := &file_dta_wed_api_v1_patients_patients_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPatientMedicalRecordsByUserIdRequestResponse_Lessons_Elective.ProtoReflect.Descriptor instead.
func (*GetPatientMedicalRecordsByUserIdRequestResponse_Lessons_Elective) Descriptor() ([]byte, []int) {
	return file_dta_wed_api_v1_patients_patients_proto_rawDescGZIP(), []int{9, 1, 1}
}

func (x *GetPatientMedicalRecordsByUserIdRequestResponse_Lessons_Elective) GetCourseId() int32 {
	if x != nil {
		return x.CourseId
	}
	return 0
}

func (x *GetPatientMedicalRecordsByUserIdRequestResponse_Lessons_Elective) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *GetPatientMedicalRecordsByUserIdRequestResponse_Lessons_Elective) GetData() []*GetPatientMedicalRecordsByUserIdRequestResponse_Lessons_Elective_Lesson {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetPatientMedicalRecordsByUserIdRequestResponse_Lessons_Elective_Lesson struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionName  string `protobuf:"bytes,1,opt,name=sessionName,proto3" json:"sessionName,omitempty"`
	SessionOrder int32  `protobuf:"varint,2,opt,name=sessionOrder,proto3" json:"sessionOrder,omitempty"`
	LessonName   string `protobuf:"bytes,3,opt,name=lessonName,proto3" json:"lessonName,omitempty"`
	LessonId     int32  `protobuf:"varint,4,opt,name=lessonId,proto3" json:"lessonId,omitempty"`
	LessonOrder  int32  `protobuf:"varint,5,opt,name=lessonOrder,proto3" json:"lessonOrder,omitempty"`
}

func (x *GetPatientMedicalRecordsByUserIdRequestResponse_Lessons_Elective_Lesson) Reset() {
	*x = GetPatientMedicalRecordsByUserIdRequestResponse_Lessons_Elective_Lesson{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dta_wed_api_v1_patients_patients_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPatientMedicalRecordsByUserIdRequestResponse_Lessons_Elective_Lesson) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPatientMedicalRecordsByUserIdRequestResponse_Lessons_Elective_Lesson) ProtoMessage() {}

func (x *GetPatientMedicalRecordsByUserIdRequestResponse_Lessons_Elective_Lesson) ProtoReflect() protoreflect.Message {
	mi := &file_dta_wed_api_v1_patients_patients_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPatientMedicalRecordsByUserIdRequestResponse_Lessons_Elective_Lesson.ProtoReflect.Descriptor instead.
func (*GetPatientMedicalRecordsByUserIdRequestResponse_Lessons_Elective_Lesson) Descriptor() ([]byte, []int) {
	return file_dta_wed_api_v1_patients_patients_proto_rawDescGZIP(), []int{9, 1, 1, 0}
}

func (x *GetPatientMedicalRecordsByUserIdRequestResponse_Lessons_Elective_Lesson) GetSessionName() string {
	if x != nil {
		return x.SessionName
	}
	return ""
}

func (x *GetPatientMedicalRecordsByUserIdRequestResponse_Lessons_Elective_Lesson) GetSessionOrder() int32 {
	if x != nil {
		return x.SessionOrder
	}
	return 0
}

func (x *GetPatientMedicalRecordsByUserIdRequestResponse_Lessons_Elective_Lesson) GetLessonName() string {
	if x != nil {
		return x.LessonName
	}
	return ""
}

func (x *GetPatientMedicalRecordsByUserIdRequestResponse_Lessons_Elective_Lesson) GetLessonId() int32 {
	if x != nil {
		return x.LessonId
	}
	return 0
}

func (x *GetPatientMedicalRecordsByUserIdRequestResponse_Lessons_Elective_Lesson) GetLessonOrder() int32 {
	if x != nil {
		return x.LessonOrder
	}
	return 0
}

type GetDropoutPatientsResponse_Patient struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     int32  `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Accesscode string `protobuf:"bytes,2,opt,name=accesscode,proto3" json:"accesscode,omitempty"`
	Email      string `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	NthDay     int32  `protobuf:"varint,4,opt,name=nthDay,proto3" json:"nthDay,omitempty"`
	Status     int32  `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *GetDropoutPatientsResponse_Patient) Reset() {
	*x = GetDropoutPatientsResponse_Patient{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dta_wed_api_v1_patients_patients_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDropoutPatientsResponse_Patient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDropoutPatientsResponse_Patient) ProtoMessage() {}

func (x *GetDropoutPatientsResponse_Patient) ProtoReflect() protoreflect.Message {
	mi := &file_dta_wed_api_v1_patients_patients_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDropoutPatientsResponse_Patient.ProtoReflect.Descriptor instead.
func (*GetDropoutPatientsResponse_Patient) Descriptor() ([]byte, []int) {
	return file_dta_wed_api_v1_patients_patients_proto_rawDescGZIP(), []int{11, 0}
}

func (x *GetDropoutPatientsResponse_Patient) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetDropoutPatientsResponse_Patient) GetAccesscode() string {
	if x != nil {
		return x.Accesscode
	}
	return ""
}

func (x *GetDropoutPatientsResponse_Patient) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *GetDropoutPatientsResponse_Patient) GetNthDay() int32 {
	if x != nil {
		return x.NthDay
	}
	return 0
}

func (x *GetDropoutPatientsResponse_Patient) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type GetPatientsResponse_Patient struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     int32  `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Accesscode string `protobuf:"bytes,2,opt,name=accesscode,proto3" json:"accesscode,omitempty"`
	Email      string `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	Status     int32  `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`
	Days       int32  `protobuf:"varint,5,opt,name=days,proto3" json:"days,omitempty"`
	Week       int32  `protobuf:"varint,6,opt,name=week,proto3" json:"week,omitempty"`
	StartedAt  int32  `protobuf:"varint,7,opt,name=startedAt,proto3" json:"startedAt,omitempty"`
	GroupId    int32  `protobuf:"varint,8,opt,name=groupId,proto3" json:"groupId,omitempty"`
	SiteId     int32  `protobuf:"varint,9,opt,name=siteId,proto3" json:"siteId,omitempty"`
}

func (x *GetPatientsResponse_Patient) Reset() {
	*x = GetPatientsResponse_Patient{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dta_wed_api_v1_patients_patients_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPatientsResponse_Patient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPatientsResponse_Patient) ProtoMessage() {}

func (x *GetPatientsResponse_Patient) ProtoReflect() protoreflect.Message {
	mi := &file_dta_wed_api_v1_patients_patients_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPatientsResponse_Patient.ProtoReflect.Descriptor instead.
func (*GetPatientsResponse_Patient) Descriptor() ([]byte, []int) {
	return file_dta_wed_api_v1_patients_patients_proto_rawDescGZIP(), []int{13, 0}
}

func (x *GetPatientsResponse_Patient) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetPatientsResponse_Patient) GetAccesscode() string {
	if x != nil {
		return x.Accesscode
	}
	return ""
}

func (x *GetPatientsResponse_Patient) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *GetPatientsResponse_Patient) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GetPatientsResponse_Patient) GetDays() int32 {
	if x != nil {
		return x.Days
	}
	return 0
}

func (x *GetPatientsResponse_Patient) GetWeek() int32 {
	if x != nil {
		return x.Week
	}
	return 0
}

func (x *GetPatientsResponse_Patient) GetStartedAt() int32 {
	if x != nil {
		return x.StartedAt
	}
	return 0
}

func (x *GetPatientsResponse_Patient) GetGroupId() int32 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *GetPatientsResponse_Patient) GetSiteId() int32 {
	if x != nil {
		return x.SiteId
	}
	return 0
}

type GetPatientOverviewResponse_Visit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	RemainingDays int32  `protobuf:"varint,2,opt,name=remainingDays,proto3" json:"remainingDays,omitempty"`
	Status        int32  `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
	Note          string `protobuf:"bytes,4,opt,name=note,proto3" json:"note,omitempty"`
}

func (x *GetPatientOverviewResponse_Visit) Reset() {
	*x = GetPatientOverviewResponse_Visit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dta_wed_api_v1_patients_patients_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPatientOverviewResponse_Visit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPatientOverviewResponse_Visit) ProtoMessage() {}

func (x *GetPatientOverviewResponse_Visit) ProtoReflect() protoreflect.Message {
	mi := &file_dta_wed_api_v1_patients_patients_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPatientOverviewResponse_Visit.ProtoReflect.Descriptor instead.
func (*GetPatientOverviewResponse_Visit) Descriptor() ([]byte, []int) {
	return file_dta_wed_api_v1_patients_patients_proto_rawDescGZIP(), []int{15, 0}
}

func (x *GetPatientOverviewResponse_Visit) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetPatientOverviewResponse_Visit) GetRemainingDays() int32 {
	if x != nil {
		return x.RemainingDays
	}
	return 0
}

func (x *GetPatientOverviewResponse_Visit) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GetPatientOverviewResponse_Visit) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

type GetPatientOverviewResponse_Lesson struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DoneCount  int32 `protobuf:"varint,1,opt,name=doneCount,proto3" json:"doneCount,omitempty"`
	TotalCount int32 `protobuf:"varint,2,opt,name=totalCount,proto3" json:"totalCount,omitempty"`
}

func (x *GetPatientOverviewResponse_Lesson) Reset() {
	*x = GetPatientOverviewResponse_Lesson{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dta_wed_api_v1_patients_patients_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPatientOverviewResponse_Lesson) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPatientOverviewResponse_Lesson) ProtoMessage() {}

func (x *GetPatientOverviewResponse_Lesson) ProtoReflect() protoreflect.Message {
	mi := &file_dta_wed_api_v1_patients_patients_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPatientOverviewResponse_Lesson.ProtoReflect.Descriptor instead.
func (*GetPatientOverviewResponse_Lesson) Descriptor() ([]byte, []int) {
	return file_dta_wed_api_v1_patients_patients_proto_rawDescGZIP(), []int{15, 1}
}

func (x *GetPatientOverviewResponse_Lesson) GetDoneCount() int32 {
	if x != nil {
		return x.DoneCount
	}
	return 0
}

func (x *GetPatientOverviewResponse_Lesson) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type GetPatientOverviewResponse_MedicalDoctor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId int32  `protobuf:"varint,1,opt,name=accountId,proto3" json:"accountId,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Email     string `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *GetPatientOverviewResponse_MedicalDoctor) Reset() {
	*x = GetPatientOverviewResponse_MedicalDoctor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dta_wed_api_v1_patients_patients_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPatientOverviewResponse_MedicalDoctor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPatientOverviewResponse_MedicalDoctor) ProtoMessage() {}

func (x *GetPatientOverviewResponse_MedicalDoctor) ProtoReflect() protoreflect.Message {
	mi := &file_dta_wed_api_v1_patients_patients_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPatientOverviewResponse_MedicalDoctor.ProtoReflect.Descriptor instead.
func (*GetPatientOverviewResponse_MedicalDoctor) Descriptor() ([]byte, []int) {
	return file_dta_wed_api_v1_patients_patients_proto_rawDescGZIP(), []int{15, 2}
}

func (x *GetPatientOverviewResponse_MedicalDoctor) GetAccountId() int32 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *GetPatientOverviewResponse_MedicalDoctor) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetPatientOverviewResponse_MedicalDoctor) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type GetPatientOverviewResponse_StatusNote struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type int32  `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	Note string `protobuf:"bytes,2,opt,name=note,proto3" json:"note,omitempty"`
}

func (x *GetPatientOverviewResponse_StatusNote) Reset() {
	*x = GetPatientOverviewResponse_StatusNote{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dta_wed_api_v1_patients_patients_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPatientOverviewResponse_StatusNote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPatientOverviewResponse_StatusNote) ProtoMessage() {}

func (x *GetPatientOverviewResponse_StatusNote) ProtoReflect() protoreflect.Message {
	mi := &file_dta_wed_api_v1_patients_patients_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPatientOverviewResponse_StatusNote.ProtoReflect.Descriptor instead.
func (*GetPatientOverviewResponse_StatusNote) Descriptor() ([]byte, []int) {
	return file_dta_wed_api_v1_patients_patients_proto_rawDescGZIP(), []int{15, 3}
}

func (x *GetPatientOverviewResponse_StatusNote) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *GetPatientOverviewResponse_StatusNote) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

type GetPatientClinicalRecordsByUserIdResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date           string `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
	Nth            int32  `protobuf:"varint,2,opt,name=nth,proto3" json:"nth,omitempty"`
	Week           int32  `protobuf:"varint,3,opt,name=week,proto3" json:"week,omitempty"`
	Access         bool   `protobuf:"varint,4,opt,name=access,proto3" json:"access,omitempty"`
	UserDiaryCount int32  `protobuf:"varint,5,opt,name=userDiaryCount,proto3" json:"userDiaryCount,omitempty"`
	Note           string `protobuf:"bytes,6,opt,name=note,proto3" json:"note,omitempty"`
}

func (x *GetPatientClinicalRecordsByUserIdResponse_Data) Reset() {
	*x = GetPatientClinicalRecordsByUserIdResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dta_wed_api_v1_patients_patients_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPatientClinicalRecordsByUserIdResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPatientClinicalRecordsByUserIdResponse_Data) ProtoMessage() {}

func (x *GetPatientClinicalRecordsByUserIdResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_dta_wed_api_v1_patients_patients_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPatientClinicalRecordsByUserIdResponse_Data.ProtoReflect.Descriptor instead.
func (*GetPatientClinicalRecordsByUserIdResponse_Data) Descriptor() ([]byte, []int) {
	return file_dta_wed_api_v1_patients_patients_proto_rawDescGZIP(), []int{17, 0}
}

func (x *GetPatientClinicalRecordsByUserIdResponse_Data) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *GetPatientClinicalRecordsByUserIdResponse_Data) GetNth() int32 {
	if x != nil {
		return x.Nth
	}
	return 0
}

func (x *GetPatientClinicalRecordsByUserIdResponse_Data) GetWeek() int32 {
	if x != nil {
		return x.Week
	}
	return 0
}

func (x *GetPatientClinicalRecordsByUserIdResponse_Data) GetAccess() bool {
	if x != nil {
		return x.Access
	}
	return false
}

func (x *GetPatientClinicalRecordsByUserIdResponse_Data) GetUserDiaryCount() int32 {
	if x != nil {
		return x.UserDiaryCount
	}
	return 0
}

func (x *GetPatientClinicalRecordsByUserIdResponse_Data) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

type GetPatientsByVisitIdResponse_User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      int32  `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Accesscode  string `protobuf:"bytes,2,opt,name=accesscode,proto3" json:"accesscode,omitempty"`
	Email       string `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	CreatedAt   int32  `protobuf:"varint,4,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UserStatus  int32  `protobuf:"varint,9,opt,name=userStatus,proto3" json:"userStatus,omitempty"`
	GroupId     int32  `protobuf:"varint,10,opt,name=groupId,proto3" json:"groupId,omitempty"`
	NthDay      int32  `protobuf:"varint,5,opt,name=nthDay,proto3" json:"nthDay,omitempty"`
	VisitAt     int32  `protobuf:"varint,6,opt,name=visitAt,proto3" json:"visitAt,omitempty"`
	VisitStatus int32  `protobuf:"varint,7,opt,name=visitStatus,proto3" json:"visitStatus,omitempty"`
	VisitNote   string `protobuf:"bytes,8,opt,name=visitNote,proto3" json:"visitNote,omitempty"`
}

func (x *GetPatientsByVisitIdResponse_User) Reset() {
	*x = GetPatientsByVisitIdResponse_User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dta_wed_api_v1_patients_patients_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPatientsByVisitIdResponse_User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPatientsByVisitIdResponse_User) ProtoMessage() {}

func (x *GetPatientsByVisitIdResponse_User) ProtoReflect() protoreflect.Message {
	mi := &file_dta_wed_api_v1_patients_patients_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPatientsByVisitIdResponse_User.ProtoReflect.Descriptor instead.
func (*GetPatientsByVisitIdResponse_User) Descriptor() ([]byte, []int) {
	return file_dta_wed_api_v1_patients_patients_proto_rawDescGZIP(), []int{20, 0}
}

func (x *GetPatientsByVisitIdResponse_User) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetPatientsByVisitIdResponse_User) GetAccesscode() string {
	if x != nil {
		return x.Accesscode
	}
	return ""
}

func (x *GetPatientsByVisitIdResponse_User) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *GetPatientsByVisitIdResponse_User) GetCreatedAt() int32 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *GetPatientsByVisitIdResponse_User) GetUserStatus() int32 {
	if x != nil {
		return x.UserStatus
	}
	return 0
}

func (x *GetPatientsByVisitIdResponse_User) GetGroupId() int32 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *GetPatientsByVisitIdResponse_User) GetNthDay() int32 {
	if x != nil {
		return x.NthDay
	}
	return 0
}

func (x *GetPatientsByVisitIdResponse_User) GetVisitAt() int32 {
	if x != nil {
		return x.VisitAt
	}
	return 0
}

func (x *GetPatientsByVisitIdResponse_User) GetVisitStatus() int32 {
	if x != nil {
		return x.VisitStatus
	}
	return 0
}

func (x *GetPatientsByVisitIdResponse_User) GetVisitNote() string {
	if x != nil {
		return x.VisitNote
	}
	return ""
}

var File_dta_wed_api_v1_patients_patients_proto protoreflect.FileDescriptor

var file_dta_wed_api_v1_patients_patients_proto_rawDesc = []byte{
	0x0a, 0x26, 0x64, 0x74, 0x61, 0x2d, 0x77, 0x65, 0x64, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31,
	0x2f, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e,
	0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x17, 0x64, 0x74, 0x61, 0x2e, 0x77, 0x65,
	0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74,
	0x73, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x73, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x50, 0x61, 0x74, 0x69, 0x65,
	0x6e, 0x74, 0x73, 0x42, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0xa9, 0x02, 0x0a, 0x1e, 0x47, 0x65,
	0x74, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5b, 0x0a, 0x08,
	0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3f,
	0x2e, 0x64, 0x74, 0x61, 0x2e, 0x77, 0x65, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x74, 0x69,
	0x65, 0x6e, 0x74, 0x73, 0x42, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x52,
	0x08, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0xa9, 0x01, 0x0a, 0x07, 0x50, 0x61,
	0x74, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a,
	0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x33, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x50, 0x61, 0x74, 0x69,
	0x65, 0x6e, 0x74, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x92, 0x04, 0x0a, 0x1a, 0x47,
	0x65, 0x74, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x58, 0x0a,
	0x08, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x3c, 0x2e, 0x64, 0x74, 0x61, 0x2e, 0x77, 0x65, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x74,
	0x69, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x08, 0x73,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x67, 0x0a, 0x0d, 0x6d, 0x65, 0x64, 0x69, 0x63,
	0x61, 0x6c, 0x44, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x41,
	0x2e, 0x64, 0x74, 0x61, 0x2e, 0x77, 0x65, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x74, 0x69,
	0x65, 0x6e, 0x74, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x6c, 0x44, 0x6f, 0x63, 0x74, 0x6f,
	0x72, 0x52, 0x0d, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x6c, 0x44, 0x6f, 0x63, 0x74, 0x6f, 0x72,
	0x1a, 0x54, 0x0a, 0x08, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6e, 0x64, 0x41, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x65, 0x6e, 0x64, 0x41, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x44, 0x61, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x44, 0x61, 0x79, 0x1a, 0x57, 0x0a, 0x0d, 0x4d, 0x65, 0x64, 0x69, 0x63, 0x61,
	0x6c, 0x44, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x22,
	0x9d, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x42,
	0x79, 0x53, 0x69, 0x74, 0x65, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f,
	0x0a, 0x06, 0x73, 0x69, 0x74, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x1a, 0x02, 0x20, 0x00, 0x52, 0x06, 0x73, 0x69, 0x74, 0x65, 0x49, 0x64, 0x12,
	0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22,
	0xfb, 0x03, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x42,
	0x79, 0x53, 0x69, 0x74, 0x65, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x6f, 0x0a, 0x0c, 0x75, 0x6e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4b, 0x2e, 0x64, 0x74, 0x61, 0x2e, 0x77, 0x65, 0x64, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e,
	0x47, 0x65, 0x74, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x79, 0x53, 0x69, 0x74,
	0x65, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x55, 0x6e, 0x72, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x63, 0x6f,
	0x64, 0x65, 0x52, 0x0c, 0x75, 0x6e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64,
	0x12, 0x58, 0x0a, 0x08, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x64, 0x74, 0x61, 0x2e, 0x77, 0x65, 0x64, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74,
	0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x79, 0x53, 0x69, 0x74, 0x65, 0x49, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74,
	0x52, 0x08, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0x8d, 0x01, 0x0a, 0x07, 0x50,
	0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e,
	0x0a, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x1a, 0x80, 0x01, 0x0a, 0x16, 0x55,
	0x6e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x41, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x30, 0x0a, 0x13, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x63, 0x6f, 0x64, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x82, 0x01,
	0x0a, 0x27, 0x47, 0x65, 0x74, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x64, 0x69,
	0x63, 0x61, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02,
	0x20, 0x00, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x44,
	0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61,
	0x74, 0x65, 0x22, 0x76, 0x0a, 0x10, 0x44, 0x69, 0x61, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x41,
	0x6e, 0x73, 0x77, 0x65, 0x72, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x4a,
	0x0a, 0x0b, 0x69, 0x74, 0x65, 0x6d, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x64, 0x74, 0x61, 0x2e, 0x77, 0x65, 0x64, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x44, 0x69,
	0x61, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x52, 0x0b, 0x69,
	0x74, 0x65, 0x6d, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x73, 0x22, 0xc3, 0x02, 0x0a, 0x0f, 0x44,
	0x69, 0x61, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x12, 0x22,
	0x0a, 0x0c, 0x69, 0x74, 0x65, 0x6d, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x69, 0x74, 0x65, 0x6d, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x69, 0x74, 0x65, 0x6d, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72,
	0x54, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x69, 0x74, 0x65, 0x6d,
	0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x54, 0x65, 0x78, 0x74, 0x12, 0x3f, 0x0a, 0x0e, 0x69, 0x74,
	0x65, 0x6d, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x0e, 0x69, 0x74, 0x65,
	0x6d, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x37, 0x0a, 0x0a, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x61, 0x74, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x52, 0x0a, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61,
	0x22, 0x81, 0x0e, 0x0a, 0x2f, 0x47, 0x65, 0x74, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x4d,
	0x65, 0x64, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x42, 0x79, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7c, 0x0a, 0x0d, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x4f, 0x66,
	0x44, 0x61, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x56, 0x2e, 0x64, 0x74,
	0x61, 0x2e, 0x77, 0x65, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x61, 0x74,
	0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74,
	0x4d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x42, 0x79,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x4f, 0x66, 0x44, 0x61,
	0x74, 0x65, 0x73, 0x52, 0x0d, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x4f, 0x66, 0x44, 0x61, 0x74,
	0x65, 0x73, 0x12, 0x61, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x4d, 0x2e, 0x64, 0x74, 0x61, 0x2e, 0x77, 0x65, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61,
	0x74, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x73, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x92, 0x01, 0x0a, 0x05, 0x44, 0x69, 0x61, 0x72, 0x79, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x64, 0x69, 0x61, 0x72, 0x79, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x64, 0x69, 0x61, 0x72, 0x79, 0x49, 0x64, 0x12, 0x3f, 0x0a, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x64, 0x74, 0x61, 0x2e, 0x77,
	0x65, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e,
	0x74, 0x73, 0x2e, 0x44, 0x69, 0x61, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x41, 0x6e, 0x73, 0x77,
	0x65, 0x72, 0x73, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x1a, 0x8f, 0x05, 0x0a, 0x07, 0x4c,
	0x65, 0x73, 0x73, 0x6f, 0x6e, 0x73, 0x12, 0x69, 0x0a, 0x04, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x55, 0x2e, 0x64, 0x74, 0x61, 0x2e, 0x77, 0x65, 0x64, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x47,
	0x65, 0x74, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x6c,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4c,
	0x65, 0x73, 0x73, 0x6f, 0x6e, 0x73, 0x2e, 0x43, 0x6f, 0x72, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x72,
	0x65, 0x12, 0x75, 0x0a, 0x08, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x59, 0x2e, 0x64, 0x74, 0x61, 0x2e, 0x77, 0x65, 0x64, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x47, 0x65,
	0x74, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x6c, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4c, 0x65,
	0x73, 0x73, 0x6f, 0x6e, 0x73, 0x2e, 0x45, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x52, 0x08,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x1a, 0x3e, 0x0a, 0x04, 0x43, 0x6f, 0x72, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x1a, 0xe1, 0x02, 0x0a, 0x08, 0x45, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x74, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x60, 0x2e, 0x64, 0x74, 0x61, 0x2e, 0x77, 0x65, 0x64, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e,
	0x47, 0x65, 0x74, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x63, 0x61,
	0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x73, 0x2e, 0x45, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x2e, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0xac, 0x01,
	0x0a, 0x06, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0c, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1e,
	0x0a, 0x0a, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x65,
	0x73, 0x73, 0x6f, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0b, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x1a, 0x31, 0x0a, 0x0d,
	0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0b, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x1a,
	0x6d, 0x0a, 0x0b, 0x4d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x6c, 0x4e, 0x6f, 0x74, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f,
	0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x1a, 0xea,
	0x03, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x68, 0x0a, 0x07, 0x64,
	0x69, 0x61, 0x72, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4e, 0x2e, 0x64,
	0x74, 0x61, 0x2e, 0x77, 0x65, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x61,
	0x74, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e,
	0x74, 0x4d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x42,
	0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x69, 0x61, 0x72, 0x79, 0x52, 0x07, 0x64, 0x69,
	0x61, 0x72, 0x69, 0x65, 0x73, 0x12, 0x6a, 0x0a, 0x07, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x50, 0x2e, 0x64, 0x74, 0x61, 0x2e, 0x77, 0x65, 0x64,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x73,
	0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x63,
	0x61, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x73, 0x52, 0x07, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e,
	0x73, 0x12, 0x7e, 0x0a, 0x0e, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69,
	0x72, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x56, 0x2e, 0x64, 0x74, 0x61, 0x2e,
	0x77, 0x65, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x61, 0x74, 0x69, 0x65,
	0x6e, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x65,
	0x64, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x42, 0x79, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72,
	0x65, 0x52, 0x0e, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65,
	0x73, 0x12, 0x78, 0x0a, 0x0c, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x6c, 0x4e, 0x6f, 0x74, 0x65,
	0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x54, 0x2e, 0x64, 0x74, 0x61, 0x2e, 0x77, 0x65,
	0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74,
	0x73, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x64, 0x69,
	0x63, 0x61, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x6c, 0x4e, 0x6f, 0x74, 0x65, 0x52, 0x0c, 0x6d,
	0x65, 0x64, 0x69, 0x63, 0x61, 0x6c, 0x4e, 0x6f, 0x74, 0x65, 0x73, 0x1a, 0x37, 0x0a, 0x0d, 0x50,
	0x65, 0x72, 0x69, 0x6f, 0x64, 0x4f, 0x66, 0x44, 0x61, 0x74, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x03, 0x65, 0x6e, 0x64, 0x22, 0x33, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x44, 0x72, 0x6f, 0x70, 0x6f,
	0x75, 0x74, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x69, 0x74, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x73, 0x69, 0x74, 0x65, 0x49, 0x64, 0x22, 0x8d, 0x02, 0x0a, 0x1a, 0x47, 0x65,
	0x74, 0x44, 0x72, 0x6f, 0x70, 0x6f, 0x75, 0x74, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x4f,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x64,
	0x74, 0x61, 0x2e, 0x77, 0x65, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x61,
	0x74, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x72, 0x6f, 0x70, 0x6f, 0x75,
	0x74, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a,
	0x87, 0x01, 0x0a, 0x07, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x74, 0x68,
	0x44, 0x61, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6e, 0x74, 0x68, 0x44, 0x61,
	0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xce, 0x01, 0x0a, 0x12, 0x47, 0x65,
	0x74, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f,
	0x72, 0x74, 0x42, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x72, 0x74,
	0x42, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x73, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x61, 0x73, 0x63, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x69, 0x74, 0x65, 0x49, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x69, 0x74, 0x65, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x9b, 0x03, 0x0a, 0x13, 0x47,
	0x65, 0x74, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x50, 0x0a, 0x08,
	0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x34,
	0x2e, 0x64, 0x74, 0x61, 0x2e, 0x77, 0x65, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x74, 0x69,
	0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x50, 0x61, 0x74,
	0x69, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0xe7,
	0x01, 0x0a, 0x07, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x79, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x64, 0x61, 0x79, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x77, 0x65, 0x65, 0x6b, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x77, 0x65, 0x65, 0x6b, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49,
	0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x69, 0x74, 0x65, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x73, 0x69, 0x74, 0x65, 0x49, 0x64, 0x22, 0x53, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x50,
	0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x4f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a,
	0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x22, 0xec, 0x07,
	0x0a, 0x1a, 0x47, 0x65, 0x74, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x4f, 0x76, 0x65, 0x72,
	0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x69, 0x74, 0x65, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x69,
	0x74, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x74, 0x68, 0x44, 0x61, 0x79, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x6e, 0x74, 0x68, 0x44, 0x61, 0x79, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x70,
	0x70, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x44, 0x61, 0x79, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0d, 0x61, 0x70, 0x70, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x44, 0x61, 0x79, 0x73,
	0x12, 0x26, 0x0a, 0x0e, 0x64, 0x69, 0x61, 0x72, 0x79, 0x44, 0x6f, 0x6e, 0x65, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x64, 0x69, 0x61, 0x72, 0x79, 0x44,
	0x6f, 0x6e, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x51, 0x0a, 0x06, 0x76, 0x69, 0x73, 0x69,
	0x74, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x64, 0x74, 0x61, 0x2e, 0x77,
	0x65, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e,
	0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x4f, 0x76, 0x65,
	0x72, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x56, 0x69,
	0x73, 0x69, 0x74, 0x52, 0x06, 0x76, 0x69, 0x73, 0x69, 0x74, 0x73, 0x12, 0x5e, 0x0a, 0x0a, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x4e, 0x6f, 0x74, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x3e, 0x2e, 0x64, 0x74, 0x61, 0x2e, 0x77, 0x65, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x74,
	0x69, 0x65, 0x6e, 0x74, 0x4f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4e, 0x6f, 0x74, 0x65, 0x52,
	0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4e, 0x6f, 0x74, 0x65, 0x12, 0x54, 0x0a, 0x07, 0x6c,
	0x65, 0x73, 0x73, 0x6f, 0x6e, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x64,
	0x74, 0x61, 0x2e, 0x77, 0x65, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x61,
	0x74, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e,
	0x74, 0x4f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x52, 0x07, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e,
	0x73, 0x12, 0x67, 0x0a, 0x0d, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x6c, 0x44, 0x6f, 0x63, 0x74,
	0x6f, 0x72, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x41, 0x2e, 0x64, 0x74, 0x61, 0x2e, 0x77,
	0x65, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e,
	0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x4f, 0x76, 0x65,
	0x72, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4d, 0x65,
	0x64, 0x69, 0x63, 0x61, 0x6c, 0x44, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x0d, 0x6d, 0x65, 0x64,
	0x69, 0x63, 0x61, 0x6c, 0x44, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x1a, 0x69, 0x0a, 0x05, 0x56, 0x69,
	0x73, 0x69, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67,
	0x44, 0x61, 0x79, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x72, 0x65, 0x6d, 0x61,
	0x69, 0x6e, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x79, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x6f, 0x74, 0x65, 0x1a, 0x46, 0x0a, 0x06, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x12,
	0x1c, 0x0a, 0x09, 0x64, 0x6f, 0x6e, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x64, 0x6f, 0x6e, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a,
	0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0x57, 0x0a,
	0x0d, 0x4d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x6c, 0x44, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x1c,
	0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x1a, 0x34, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x4e, 0x6f, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x74, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x22, 0x4b, 0x0a, 0x28,
	0x47, 0x65, 0x74, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6c, 0x69, 0x6e, 0x69, 0x63,
	0x61, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x20,
	0x00, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0xb5, 0x02, 0x0a, 0x29, 0x47, 0x65,
	0x74, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6c, 0x69, 0x6e, 0x69, 0x63, 0x61, 0x6c,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x5b, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x47, 0x2e, 0x64, 0x74,
	0x61, 0x2e, 0x77, 0x65, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x61, 0x74,
	0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74,
	0x43, 0x6c, 0x69, 0x6e, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x42,
	0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x94, 0x01, 0x0a, 0x04, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x74, 0x68, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6e, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x77, 0x65, 0x65,
	0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x77, 0x65, 0x65, 0x6b, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x44, 0x69, 0x61,
	0x72, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x75,
	0x73, 0x65, 0x72, 0x44, 0x69, 0x61, 0x72, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x74,
	0x65, 0x22, 0x75, 0x0a, 0x1d, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x69,
	0x65, 0x6e, 0x74, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1f, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x20, 0x00, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x20, 0x00, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x22, 0x58, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x50,
	0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x79, 0x56, 0x69, 0x73, 0x69, 0x74, 0x49, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x07, 0x76, 0x69, 0x73, 0x69, 0x74,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x20,
	0x00, 0x52, 0x07, 0x76, 0x69, 0x73, 0x69, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x69,
	0x74, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x69, 0x74, 0x65,
	0x49, 0x64, 0x22, 0xa7, 0x03, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e,
	0x74, 0x73, 0x42, 0x79, 0x56, 0x69, 0x73, 0x69, 0x74, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x50, 0x0a, 0x05, 0x75, 0x73, 0x65,
	0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x64, 0x74, 0x61, 0x2e, 0x77,
	0x65, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e,
	0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x79,
	0x56, 0x69, 0x73, 0x69, 0x74, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x1a, 0x9e, 0x02, 0x0a, 0x04,
	0x55, 0x73, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x74,
	0x68, 0x44, 0x61, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6e, 0x74, 0x68, 0x44,
	0x61, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x69, 0x73, 0x69, 0x74, 0x41, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x69, 0x73, 0x69, 0x74, 0x41, 0x74, 0x12, 0x20, 0x0a, 0x0b,
	0x76, 0x69, 0x73, 0x69, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0b, 0x76, 0x69, 0x73, 0x69, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c,
	0x0a, 0x09, 0x76, 0x69, 0x73, 0x69, 0x74, 0x4e, 0x6f, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x76, 0x69, 0x73, 0x69, 0x74, 0x4e, 0x6f, 0x74, 0x65, 0x32, 0xde, 0x0d, 0x0a,
	0x0c, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x7e, 0x0a,
	0x0b, 0x47, 0x65, 0x74, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x2b, 0x2e, 0x64,
	0x74, 0x61, 0x2e, 0x77, 0x65, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x61,
	0x74, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x64, 0x74, 0x61, 0x2e,
	0x77, 0x65, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x61, 0x74, 0x69, 0x65,
	0x6e, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x14, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0e, 0x12,
	0x0c, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x12, 0xb4, 0x01,
	0x0a, 0x16, 0x47, 0x65, 0x74, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x79, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x36, 0x2e, 0x64, 0x74, 0x61, 0x2e, 0x77,
	0x65, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e,
	0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x79,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x37, 0x2e, 0x64, 0x74, 0x61, 0x2e, 0x77, 0x65, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61,
	0x74, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x29, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x23, 0x12, 0x21, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2f,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x2f, 0x7b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x64, 0x7d, 0x12, 0xa2, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x50, 0x61, 0x74, 0x69,
	0x65, 0x6e, 0x74, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x32, 0x2e, 0x64, 0x74,
	0x61, 0x2e, 0x77, 0x65, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x61, 0x74,
	0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74,
	0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x33, 0x2e, 0x64, 0x74, 0x61, 0x2e, 0x77, 0x65, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x74,
	0x69, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x12, 0x1b, 0x2f, 0x76,
	0x31, 0x2f, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73,
	0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x7d, 0x12, 0xa5, 0x01, 0x0a, 0x13, 0x47, 0x65,
	0x74, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x79, 0x53, 0x69, 0x74, 0x65, 0x49,
	0x64, 0x12, 0x33, 0x2e, 0x64, 0x74, 0x61, 0x2e, 0x77, 0x65, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x50,
	0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x79, 0x53, 0x69, 0x74, 0x65, 0x49, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x64, 0x74, 0x61, 0x2e, 0x77, 0x65, 0x64,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x73,
	0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x79, 0x53, 0x69,
	0x74, 0x65, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x1d, 0x12, 0x1b, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e,
	0x74, 0x73, 0x2f, 0x73, 0x69, 0x74, 0x65, 0x73, 0x2f, 0x7b, 0x73, 0x69, 0x74, 0x65, 0x49, 0x64,
	0x7d, 0x12, 0xe2, 0x01, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74,
	0x4d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x42, 0x79,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x40, 0x2e, 0x64, 0x74, 0x61, 0x2e, 0x77, 0x65, 0x64,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x73,
	0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x63,
	0x61, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x48, 0x2e, 0x64, 0x74, 0x61, 0x2e, 0x77,
	0x65, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e,
	0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x64,
	0x69, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x42, 0x79, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x32, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2c, 0x12, 0x2a, 0x2f, 0x76, 0x31, 0x2f,
	0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x6c,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x7d, 0x12, 0x9b, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x44, 0x72,
	0x6f, 0x70, 0x6f, 0x75, 0x74, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x32, 0x2e,
	0x64, 0x74, 0x61, 0x2e, 0x77, 0x65, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x70,
	0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x72, 0x6f, 0x70, 0x6f,
	0x75, 0x74, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x33, 0x2e, 0x64, 0x74, 0x61, 0x2e, 0x77, 0x65, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x44,
	0x72, 0x6f, 0x70, 0x6f, 0x75, 0x74, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x12, 0x14,
	0x2f, 0x76, 0x31, 0x2f, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x64, 0x72, 0x6f,
	0x70, 0x6f, 0x75, 0x74, 0x12, 0x9c, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x50, 0x61, 0x74, 0x69,
	0x65, 0x6e, 0x74, 0x4f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x12, 0x32, 0x2e, 0x64, 0x74,
	0x61, 0x2e, 0x77, 0x65, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x61, 0x74,
	0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74,
	0x4f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x33, 0x2e, 0x64, 0x74, 0x61, 0x2e, 0x77, 0x65, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x74,
	0x69, 0x65, 0x6e, 0x74, 0x4f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x12, 0x15, 0x2f, 0x76,
	0x31, 0x2f, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x6f, 0x76, 0x65, 0x72, 0x76,
	0x69, 0x65, 0x77, 0x12, 0xdf, 0x01, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x50, 0x61, 0x74, 0x69, 0x65,
	0x6e, 0x74, 0x43, 0x6c, 0x69, 0x6e, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x73, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x41, 0x2e, 0x64, 0x74, 0x61, 0x2e,
	0x77, 0x65, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x61, 0x74, 0x69, 0x65,
	0x6e, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6c,
	0x69, 0x6e, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x42, 0x79, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x42, 0x2e, 0x64,
	0x74, 0x61, 0x2e, 0x77, 0x65, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x61,
	0x74, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e,
	0x74, 0x43, 0x6c, 0x69, 0x6e, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73,
	0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x33, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2d, 0x12, 0x2b, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x61,
	0x74, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x63, 0x6c, 0x69, 0x6e, 0x69, 0x63, 0x61, 0x6c, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x7d, 0x12, 0x98, 0x01, 0x0a, 0x16, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x36, 0x2e, 0x64, 0x74, 0x61, 0x2e, 0x77, 0x65, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x44, 0x69, 0x73, 0x61, 0x62,
	0x6c, 0x65, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x28, 0x22, 0x23, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x61,
	0x74, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x7d, 0x2f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x3a, 0x01, 0x2a,
	0x12, 0xaa, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x73,
	0x42, 0x79, 0x56, 0x69, 0x73, 0x69, 0x74, 0x49, 0x64, 0x12, 0x34, 0x2e, 0x64, 0x74, 0x61, 0x2e,
	0x77, 0x65, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x61, 0x74, 0x69, 0x65,
	0x6e, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x42,
	0x79, 0x56, 0x69, 0x73, 0x69, 0x74, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x35, 0x2e, 0x64, 0x74, 0x61, 0x2e, 0x77, 0x65, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x74,
	0x69, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x79, 0x56, 0x69, 0x73, 0x69, 0x74, 0x49, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x12, 0x1d,
	0x2f, 0x76, 0x31, 0x2f, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x76, 0x69, 0x73,
	0x69, 0x74, 0x73, 0x2f, 0x7b, 0x76, 0x69, 0x73, 0x69, 0x74, 0x49, 0x64, 0x7d, 0x42, 0x48, 0x5a,
	0x46, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x77, 0x65, 0x6c, 0x74,
	0x63, 0x6f, 0x72, 0x70, 0x2f, 0x64, 0x74, 0x61, 0x2d, 0x77, 0x65, 0x64, 0x2d, 0x61, 0x70, 0x69,
	0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x64, 0x74, 0x61, 0x2d, 0x77, 0x65, 0x64, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x70,
	0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_dta_wed_api_v1_patients_patients_proto_rawDescOnce sync.Once
	file_dta_wed_api_v1_patients_patients_proto_rawDescData = file_dta_wed_api_v1_patients_patients_proto_rawDesc
)

func file_dta_wed_api_v1_patients_patients_proto_rawDescGZIP() []byte {
	file_dta_wed_api_v1_patients_patients_proto_rawDescOnce.Do(func() {
		file_dta_wed_api_v1_patients_patients_proto_rawDescData = protoimpl.X.CompressGZIP(file_dta_wed_api_v1_patients_patients_proto_rawDescData)
	})
	return file_dta_wed_api_v1_patients_patients_proto_rawDescData
}

var file_dta_wed_api_v1_patients_patients_proto_msgTypes = make([]protoimpl.MessageInfo, 43)
var file_dta_wed_api_v1_patients_patients_proto_goTypes = []interface{}{
	(*GetPatientsByAccountIdRequest)(nil),                                           // 0: dta.wed.api.v1.patients.GetPatientsByAccountIdRequest
	(*GetPatientsByAccountIdResponse)(nil),                                          // 1: dta.wed.api.v1.patients.GetPatientsByAccountIdResponse
	(*GetPatientByUserIdRequest)(nil),                                               // 2: dta.wed.api.v1.patients.GetPatientByUserIdRequest
	(*GetPatientByUserIdResponse)(nil),                                              // 3: dta.wed.api.v1.patients.GetPatientByUserIdResponse
	(*GetPatientsBySiteIdRequest)(nil),                                              // 4: dta.wed.api.v1.patients.GetPatientsBySiteIdRequest
	(*GetPatientsBySiteIdResponse)(nil),                                             // 5: dta.wed.api.v1.patients.GetPatientsBySiteIdResponse
	(*GetPatientMedicalRecordsByUserIdRequest)(nil),                                 // 6: dta.wed.api.v1.patients.GetPatientMedicalRecordsByUserIdRequest
	(*DiaryItemAnswers)(nil),                                                        // 7: dta.wed.api.v1.patients.DiaryItemAnswers
	(*DiaryItemAnswer)(nil),                                                         // 8: dta.wed.api.v1.patients.DiaryItemAnswer
	(*GetPatientMedicalRecordsByUserIdRequestResponse)(nil),                         // 9: dta.wed.api.v1.patients.GetPatientMedicalRecordsByUserIdRequestResponse
	(*GetDropoutPatientsRequest)(nil),                                               // 10: dta.wed.api.v1.patients.GetDropoutPatientsRequest
	(*GetDropoutPatientsResponse)(nil),                                              // 11: dta.wed.api.v1.patients.GetDropoutPatientsResponse
	(*GetPatientsRequest)(nil),                                                      // 12: dta.wed.api.v1.patients.GetPatientsRequest
	(*GetPatientsResponse)(nil),                                                     // 13: dta.wed.api.v1.patients.GetPatientsResponse
	(*GetPatientOverviewRequest)(nil),                                               // 14: dta.wed.api.v1.patients.GetPatientOverviewRequest
	(*GetPatientOverviewResponse)(nil),                                              // 15: dta.wed.api.v1.patients.GetPatientOverviewResponse
	(*GetPatientClinicalRecordsByUserIdRequest)(nil),                                // 16: dta.wed.api.v1.patients.GetPatientClinicalRecordsByUserIdRequest
	(*GetPatientClinicalRecordsByUserIdResponse)(nil),                               // 17: dta.wed.api.v1.patients.GetPatientClinicalRecordsByUserIdResponse
	(*DisablePatientByUserIdRequest)(nil),                                           // 18: dta.wed.api.v1.patients.DisablePatientByUserIdRequest
	(*GetPatientsByVisitIdRequest)(nil),                                             // 19: dta.wed.api.v1.patients.GetPatientsByVisitIdRequest
	(*GetPatientsByVisitIdResponse)(nil),                                            // 20: dta.wed.api.v1.patients.GetPatientsByVisitIdResponse
	(*GetPatientsByAccountIdResponse_Patient)(nil),                                  // 21: dta.wed.api.v1.patients.GetPatientsByAccountIdResponse.Patient
	(*GetPatientByUserIdResponse_Schedule)(nil),                                     // 22: dta.wed.api.v1.patients.GetPatientByUserIdResponse.Schedule
	(*GetPatientByUserIdResponse_MedicalDoctor)(nil),                                // 23: dta.wed.api.v1.patients.GetPatientByUserIdResponse.MedicalDoctor
	(*GetPatientsBySiteIdResponse_Patient)(nil),                                     // 24: dta.wed.api.v1.patients.GetPatientsBySiteIdResponse.Patient
	(*GetPatientsBySiteIdResponse_UnregisteredAccesscode)(nil),                      // 25: dta.wed.api.v1.patients.GetPatientsBySiteIdResponse.UnregisteredAccesscode
	(*GetPatientMedicalRecordsByUserIdRequestResponse_Diary)(nil),                   // 26: dta.wed.api.v1.patients.GetPatientMedicalRecordsByUserIdRequestResponse.Diary
	(*GetPatientMedicalRecordsByUserIdRequestResponse_Lessons)(nil),                 // 27: dta.wed.api.v1.patients.GetPatientMedicalRecordsByUserIdRequestResponse.Lessons
	(*GetPatientMedicalRecordsByUserIdRequestResponse_Questionnaire)(nil),           // 28: dta.wed.api.v1.patients.GetPatientMedicalRecordsByUserIdRequestResponse.Questionnaire
	(*GetPatientMedicalRecordsByUserIdRequestResponse_MedicalNote)(nil),             // 29: dta.wed.api.v1.patients.GetPatientMedicalRecordsByUserIdRequestResponse.MedicalNote
	(*GetPatientMedicalRecordsByUserIdRequestResponse_Data)(nil),                    // 30: dta.wed.api.v1.patients.GetPatientMedicalRecordsByUserIdRequestResponse.Data
	(*GetPatientMedicalRecordsByUserIdRequestResponse_PeriodOfDates)(nil),           // 31: dta.wed.api.v1.patients.GetPatientMedicalRecordsByUserIdRequestResponse.PeriodOfDates
	(*GetPatientMedicalRecordsByUserIdRequestResponse_Lessons_Core)(nil),            // 32: dta.wed.api.v1.patients.GetPatientMedicalRecordsByUserIdRequestResponse.Lessons.Core
	(*GetPatientMedicalRecordsByUserIdRequestResponse_Lessons_Elective)(nil),        // 33: dta.wed.api.v1.patients.GetPatientMedicalRecordsByUserIdRequestResponse.Lessons.Elective
	(*GetPatientMedicalRecordsByUserIdRequestResponse_Lessons_Elective_Lesson)(nil), // 34: dta.wed.api.v1.patients.GetPatientMedicalRecordsByUserIdRequestResponse.Lessons.Elective.Lesson
	(*GetDropoutPatientsResponse_Patient)(nil),                                      // 35: dta.wed.api.v1.patients.GetDropoutPatientsResponse.Patient
	(*GetPatientsResponse_Patient)(nil),                                             // 36: dta.wed.api.v1.patients.GetPatientsResponse.Patient
	(*GetPatientOverviewResponse_Visit)(nil),                                        // 37: dta.wed.api.v1.patients.GetPatientOverviewResponse.Visit
	(*GetPatientOverviewResponse_Lesson)(nil),                                       // 38: dta.wed.api.v1.patients.GetPatientOverviewResponse.Lesson
	(*GetPatientOverviewResponse_MedicalDoctor)(nil),                                // 39: dta.wed.api.v1.patients.GetPatientOverviewResponse.MedicalDoctor
	(*GetPatientOverviewResponse_StatusNote)(nil),                                   // 40: dta.wed.api.v1.patients.GetPatientOverviewResponse.StatusNote
	(*GetPatientClinicalRecordsByUserIdResponse_Data)(nil),                          // 41: dta.wed.api.v1.patients.GetPatientClinicalRecordsByUserIdResponse.Data
	(*GetPatientsByVisitIdResponse_User)(nil),                                       // 42: dta.wed.api.v1.patients.GetPatientsByVisitIdResponse.User
	(*structpb.Struct)(nil),                                                         // 43: google.protobuf.Struct
	(*timestamppb.Timestamp)(nil),                                                   // 44: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),                                                           // 45: google.protobuf.Empty
}
var file_dta_wed_api_v1_patients_patients_proto_depIdxs = []int32{
	21, // 0: dta.wed.api.v1.patients.GetPatientsByAccountIdResponse.patients:type_name -> dta.wed.api.v1.patients.GetPatientsByAccountIdResponse.Patient
	22, // 1: dta.wed.api.v1.patients.GetPatientByUserIdResponse.schedule:type_name -> dta.wed.api.v1.patients.GetPatientByUserIdResponse.Schedule
	23, // 2: dta.wed.api.v1.patients.GetPatientByUserIdResponse.medicalDoctor:type_name -> dta.wed.api.v1.patients.GetPatientByUserIdResponse.MedicalDoctor
	25, // 3: dta.wed.api.v1.patients.GetPatientsBySiteIdResponse.unregistered:type_name -> dta.wed.api.v1.patients.GetPatientsBySiteIdResponse.UnregisteredAccesscode
	24, // 4: dta.wed.api.v1.patients.GetPatientsBySiteIdResponse.patients:type_name -> dta.wed.api.v1.patients.GetPatientsBySiteIdResponse.Patient
	8,  // 5: dta.wed.api.v1.patients.DiaryItemAnswers.itemAnswers:type_name -> dta.wed.api.v1.patients.DiaryItemAnswer
	43, // 6: dta.wed.api.v1.patients.DiaryItemAnswer.itemAnswerData:type_name -> google.protobuf.Struct
	43, // 7: dta.wed.api.v1.patients.DiaryItemAnswer.optionData:type_name -> google.protobuf.Struct
	31, // 8: dta.wed.api.v1.patients.GetPatientMedicalRecordsByUserIdRequestResponse.periodOfDates:type_name -> dta.wed.api.v1.patients.GetPatientMedicalRecordsByUserIdRequestResponse.PeriodOfDates
	30, // 9: dta.wed.api.v1.patients.GetPatientMedicalRecordsByUserIdRequestResponse.data:type_name -> dta.wed.api.v1.patients.GetPatientMedicalRecordsByUserIdRequestResponse.Data
	35, // 10: dta.wed.api.v1.patients.GetDropoutPatientsResponse.data:type_name -> dta.wed.api.v1.patients.GetDropoutPatientsResponse.Patient
	36, // 11: dta.wed.api.v1.patients.GetPatientsResponse.patients:type_name -> dta.wed.api.v1.patients.GetPatientsResponse.Patient
	37, // 12: dta.wed.api.v1.patients.GetPatientOverviewResponse.visits:type_name -> dta.wed.api.v1.patients.GetPatientOverviewResponse.Visit
	40, // 13: dta.wed.api.v1.patients.GetPatientOverviewResponse.statusNote:type_name -> dta.wed.api.v1.patients.GetPatientOverviewResponse.StatusNote
	38, // 14: dta.wed.api.v1.patients.GetPatientOverviewResponse.lessons:type_name -> dta.wed.api.v1.patients.GetPatientOverviewResponse.Lesson
	39, // 15: dta.wed.api.v1.patients.GetPatientOverviewResponse.medicalDoctor:type_name -> dta.wed.api.v1.patients.GetPatientOverviewResponse.MedicalDoctor
	41, // 16: dta.wed.api.v1.patients.GetPatientClinicalRecordsByUserIdResponse.data:type_name -> dta.wed.api.v1.patients.GetPatientClinicalRecordsByUserIdResponse.Data
	42, // 17: dta.wed.api.v1.patients.GetPatientsByVisitIdResponse.users:type_name -> dta.wed.api.v1.patients.GetPatientsByVisitIdResponse.User
	44, // 18: dta.wed.api.v1.patients.GetPatientsByAccountIdResponse.Patient.createdAt:type_name -> google.protobuf.Timestamp
	7,  // 19: dta.wed.api.v1.patients.GetPatientMedicalRecordsByUserIdRequestResponse.Diary.items:type_name -> dta.wed.api.v1.patients.DiaryItemAnswers
	32, // 20: dta.wed.api.v1.patients.GetPatientMedicalRecordsByUserIdRequestResponse.Lessons.core:type_name -> dta.wed.api.v1.patients.GetPatientMedicalRecordsByUserIdRequestResponse.Lessons.Core
	33, // 21: dta.wed.api.v1.patients.GetPatientMedicalRecordsByUserIdRequestResponse.Lessons.elective:type_name -> dta.wed.api.v1.patients.GetPatientMedicalRecordsByUserIdRequestResponse.Lessons.Elective
	26, // 22: dta.wed.api.v1.patients.GetPatientMedicalRecordsByUserIdRequestResponse.Data.diaries:type_name -> dta.wed.api.v1.patients.GetPatientMedicalRecordsByUserIdRequestResponse.Diary
	27, // 23: dta.wed.api.v1.patients.GetPatientMedicalRecordsByUserIdRequestResponse.Data.lessons:type_name -> dta.wed.api.v1.patients.GetPatientMedicalRecordsByUserIdRequestResponse.Lessons
	28, // 24: dta.wed.api.v1.patients.GetPatientMedicalRecordsByUserIdRequestResponse.Data.questionnaires:type_name -> dta.wed.api.v1.patients.GetPatientMedicalRecordsByUserIdRequestResponse.Questionnaire
	29, // 25: dta.wed.api.v1.patients.GetPatientMedicalRecordsByUserIdRequestResponse.Data.medicalNotes:type_name -> dta.wed.api.v1.patients.GetPatientMedicalRecordsByUserIdRequestResponse.MedicalNote
	34, // 26: dta.wed.api.v1.patients.GetPatientMedicalRecordsByUserIdRequestResponse.Lessons.Elective.data:type_name -> dta.wed.api.v1.patients.GetPatientMedicalRecordsByUserIdRequestResponse.Lessons.Elective.Lesson
	12, // 27: dta.wed.api.v1.patients.PatientsData.GetPatients:input_type -> dta.wed.api.v1.patients.GetPatientsRequest
	0,  // 28: dta.wed.api.v1.patients.PatientsData.GetPatientsByAccountId:input_type -> dta.wed.api.v1.patients.GetPatientsByAccountIdRequest
	2,  // 29: dta.wed.api.v1.patients.PatientsData.GetPatientByUserId:input_type -> dta.wed.api.v1.patients.GetPatientByUserIdRequest
	4,  // 30: dta.wed.api.v1.patients.PatientsData.GetPatientsBySiteId:input_type -> dta.wed.api.v1.patients.GetPatientsBySiteIdRequest
	6,  // 31: dta.wed.api.v1.patients.PatientsData.GetPatientMedicalRecordsByUserId:input_type -> dta.wed.api.v1.patients.GetPatientMedicalRecordsByUserIdRequest
	10, // 32: dta.wed.api.v1.patients.PatientsData.GetDropoutPatients:input_type -> dta.wed.api.v1.patients.GetDropoutPatientsRequest
	14, // 33: dta.wed.api.v1.patients.PatientsData.GetPatientOverview:input_type -> dta.wed.api.v1.patients.GetPatientOverviewRequest
	16, // 34: dta.wed.api.v1.patients.PatientsData.GetPatientClinicalRecordsByUserId:input_type -> dta.wed.api.v1.patients.GetPatientClinicalRecordsByUserIdRequest
	18, // 35: dta.wed.api.v1.patients.PatientsData.DisablePatientByUserId:input_type -> dta.wed.api.v1.patients.DisablePatientByUserIdRequest
	19, // 36: dta.wed.api.v1.patients.PatientsData.GetPatientsByVisitId:input_type -> dta.wed.api.v1.patients.GetPatientsByVisitIdRequest
	13, // 37: dta.wed.api.v1.patients.PatientsData.GetPatients:output_type -> dta.wed.api.v1.patients.GetPatientsResponse
	1,  // 38: dta.wed.api.v1.patients.PatientsData.GetPatientsByAccountId:output_type -> dta.wed.api.v1.patients.GetPatientsByAccountIdResponse
	3,  // 39: dta.wed.api.v1.patients.PatientsData.GetPatientByUserId:output_type -> dta.wed.api.v1.patients.GetPatientByUserIdResponse
	5,  // 40: dta.wed.api.v1.patients.PatientsData.GetPatientsBySiteId:output_type -> dta.wed.api.v1.patients.GetPatientsBySiteIdResponse
	9,  // 41: dta.wed.api.v1.patients.PatientsData.GetPatientMedicalRecordsByUserId:output_type -> dta.wed.api.v1.patients.GetPatientMedicalRecordsByUserIdRequestResponse
	11, // 42: dta.wed.api.v1.patients.PatientsData.GetDropoutPatients:output_type -> dta.wed.api.v1.patients.GetDropoutPatientsResponse
	15, // 43: dta.wed.api.v1.patients.PatientsData.GetPatientOverview:output_type -> dta.wed.api.v1.patients.GetPatientOverviewResponse
	17, // 44: dta.wed.api.v1.patients.PatientsData.GetPatientClinicalRecordsByUserId:output_type -> dta.wed.api.v1.patients.GetPatientClinicalRecordsByUserIdResponse
	45, // 45: dta.wed.api.v1.patients.PatientsData.DisablePatientByUserId:output_type -> google.protobuf.Empty
	20, // 46: dta.wed.api.v1.patients.PatientsData.GetPatientsByVisitId:output_type -> dta.wed.api.v1.patients.GetPatientsByVisitIdResponse
	37, // [37:47] is the sub-list for method output_type
	27, // [27:37] is the sub-list for method input_type
	27, // [27:27] is the sub-list for extension type_name
	27, // [27:27] is the sub-list for extension extendee
	0,  // [0:27] is the sub-list for field type_name
}

func init() { file_dta_wed_api_v1_patients_patients_proto_init() }
func file_dta_wed_api_v1_patients_patients_proto_init() {
	if File_dta_wed_api_v1_patients_patients_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_dta_wed_api_v1_patients_patients_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPatientsByAccountIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dta_wed_api_v1_patients_patients_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPatientsByAccountIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dta_wed_api_v1_patients_patients_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPatientByUserIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dta_wed_api_v1_patients_patients_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPatientByUserIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dta_wed_api_v1_patients_patients_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPatientsBySiteIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dta_wed_api_v1_patients_patients_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPatientsBySiteIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dta_wed_api_v1_patients_patients_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPatientMedicalRecordsByUserIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dta_wed_api_v1_patients_patients_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiaryItemAnswers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dta_wed_api_v1_patients_patients_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiaryItemAnswer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dta_wed_api_v1_patients_patients_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPatientMedicalRecordsByUserIdRequestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dta_wed_api_v1_patients_patients_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDropoutPatientsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dta_wed_api_v1_patients_patients_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDropoutPatientsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dta_wed_api_v1_patients_patients_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPatientsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dta_wed_api_v1_patients_patients_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPatientsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dta_wed_api_v1_patients_patients_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPatientOverviewRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dta_wed_api_v1_patients_patients_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPatientOverviewResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dta_wed_api_v1_patients_patients_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPatientClinicalRecordsByUserIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dta_wed_api_v1_patients_patients_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPatientClinicalRecordsByUserIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dta_wed_api_v1_patients_patients_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisablePatientByUserIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dta_wed_api_v1_patients_patients_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPatientsByVisitIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dta_wed_api_v1_patients_patients_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPatientsByVisitIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dta_wed_api_v1_patients_patients_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPatientsByAccountIdResponse_Patient); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dta_wed_api_v1_patients_patients_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPatientByUserIdResponse_Schedule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dta_wed_api_v1_patients_patients_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPatientByUserIdResponse_MedicalDoctor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dta_wed_api_v1_patients_patients_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPatientsBySiteIdResponse_Patient); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dta_wed_api_v1_patients_patients_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPatientsBySiteIdResponse_UnregisteredAccesscode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dta_wed_api_v1_patients_patients_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPatientMedicalRecordsByUserIdRequestResponse_Diary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dta_wed_api_v1_patients_patients_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPatientMedicalRecordsByUserIdRequestResponse_Lessons); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dta_wed_api_v1_patients_patients_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPatientMedicalRecordsByUserIdRequestResponse_Questionnaire); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dta_wed_api_v1_patients_patients_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPatientMedicalRecordsByUserIdRequestResponse_MedicalNote); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dta_wed_api_v1_patients_patients_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPatientMedicalRecordsByUserIdRequestResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dta_wed_api_v1_patients_patients_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPatientMedicalRecordsByUserIdRequestResponse_PeriodOfDates); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dta_wed_api_v1_patients_patients_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPatientMedicalRecordsByUserIdRequestResponse_Lessons_Core); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dta_wed_api_v1_patients_patients_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPatientMedicalRecordsByUserIdRequestResponse_Lessons_Elective); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dta_wed_api_v1_patients_patients_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPatientMedicalRecordsByUserIdRequestResponse_Lessons_Elective_Lesson); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dta_wed_api_v1_patients_patients_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDropoutPatientsResponse_Patient); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dta_wed_api_v1_patients_patients_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPatientsResponse_Patient); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dta_wed_api_v1_patients_patients_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPatientOverviewResponse_Visit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dta_wed_api_v1_patients_patients_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPatientOverviewResponse_Lesson); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dta_wed_api_v1_patients_patients_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPatientOverviewResponse_MedicalDoctor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dta_wed_api_v1_patients_patients_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPatientOverviewResponse_StatusNote); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dta_wed_api_v1_patients_patients_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPatientClinicalRecordsByUserIdResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dta_wed_api_v1_patients_patients_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPatientsByVisitIdResponse_User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_dta_wed_api_v1_patients_patients_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   43,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_dta_wed_api_v1_patients_patients_proto_goTypes,
		DependencyIndexes: file_dta_wed_api_v1_patients_patients_proto_depIdxs,
		MessageInfos:      file_dta_wed_api_v1_patients_patients_proto_msgTypes,
	}.Build()
	File_dta_wed_api_v1_patients_patients_proto = out.File
	file_dta_wed_api_v1_patients_patients_proto_rawDesc = nil
	file_dta_wed_api_v1_patients_patients_proto_goTypes = nil
	file_dta_wed_api_v1_patients_patients_proto_depIdxs = nil
}
