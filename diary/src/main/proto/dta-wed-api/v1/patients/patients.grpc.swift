//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: dta-wed-api/v1/patients/patients.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import GRPC
import NIO
import NIOConcurrencyHelpers
import SwiftProtobuf


/// Usage: instantiate `Dta_Wed_Api_V1_Patients_PatientsDataClient`, then call methods of this protocol to make API calls.
internal protocol Dta_Wed_Api_V1_Patients_PatientsDataClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Dta_Wed_Api_V1_Patients_PatientsDataClientInterceptorFactoryProtocol? { get }

  func getPatients(
    _ request: Dta_Wed_Api_V1_Patients_GetPatientsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Dta_Wed_Api_V1_Patients_GetPatientsRequest, Dta_Wed_Api_V1_Patients_GetPatientsResponse>

  func getPatientsByAccountId(
    _ request: Dta_Wed_Api_V1_Patients_GetPatientsByAccountIdRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Dta_Wed_Api_V1_Patients_GetPatientsByAccountIdRequest, Dta_Wed_Api_V1_Patients_GetPatientsByAccountIdResponse>

  func getPatientByUserId(
    _ request: Dta_Wed_Api_V1_Patients_GetPatientByUserIdRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Dta_Wed_Api_V1_Patients_GetPatientByUserIdRequest, Dta_Wed_Api_V1_Patients_GetPatientByUserIdResponse>

  func getPatientsBySiteId(
    _ request: Dta_Wed_Api_V1_Patients_GetPatientsBySiteIdRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Dta_Wed_Api_V1_Patients_GetPatientsBySiteIdRequest, Dta_Wed_Api_V1_Patients_GetPatientsBySiteIdResponse>

  func getPatientMedicalRecordsByUserId(
    _ request: Dta_Wed_Api_V1_Patients_GetPatientMedicalRecordsByUserIdRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Dta_Wed_Api_V1_Patients_GetPatientMedicalRecordsByUserIdRequest, Dta_Wed_Api_V1_Patients_GetPatientMedicalRecordsByUserIdRequestResponse>

  func getDropoutPatients(
    _ request: Dta_Wed_Api_V1_Patients_GetDropoutPatientsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Dta_Wed_Api_V1_Patients_GetDropoutPatientsRequest, Dta_Wed_Api_V1_Patients_GetDropoutPatientsResponse>

  func getPatientOverview(
    _ request: Dta_Wed_Api_V1_Patients_GetPatientOverviewRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Dta_Wed_Api_V1_Patients_GetPatientOverviewRequest, Dta_Wed_Api_V1_Patients_GetPatientOverviewResponse>

  func getPatientClinicalRecordsByUserId(
    _ request: Dta_Wed_Api_V1_Patients_GetPatientClinicalRecordsByUserIdRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Dta_Wed_Api_V1_Patients_GetPatientClinicalRecordsByUserIdRequest, Dta_Wed_Api_V1_Patients_GetPatientClinicalRecordsByUserIdResponse>

  func disablePatientByUserId(
    _ request: Dta_Wed_Api_V1_Patients_DisablePatientByUserIdRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Dta_Wed_Api_V1_Patients_DisablePatientByUserIdRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func getPatientsByVisitId(
    _ request: Dta_Wed_Api_V1_Patients_GetPatientsByVisitIdRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Dta_Wed_Api_V1_Patients_GetPatientsByVisitIdRequest, Dta_Wed_Api_V1_Patients_GetPatientsByVisitIdResponse>
}

extension Dta_Wed_Api_V1_Patients_PatientsDataClientProtocol {
  internal var serviceName: String {
    return "dta.wed.api.v1.patients.PatientsData"
  }

  /// Unary call to GetPatients
  ///
  /// - Parameters:
  ///   - request: Request to send to GetPatients.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getPatients(
    _ request: Dta_Wed_Api_V1_Patients_GetPatientsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Dta_Wed_Api_V1_Patients_GetPatientsRequest, Dta_Wed_Api_V1_Patients_GetPatientsResponse> {
    return self.makeUnaryCall(
      path: Dta_Wed_Api_V1_Patients_PatientsDataClientMetadata.Methods.getPatients.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetPatientsInterceptors() ?? []
    )
  }

  /// Unary call to GetPatientsByAccountId
  ///
  /// - Parameters:
  ///   - request: Request to send to GetPatientsByAccountId.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getPatientsByAccountId(
    _ request: Dta_Wed_Api_V1_Patients_GetPatientsByAccountIdRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Dta_Wed_Api_V1_Patients_GetPatientsByAccountIdRequest, Dta_Wed_Api_V1_Patients_GetPatientsByAccountIdResponse> {
    return self.makeUnaryCall(
      path: Dta_Wed_Api_V1_Patients_PatientsDataClientMetadata.Methods.getPatientsByAccountId.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetPatientsByAccountIdInterceptors() ?? []
    )
  }

  /// Unary call to GetPatientByUserId
  ///
  /// - Parameters:
  ///   - request: Request to send to GetPatientByUserId.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getPatientByUserId(
    _ request: Dta_Wed_Api_V1_Patients_GetPatientByUserIdRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Dta_Wed_Api_V1_Patients_GetPatientByUserIdRequest, Dta_Wed_Api_V1_Patients_GetPatientByUserIdResponse> {
    return self.makeUnaryCall(
      path: Dta_Wed_Api_V1_Patients_PatientsDataClientMetadata.Methods.getPatientByUserId.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetPatientByUserIdInterceptors() ?? []
    )
  }

  /// Unary call to GetPatientsBySiteId
  ///
  /// - Parameters:
  ///   - request: Request to send to GetPatientsBySiteId.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getPatientsBySiteId(
    _ request: Dta_Wed_Api_V1_Patients_GetPatientsBySiteIdRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Dta_Wed_Api_V1_Patients_GetPatientsBySiteIdRequest, Dta_Wed_Api_V1_Patients_GetPatientsBySiteIdResponse> {
    return self.makeUnaryCall(
      path: Dta_Wed_Api_V1_Patients_PatientsDataClientMetadata.Methods.getPatientsBySiteId.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetPatientsBySiteIdInterceptors() ?? []
    )
  }

  /// Unary call to GetPatientMedicalRecordsByUserId
  ///
  /// - Parameters:
  ///   - request: Request to send to GetPatientMedicalRecordsByUserId.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getPatientMedicalRecordsByUserId(
    _ request: Dta_Wed_Api_V1_Patients_GetPatientMedicalRecordsByUserIdRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Dta_Wed_Api_V1_Patients_GetPatientMedicalRecordsByUserIdRequest, Dta_Wed_Api_V1_Patients_GetPatientMedicalRecordsByUserIdRequestResponse> {
    return self.makeUnaryCall(
      path: Dta_Wed_Api_V1_Patients_PatientsDataClientMetadata.Methods.getPatientMedicalRecordsByUserId.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetPatientMedicalRecordsByUserIdInterceptors() ?? []
    )
  }

  /// Unary call to GetDropoutPatients
  ///
  /// - Parameters:
  ///   - request: Request to send to GetDropoutPatients.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getDropoutPatients(
    _ request: Dta_Wed_Api_V1_Patients_GetDropoutPatientsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Dta_Wed_Api_V1_Patients_GetDropoutPatientsRequest, Dta_Wed_Api_V1_Patients_GetDropoutPatientsResponse> {
    return self.makeUnaryCall(
      path: Dta_Wed_Api_V1_Patients_PatientsDataClientMetadata.Methods.getDropoutPatients.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetDropoutPatientsInterceptors() ?? []
    )
  }

  /// Unary call to GetPatientOverview
  ///
  /// - Parameters:
  ///   - request: Request to send to GetPatientOverview.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getPatientOverview(
    _ request: Dta_Wed_Api_V1_Patients_GetPatientOverviewRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Dta_Wed_Api_V1_Patients_GetPatientOverviewRequest, Dta_Wed_Api_V1_Patients_GetPatientOverviewResponse> {
    return self.makeUnaryCall(
      path: Dta_Wed_Api_V1_Patients_PatientsDataClientMetadata.Methods.getPatientOverview.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetPatientOverviewInterceptors() ?? []
    )
  }

  /// Unary call to GetPatientClinicalRecordsByUserId
  ///
  /// - Parameters:
  ///   - request: Request to send to GetPatientClinicalRecordsByUserId.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getPatientClinicalRecordsByUserId(
    _ request: Dta_Wed_Api_V1_Patients_GetPatientClinicalRecordsByUserIdRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Dta_Wed_Api_V1_Patients_GetPatientClinicalRecordsByUserIdRequest, Dta_Wed_Api_V1_Patients_GetPatientClinicalRecordsByUserIdResponse> {
    return self.makeUnaryCall(
      path: Dta_Wed_Api_V1_Patients_PatientsDataClientMetadata.Methods.getPatientClinicalRecordsByUserId.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetPatientClinicalRecordsByUserIdInterceptors() ?? []
    )
  }

  /// Unary call to DisablePatientByUserId
  ///
  /// - Parameters:
  ///   - request: Request to send to DisablePatientByUserId.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func disablePatientByUserId(
    _ request: Dta_Wed_Api_V1_Patients_DisablePatientByUserIdRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Dta_Wed_Api_V1_Patients_DisablePatientByUserIdRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Dta_Wed_Api_V1_Patients_PatientsDataClientMetadata.Methods.disablePatientByUserId.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDisablePatientByUserIdInterceptors() ?? []
    )
  }

  /// Unary call to GetPatientsByVisitId
  ///
  /// - Parameters:
  ///   - request: Request to send to GetPatientsByVisitId.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getPatientsByVisitId(
    _ request: Dta_Wed_Api_V1_Patients_GetPatientsByVisitIdRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Dta_Wed_Api_V1_Patients_GetPatientsByVisitIdRequest, Dta_Wed_Api_V1_Patients_GetPatientsByVisitIdResponse> {
    return self.makeUnaryCall(
      path: Dta_Wed_Api_V1_Patients_PatientsDataClientMetadata.Methods.getPatientsByVisitId.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetPatientsByVisitIdInterceptors() ?? []
    )
  }
}

#if compiler(>=5.6)
@available(*, deprecated)
extension Dta_Wed_Api_V1_Patients_PatientsDataClient: @unchecked Sendable {}
#endif // compiler(>=5.6)

@available(*, deprecated, renamed: "Dta_Wed_Api_V1_Patients_PatientsDataNIOClient")
internal final class Dta_Wed_Api_V1_Patients_PatientsDataClient: Dta_Wed_Api_V1_Patients_PatientsDataClientProtocol {
  private let lock = Lock()
  private var _defaultCallOptions: CallOptions
  private var _interceptors: Dta_Wed_Api_V1_Patients_PatientsDataClientInterceptorFactoryProtocol?
  internal let channel: GRPCChannel
  internal var defaultCallOptions: CallOptions {
    get { self.lock.withLock { return self._defaultCallOptions } }
    set { self.lock.withLockVoid { self._defaultCallOptions = newValue } }
  }
  internal var interceptors: Dta_Wed_Api_V1_Patients_PatientsDataClientInterceptorFactoryProtocol? {
    get { self.lock.withLock { return self._interceptors } }
    set { self.lock.withLockVoid { self._interceptors = newValue } }
  }

  /// Creates a client for the dta.wed.api.v1.patients.PatientsData service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Dta_Wed_Api_V1_Patients_PatientsDataClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self._defaultCallOptions = defaultCallOptions
    self._interceptors = interceptors
  }
}

internal struct Dta_Wed_Api_V1_Patients_PatientsDataNIOClient: Dta_Wed_Api_V1_Patients_PatientsDataClientProtocol {
  internal var channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Dta_Wed_Api_V1_Patients_PatientsDataClientInterceptorFactoryProtocol?

  /// Creates a client for the dta.wed.api.v1.patients.PatientsData service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Dta_Wed_Api_V1_Patients_PatientsDataClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

#if compiler(>=5.6)
@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal protocol Dta_Wed_Api_V1_Patients_PatientsDataAsyncClientProtocol: GRPCClient {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Dta_Wed_Api_V1_Patients_PatientsDataClientInterceptorFactoryProtocol? { get }

  func makeGetPatientsCall(
    _ request: Dta_Wed_Api_V1_Patients_GetPatientsRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Dta_Wed_Api_V1_Patients_GetPatientsRequest, Dta_Wed_Api_V1_Patients_GetPatientsResponse>

  func makeGetPatientsByAccountIDCall(
    _ request: Dta_Wed_Api_V1_Patients_GetPatientsByAccountIdRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Dta_Wed_Api_V1_Patients_GetPatientsByAccountIdRequest, Dta_Wed_Api_V1_Patients_GetPatientsByAccountIdResponse>

  func makeGetPatientByUserIDCall(
    _ request: Dta_Wed_Api_V1_Patients_GetPatientByUserIdRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Dta_Wed_Api_V1_Patients_GetPatientByUserIdRequest, Dta_Wed_Api_V1_Patients_GetPatientByUserIdResponse>

  func makeGetPatientsBySiteIDCall(
    _ request: Dta_Wed_Api_V1_Patients_GetPatientsBySiteIdRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Dta_Wed_Api_V1_Patients_GetPatientsBySiteIdRequest, Dta_Wed_Api_V1_Patients_GetPatientsBySiteIdResponse>

  func makeGetPatientMedicalRecordsByUserIDCall(
    _ request: Dta_Wed_Api_V1_Patients_GetPatientMedicalRecordsByUserIdRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Dta_Wed_Api_V1_Patients_GetPatientMedicalRecordsByUserIdRequest, Dta_Wed_Api_V1_Patients_GetPatientMedicalRecordsByUserIdRequestResponse>

  func makeGetDropoutPatientsCall(
    _ request: Dta_Wed_Api_V1_Patients_GetDropoutPatientsRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Dta_Wed_Api_V1_Patients_GetDropoutPatientsRequest, Dta_Wed_Api_V1_Patients_GetDropoutPatientsResponse>

  func makeGetPatientOverviewCall(
    _ request: Dta_Wed_Api_V1_Patients_GetPatientOverviewRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Dta_Wed_Api_V1_Patients_GetPatientOverviewRequest, Dta_Wed_Api_V1_Patients_GetPatientOverviewResponse>

  func makeGetPatientClinicalRecordsByUserIDCall(
    _ request: Dta_Wed_Api_V1_Patients_GetPatientClinicalRecordsByUserIdRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Dta_Wed_Api_V1_Patients_GetPatientClinicalRecordsByUserIdRequest, Dta_Wed_Api_V1_Patients_GetPatientClinicalRecordsByUserIdResponse>

  func makeDisablePatientByUserIDCall(
    _ request: Dta_Wed_Api_V1_Patients_DisablePatientByUserIdRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Dta_Wed_Api_V1_Patients_DisablePatientByUserIdRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func makeGetPatientsByVisitIDCall(
    _ request: Dta_Wed_Api_V1_Patients_GetPatientsByVisitIdRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Dta_Wed_Api_V1_Patients_GetPatientsByVisitIdRequest, Dta_Wed_Api_V1_Patients_GetPatientsByVisitIdResponse>
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Dta_Wed_Api_V1_Patients_PatientsDataAsyncClientProtocol {
  internal static var serviceDescriptor: GRPCServiceDescriptor {
    return Dta_Wed_Api_V1_Patients_PatientsDataClientMetadata.serviceDescriptor
  }

  internal var interceptors: Dta_Wed_Api_V1_Patients_PatientsDataClientInterceptorFactoryProtocol? {
    return nil
  }

  internal func makeGetPatientsCall(
    _ request: Dta_Wed_Api_V1_Patients_GetPatientsRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Dta_Wed_Api_V1_Patients_GetPatientsRequest, Dta_Wed_Api_V1_Patients_GetPatientsResponse> {
    return self.makeAsyncUnaryCall(
      path: Dta_Wed_Api_V1_Patients_PatientsDataClientMetadata.Methods.getPatients.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetPatientsInterceptors() ?? []
    )
  }

  internal func makeGetPatientsByAccountIDCall(
    _ request: Dta_Wed_Api_V1_Patients_GetPatientsByAccountIdRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Dta_Wed_Api_V1_Patients_GetPatientsByAccountIdRequest, Dta_Wed_Api_V1_Patients_GetPatientsByAccountIdResponse> {
    return self.makeAsyncUnaryCall(
      path: Dta_Wed_Api_V1_Patients_PatientsDataClientMetadata.Methods.getPatientsByAccountId.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetPatientsByAccountIdInterceptors() ?? []
    )
  }

  internal func makeGetPatientByUserIDCall(
    _ request: Dta_Wed_Api_V1_Patients_GetPatientByUserIdRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Dta_Wed_Api_V1_Patients_GetPatientByUserIdRequest, Dta_Wed_Api_V1_Patients_GetPatientByUserIdResponse> {
    return self.makeAsyncUnaryCall(
      path: Dta_Wed_Api_V1_Patients_PatientsDataClientMetadata.Methods.getPatientByUserId.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetPatientByUserIdInterceptors() ?? []
    )
  }

  internal func makeGetPatientsBySiteIDCall(
    _ request: Dta_Wed_Api_V1_Patients_GetPatientsBySiteIdRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Dta_Wed_Api_V1_Patients_GetPatientsBySiteIdRequest, Dta_Wed_Api_V1_Patients_GetPatientsBySiteIdResponse> {
    return self.makeAsyncUnaryCall(
      path: Dta_Wed_Api_V1_Patients_PatientsDataClientMetadata.Methods.getPatientsBySiteId.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetPatientsBySiteIdInterceptors() ?? []
    )
  }

  internal func makeGetPatientMedicalRecordsByUserIDCall(
    _ request: Dta_Wed_Api_V1_Patients_GetPatientMedicalRecordsByUserIdRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Dta_Wed_Api_V1_Patients_GetPatientMedicalRecordsByUserIdRequest, Dta_Wed_Api_V1_Patients_GetPatientMedicalRecordsByUserIdRequestResponse> {
    return self.makeAsyncUnaryCall(
      path: Dta_Wed_Api_V1_Patients_PatientsDataClientMetadata.Methods.getPatientMedicalRecordsByUserId.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetPatientMedicalRecordsByUserIdInterceptors() ?? []
    )
  }

  internal func makeGetDropoutPatientsCall(
    _ request: Dta_Wed_Api_V1_Patients_GetDropoutPatientsRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Dta_Wed_Api_V1_Patients_GetDropoutPatientsRequest, Dta_Wed_Api_V1_Patients_GetDropoutPatientsResponse> {
    return self.makeAsyncUnaryCall(
      path: Dta_Wed_Api_V1_Patients_PatientsDataClientMetadata.Methods.getDropoutPatients.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetDropoutPatientsInterceptors() ?? []
    )
  }

  internal func makeGetPatientOverviewCall(
    _ request: Dta_Wed_Api_V1_Patients_GetPatientOverviewRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Dta_Wed_Api_V1_Patients_GetPatientOverviewRequest, Dta_Wed_Api_V1_Patients_GetPatientOverviewResponse> {
    return self.makeAsyncUnaryCall(
      path: Dta_Wed_Api_V1_Patients_PatientsDataClientMetadata.Methods.getPatientOverview.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetPatientOverviewInterceptors() ?? []
    )
  }

  internal func makeGetPatientClinicalRecordsByUserIDCall(
    _ request: Dta_Wed_Api_V1_Patients_GetPatientClinicalRecordsByUserIdRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Dta_Wed_Api_V1_Patients_GetPatientClinicalRecordsByUserIdRequest, Dta_Wed_Api_V1_Patients_GetPatientClinicalRecordsByUserIdResponse> {
    return self.makeAsyncUnaryCall(
      path: Dta_Wed_Api_V1_Patients_PatientsDataClientMetadata.Methods.getPatientClinicalRecordsByUserId.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetPatientClinicalRecordsByUserIdInterceptors() ?? []
    )
  }

  internal func makeDisablePatientByUserIDCall(
    _ request: Dta_Wed_Api_V1_Patients_DisablePatientByUserIdRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Dta_Wed_Api_V1_Patients_DisablePatientByUserIdRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Dta_Wed_Api_V1_Patients_PatientsDataClientMetadata.Methods.disablePatientByUserId.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDisablePatientByUserIdInterceptors() ?? []
    )
  }

  internal func makeGetPatientsByVisitIDCall(
    _ request: Dta_Wed_Api_V1_Patients_GetPatientsByVisitIdRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Dta_Wed_Api_V1_Patients_GetPatientsByVisitIdRequest, Dta_Wed_Api_V1_Patients_GetPatientsByVisitIdResponse> {
    return self.makeAsyncUnaryCall(
      path: Dta_Wed_Api_V1_Patients_PatientsDataClientMetadata.Methods.getPatientsByVisitId.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetPatientsByVisitIdInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Dta_Wed_Api_V1_Patients_PatientsDataAsyncClientProtocol {
  internal func getPatients(
    _ request: Dta_Wed_Api_V1_Patients_GetPatientsRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Dta_Wed_Api_V1_Patients_GetPatientsResponse {
    return try await self.performAsyncUnaryCall(
      path: Dta_Wed_Api_V1_Patients_PatientsDataClientMetadata.Methods.getPatients.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetPatientsInterceptors() ?? []
    )
  }

  internal func getPatientsByAccountId(
    _ request: Dta_Wed_Api_V1_Patients_GetPatientsByAccountIdRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Dta_Wed_Api_V1_Patients_GetPatientsByAccountIdResponse {
    return try await self.performAsyncUnaryCall(
      path: Dta_Wed_Api_V1_Patients_PatientsDataClientMetadata.Methods.getPatientsByAccountId.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetPatientsByAccountIdInterceptors() ?? []
    )
  }

  internal func getPatientByUserId(
    _ request: Dta_Wed_Api_V1_Patients_GetPatientByUserIdRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Dta_Wed_Api_V1_Patients_GetPatientByUserIdResponse {
    return try await self.performAsyncUnaryCall(
      path: Dta_Wed_Api_V1_Patients_PatientsDataClientMetadata.Methods.getPatientByUserId.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetPatientByUserIdInterceptors() ?? []
    )
  }

  internal func getPatientsBySiteId(
    _ request: Dta_Wed_Api_V1_Patients_GetPatientsBySiteIdRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Dta_Wed_Api_V1_Patients_GetPatientsBySiteIdResponse {
    return try await self.performAsyncUnaryCall(
      path: Dta_Wed_Api_V1_Patients_PatientsDataClientMetadata.Methods.getPatientsBySiteId.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetPatientsBySiteIdInterceptors() ?? []
    )
  }

  internal func getPatientMedicalRecordsByUserId(
    _ request: Dta_Wed_Api_V1_Patients_GetPatientMedicalRecordsByUserIdRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Dta_Wed_Api_V1_Patients_GetPatientMedicalRecordsByUserIdRequestResponse {
    return try await self.performAsyncUnaryCall(
      path: Dta_Wed_Api_V1_Patients_PatientsDataClientMetadata.Methods.getPatientMedicalRecordsByUserId.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetPatientMedicalRecordsByUserIdInterceptors() ?? []
    )
  }

  internal func getDropoutPatients(
    _ request: Dta_Wed_Api_V1_Patients_GetDropoutPatientsRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Dta_Wed_Api_V1_Patients_GetDropoutPatientsResponse {
    return try await self.performAsyncUnaryCall(
      path: Dta_Wed_Api_V1_Patients_PatientsDataClientMetadata.Methods.getDropoutPatients.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetDropoutPatientsInterceptors() ?? []
    )
  }

  internal func getPatientOverview(
    _ request: Dta_Wed_Api_V1_Patients_GetPatientOverviewRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Dta_Wed_Api_V1_Patients_GetPatientOverviewResponse {
    return try await self.performAsyncUnaryCall(
      path: Dta_Wed_Api_V1_Patients_PatientsDataClientMetadata.Methods.getPatientOverview.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetPatientOverviewInterceptors() ?? []
    )
  }

  internal func getPatientClinicalRecordsByUserId(
    _ request: Dta_Wed_Api_V1_Patients_GetPatientClinicalRecordsByUserIdRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Dta_Wed_Api_V1_Patients_GetPatientClinicalRecordsByUserIdResponse {
    return try await self.performAsyncUnaryCall(
      path: Dta_Wed_Api_V1_Patients_PatientsDataClientMetadata.Methods.getPatientClinicalRecordsByUserId.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetPatientClinicalRecordsByUserIdInterceptors() ?? []
    )
  }

  internal func disablePatientByUserId(
    _ request: Dta_Wed_Api_V1_Patients_DisablePatientByUserIdRequest,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Dta_Wed_Api_V1_Patients_PatientsDataClientMetadata.Methods.disablePatientByUserId.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDisablePatientByUserIdInterceptors() ?? []
    )
  }

  internal func getPatientsByVisitId(
    _ request: Dta_Wed_Api_V1_Patients_GetPatientsByVisitIdRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Dta_Wed_Api_V1_Patients_GetPatientsByVisitIdResponse {
    return try await self.performAsyncUnaryCall(
      path: Dta_Wed_Api_V1_Patients_PatientsDataClientMetadata.Methods.getPatientsByVisitId.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetPatientsByVisitIdInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal struct Dta_Wed_Api_V1_Patients_PatientsDataAsyncClient: Dta_Wed_Api_V1_Patients_PatientsDataAsyncClientProtocol {
  internal var channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Dta_Wed_Api_V1_Patients_PatientsDataClientInterceptorFactoryProtocol?

  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Dta_Wed_Api_V1_Patients_PatientsDataClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

#endif // compiler(>=5.6)

internal protocol Dta_Wed_Api_V1_Patients_PatientsDataClientInterceptorFactoryProtocol: GRPCSendable {

  /// - Returns: Interceptors to use when invoking 'getPatients'.
  func makeGetPatientsInterceptors() -> [ClientInterceptor<Dta_Wed_Api_V1_Patients_GetPatientsRequest, Dta_Wed_Api_V1_Patients_GetPatientsResponse>]

  /// - Returns: Interceptors to use when invoking 'getPatientsByAccountId'.
  func makeGetPatientsByAccountIdInterceptors() -> [ClientInterceptor<Dta_Wed_Api_V1_Patients_GetPatientsByAccountIdRequest, Dta_Wed_Api_V1_Patients_GetPatientsByAccountIdResponse>]

  /// - Returns: Interceptors to use when invoking 'getPatientByUserId'.
  func makeGetPatientByUserIdInterceptors() -> [ClientInterceptor<Dta_Wed_Api_V1_Patients_GetPatientByUserIdRequest, Dta_Wed_Api_V1_Patients_GetPatientByUserIdResponse>]

  /// - Returns: Interceptors to use when invoking 'getPatientsBySiteId'.
  func makeGetPatientsBySiteIdInterceptors() -> [ClientInterceptor<Dta_Wed_Api_V1_Patients_GetPatientsBySiteIdRequest, Dta_Wed_Api_V1_Patients_GetPatientsBySiteIdResponse>]

  /// - Returns: Interceptors to use when invoking 'getPatientMedicalRecordsByUserId'.
  func makeGetPatientMedicalRecordsByUserIdInterceptors() -> [ClientInterceptor<Dta_Wed_Api_V1_Patients_GetPatientMedicalRecordsByUserIdRequest, Dta_Wed_Api_V1_Patients_GetPatientMedicalRecordsByUserIdRequestResponse>]

  /// - Returns: Interceptors to use when invoking 'getDropoutPatients'.
  func makeGetDropoutPatientsInterceptors() -> [ClientInterceptor<Dta_Wed_Api_V1_Patients_GetDropoutPatientsRequest, Dta_Wed_Api_V1_Patients_GetDropoutPatientsResponse>]

  /// - Returns: Interceptors to use when invoking 'getPatientOverview'.
  func makeGetPatientOverviewInterceptors() -> [ClientInterceptor<Dta_Wed_Api_V1_Patients_GetPatientOverviewRequest, Dta_Wed_Api_V1_Patients_GetPatientOverviewResponse>]

  /// - Returns: Interceptors to use when invoking 'getPatientClinicalRecordsByUserId'.
  func makeGetPatientClinicalRecordsByUserIdInterceptors() -> [ClientInterceptor<Dta_Wed_Api_V1_Patients_GetPatientClinicalRecordsByUserIdRequest, Dta_Wed_Api_V1_Patients_GetPatientClinicalRecordsByUserIdResponse>]

  /// - Returns: Interceptors to use when invoking 'disablePatientByUserId'.
  func makeDisablePatientByUserIdInterceptors() -> [ClientInterceptor<Dta_Wed_Api_V1_Patients_DisablePatientByUserIdRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'getPatientsByVisitId'.
  func makeGetPatientsByVisitIdInterceptors() -> [ClientInterceptor<Dta_Wed_Api_V1_Patients_GetPatientsByVisitIdRequest, Dta_Wed_Api_V1_Patients_GetPatientsByVisitIdResponse>]
}

internal enum Dta_Wed_Api_V1_Patients_PatientsDataClientMetadata {
  internal static let serviceDescriptor = GRPCServiceDescriptor(
    name: "PatientsData",
    fullName: "dta.wed.api.v1.patients.PatientsData",
    methods: [
      Dta_Wed_Api_V1_Patients_PatientsDataClientMetadata.Methods.getPatients,
      Dta_Wed_Api_V1_Patients_PatientsDataClientMetadata.Methods.getPatientsByAccountId,
      Dta_Wed_Api_V1_Patients_PatientsDataClientMetadata.Methods.getPatientByUserId,
      Dta_Wed_Api_V1_Patients_PatientsDataClientMetadata.Methods.getPatientsBySiteId,
      Dta_Wed_Api_V1_Patients_PatientsDataClientMetadata.Methods.getPatientMedicalRecordsByUserId,
      Dta_Wed_Api_V1_Patients_PatientsDataClientMetadata.Methods.getDropoutPatients,
      Dta_Wed_Api_V1_Patients_PatientsDataClientMetadata.Methods.getPatientOverview,
      Dta_Wed_Api_V1_Patients_PatientsDataClientMetadata.Methods.getPatientClinicalRecordsByUserId,
      Dta_Wed_Api_V1_Patients_PatientsDataClientMetadata.Methods.disablePatientByUserId,
      Dta_Wed_Api_V1_Patients_PatientsDataClientMetadata.Methods.getPatientsByVisitId,
    ]
  )

  internal enum Methods {
    internal static let getPatients = GRPCMethodDescriptor(
      name: "GetPatients",
      path: "/dta.wed.api.v1.patients.PatientsData/GetPatients",
      type: GRPCCallType.unary
    )

    internal static let getPatientsByAccountId = GRPCMethodDescriptor(
      name: "GetPatientsByAccountId",
      path: "/dta.wed.api.v1.patients.PatientsData/GetPatientsByAccountId",
      type: GRPCCallType.unary
    )

    internal static let getPatientByUserId = GRPCMethodDescriptor(
      name: "GetPatientByUserId",
      path: "/dta.wed.api.v1.patients.PatientsData/GetPatientByUserId",
      type: GRPCCallType.unary
    )

    internal static let getPatientsBySiteId = GRPCMethodDescriptor(
      name: "GetPatientsBySiteId",
      path: "/dta.wed.api.v1.patients.PatientsData/GetPatientsBySiteId",
      type: GRPCCallType.unary
    )

    internal static let getPatientMedicalRecordsByUserId = GRPCMethodDescriptor(
      name: "GetPatientMedicalRecordsByUserId",
      path: "/dta.wed.api.v1.patients.PatientsData/GetPatientMedicalRecordsByUserId",
      type: GRPCCallType.unary
    )

    internal static let getDropoutPatients = GRPCMethodDescriptor(
      name: "GetDropoutPatients",
      path: "/dta.wed.api.v1.patients.PatientsData/GetDropoutPatients",
      type: GRPCCallType.unary
    )

    internal static let getPatientOverview = GRPCMethodDescriptor(
      name: "GetPatientOverview",
      path: "/dta.wed.api.v1.patients.PatientsData/GetPatientOverview",
      type: GRPCCallType.unary
    )

    internal static let getPatientClinicalRecordsByUserId = GRPCMethodDescriptor(
      name: "GetPatientClinicalRecordsByUserId",
      path: "/dta.wed.api.v1.patients.PatientsData/GetPatientClinicalRecordsByUserId",
      type: GRPCCallType.unary
    )

    internal static let disablePatientByUserId = GRPCMethodDescriptor(
      name: "DisablePatientByUserId",
      path: "/dta.wed.api.v1.patients.PatientsData/DisablePatientByUserId",
      type: GRPCCallType.unary
    )

    internal static let getPatientsByVisitId = GRPCMethodDescriptor(
      name: "GetPatientsByVisitId",
      path: "/dta.wed.api.v1.patients.PatientsData/GetPatientsByVisitId",
      type: GRPCCallType.unary
    )
  }
}

