// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: dta-wed-api/v1/accesscodes/accesscodes.proto

package accesscodes

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetAccesscodePatientsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SiteId  int32  `protobuf:"varint,1,opt,name=siteId,proto3" json:"siteId,omitempty"`
	Limit   int32  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Page    int32  `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	OrderBy string `protobuf:"bytes,4,opt,name=orderBy,proto3" json:"orderBy,omitempty"`
	Asc     string `protobuf:"bytes,5,opt,name=asc,proto3" json:"asc,omitempty"`
}

func (x *GetAccesscodePatientsRequest) Reset() {
	*x = GetAccesscodePatientsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dta_wed_api_v1_accesscodes_accesscodes_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAccesscodePatientsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccesscodePatientsRequest) ProtoMessage() {}

func (x *GetAccesscodePatientsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dta_wed_api_v1_accesscodes_accesscodes_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccesscodePatientsRequest.ProtoReflect.Descriptor instead.
func (*GetAccesscodePatientsRequest) Descriptor() ([]byte, []int) {
	return file_dta_wed_api_v1_accesscodes_accesscodes_proto_rawDescGZIP(), []int{0}
}

func (x *GetAccesscodePatientsRequest) GetSiteId() int32 {
	if x != nil {
		return x.SiteId
	}
	return 0
}

func (x *GetAccesscodePatientsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetAccesscodePatientsRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetAccesscodePatientsRequest) GetOrderBy() string {
	if x != nil {
		return x.OrderBy
	}
	return ""
}

func (x *GetAccesscodePatientsRequest) GetAsc() string {
	if x != nil {
		return x.Asc
	}
	return ""
}

type AccesscodePatientData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Accesscode        string `protobuf:"bytes,1,opt,name=accesscode,proto3" json:"accesscode,omitempty"`
	Email             string `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	EmailRegisteredAt int32  `protobuf:"varint,3,opt,name=emailRegisteredAt,proto3" json:"emailRegisteredAt,omitempty"`
	UserId            int32  `protobuf:"varint,4,opt,name=userId,proto3" json:"userId,omitempty"`
	UserCreatedAt     int32  `protobuf:"varint,5,opt,name=userCreatedAt,proto3" json:"userCreatedAt,omitempty"`
	CreatedAt         int32  `protobuf:"varint,6,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	DDay              int32  `protobuf:"varint,7,opt,name=dDay,proto3" json:"dDay,omitempty"`
	Status            int32  `protobuf:"varint,8,opt,name=status,proto3" json:"status,omitempty"`
	ExpiresAt         int32  `protobuf:"varint,9,opt,name=expiresAt,proto3" json:"expiresAt,omitempty"`
	UserStartedAt     int32  `protobuf:"varint,10,opt,name=userStartedAt,proto3" json:"userStartedAt,omitempty"`
	UserEndAt         int32  `protobuf:"varint,11,opt,name=userEndAt,proto3" json:"userEndAt,omitempty"`
}

func (x *AccesscodePatientData) Reset() {
	*x = AccesscodePatientData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dta_wed_api_v1_accesscodes_accesscodes_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccesscodePatientData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccesscodePatientData) ProtoMessage() {}

func (x *AccesscodePatientData) ProtoReflect() protoreflect.Message {
	mi := &file_dta_wed_api_v1_accesscodes_accesscodes_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccesscodePatientData.ProtoReflect.Descriptor instead.
func (*AccesscodePatientData) Descriptor() ([]byte, []int) {
	return file_dta_wed_api_v1_accesscodes_accesscodes_proto_rawDescGZIP(), []int{1}
}

func (x *AccesscodePatientData) GetAccesscode() string {
	if x != nil {
		return x.Accesscode
	}
	return ""
}

func (x *AccesscodePatientData) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *AccesscodePatientData) GetEmailRegisteredAt() int32 {
	if x != nil {
		return x.EmailRegisteredAt
	}
	return 0
}

func (x *AccesscodePatientData) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *AccesscodePatientData) GetUserCreatedAt() int32 {
	if x != nil {
		return x.UserCreatedAt
	}
	return 0
}

func (x *AccesscodePatientData) GetCreatedAt() int32 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *AccesscodePatientData) GetDDay() int32 {
	if x != nil {
		return x.DDay
	}
	return 0
}

func (x *AccesscodePatientData) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AccesscodePatientData) GetExpiresAt() int32 {
	if x != nil {
		return x.ExpiresAt
	}
	return 0
}

func (x *AccesscodePatientData) GetUserStartedAt() int32 {
	if x != nil {
		return x.UserStartedAt
	}
	return 0
}

func (x *AccesscodePatientData) GetUserEndAt() int32 {
	if x != nil {
		return x.UserEndAt
	}
	return 0
}

type GetAccesscodePatientsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalCount int32                    `protobuf:"varint,1,opt,name=totalCount,proto3" json:"totalCount,omitempty"`
	Page       int32                    `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	Count      int32                    `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
	Data       []*AccesscodePatientData `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetAccesscodePatientsResponse) Reset() {
	*x = GetAccesscodePatientsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dta_wed_api_v1_accesscodes_accesscodes_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAccesscodePatientsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccesscodePatientsResponse) ProtoMessage() {}

func (x *GetAccesscodePatientsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dta_wed_api_v1_accesscodes_accesscodes_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccesscodePatientsResponse.ProtoReflect.Descriptor instead.
func (*GetAccesscodePatientsResponse) Descriptor() ([]byte, []int) {
	return file_dta_wed_api_v1_accesscodes_accesscodes_proto_rawDescGZIP(), []int{2}
}

func (x *GetAccesscodePatientsResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *GetAccesscodePatientsResponse) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetAccesscodePatientsResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *GetAccesscodePatientsResponse) GetData() []*AccesscodePatientData {
	if x != nil {
		return x.Data
	}
	return nil
}

type UpdateAccesscodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Accesscode string `protobuf:"bytes,1,opt,name=accesscode,proto3" json:"accesscode,omitempty"`
	Email      string `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	AccountId  int32  `protobuf:"varint,4,opt,name=accountId,proto3" json:"accountId,omitempty"`
}

func (x *UpdateAccesscodeRequest) Reset() {
	*x = UpdateAccesscodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dta_wed_api_v1_accesscodes_accesscodes_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAccesscodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAccesscodeRequest) ProtoMessage() {}

func (x *UpdateAccesscodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dta_wed_api_v1_accesscodes_accesscodes_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAccesscodeRequest.ProtoReflect.Descriptor instead.
func (*UpdateAccesscodeRequest) Descriptor() ([]byte, []int) {
	return file_dta_wed_api_v1_accesscodes_accesscodes_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateAccesscodeRequest) GetAccesscode() string {
	if x != nil {
		return x.Accesscode
	}
	return ""
}

func (x *UpdateAccesscodeRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UpdateAccesscodeRequest) GetAccountId() int32 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

type GetUserIdByAccesscodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Accesscode string `protobuf:"bytes,1,opt,name=accesscode,proto3" json:"accesscode,omitempty"`
	SiteId     int32  `protobuf:"varint,2,opt,name=siteId,proto3" json:"siteId,omitempty"`
}

func (x *GetUserIdByAccesscodeRequest) Reset() {
	*x = GetUserIdByAccesscodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dta_wed_api_v1_accesscodes_accesscodes_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserIdByAccesscodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserIdByAccesscodeRequest) ProtoMessage() {}

func (x *GetUserIdByAccesscodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dta_wed_api_v1_accesscodes_accesscodes_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserIdByAccesscodeRequest.ProtoReflect.Descriptor instead.
func (*GetUserIdByAccesscodeRequest) Descriptor() ([]byte, []int) {
	return file_dta_wed_api_v1_accesscodes_accesscodes_proto_rawDescGZIP(), []int{4}
}

func (x *GetUserIdByAccesscodeRequest) GetAccesscode() string {
	if x != nil {
		return x.Accesscode
	}
	return ""
}

func (x *GetUserIdByAccesscodeRequest) GetSiteId() int32 {
	if x != nil {
		return x.SiteId
	}
	return 0
}

type GetUserIdByAccesscodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int32 `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *GetUserIdByAccesscodeResponse) Reset() {
	*x = GetUserIdByAccesscodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dta_wed_api_v1_accesscodes_accesscodes_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserIdByAccesscodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserIdByAccesscodeResponse) ProtoMessage() {}

func (x *GetUserIdByAccesscodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dta_wed_api_v1_accesscodes_accesscodes_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserIdByAccesscodeResponse.ProtoReflect.Descriptor instead.
func (*GetUserIdByAccesscodeResponse) Descriptor() ([]byte, []int) {
	return file_dta_wed_api_v1_accesscodes_accesscodes_proto_rawDescGZIP(), []int{5}
}

func (x *GetUserIdByAccesscodeResponse) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

var File_dta_wed_api_v1_accesscodes_accesscodes_proto protoreflect.FileDescriptor

var file_dta_wed_api_v1_accesscodes_accesscodes_proto_rawDesc = []byte{
	0x0a, 0x2c, 0x64, 0x74, 0x61, 0x2d, 0x77, 0x65, 0x64, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31,
	0x2f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x2f, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1a,
	0x64, 0x74, 0x61, 0x2e, 0x77, 0x65, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8c,
	0x01, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x63, 0x6f, 0x64, 0x65,
	0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x69, 0x74, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x73, 0x69, 0x74, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x61,
	0x73, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x73, 0x63, 0x22, 0xe5, 0x02,
	0x0a, 0x15, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x50, 0x61, 0x74, 0x69,
	0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x2c, 0x0a,
	0x11, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64,
	0x41, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x41, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x75, 0x73, 0x65, 0x72,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x44, 0x61, 0x79, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x64, 0x44, 0x61, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x41, 0x74,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x41,
	0x74, 0x12, 0x24, 0x0a, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x45,
	0x6e, 0x64, 0x41, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72,
	0x45, 0x6e, 0x64, 0x41, 0x74, 0x22, 0xb0, 0x01, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x45, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x31, 0x2e, 0x64, 0x74, 0x61, 0x2e, 0x77, 0x65, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x2e, 0x41, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x84, 0x01, 0x0a, 0x17, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10,
	0x08, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x22, 0x0a,
	0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xfa, 0x42,
	0x09, 0x72, 0x07, 0x10, 0x02, 0x60, 0x01, 0xd0, 0x01, 0x01, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22,
	0x5f, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x42, 0x79, 0x41, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x27, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x08, 0x52, 0x0a, 0x61, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x69, 0x74, 0x65,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x69, 0x74, 0x65, 0x49, 0x64,
	0x22, 0x37, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x42, 0x79, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x32, 0x8e, 0x04, 0x0a, 0x0f, 0x41, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0xae, 0x01,
	0x0a, 0x15, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x50,
	0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x38, 0x2e, 0x64, 0x74, 0x61, 0x2e, 0x77, 0x65,
	0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x63,
	0x6f, 0x64, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x63, 0x6f,
	0x64, 0x65, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x39, 0x2e, 0x64, 0x74, 0x61, 0x2e, 0x77, 0x65, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x2e, 0x47,
	0x65, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x50, 0x61, 0x74, 0x69,
	0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x20, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x1a, 0x12, 0x18, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x63, 0x6f, 0x64, 0x65, 0x73, 0x2f, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x8d,
	0x01, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x33, 0x2e, 0x64, 0x74, 0x61, 0x2e, 0x77, 0x65, 0x64, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x73,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x63, 0x6f, 0x64,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x2c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x26, 0x32, 0x21, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x2f, 0x63, 0x6f, 0x64, 0x65, 0x2f, 0x7b,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x7d, 0x3a, 0x01, 0x2a, 0x12, 0xb9,
	0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x42, 0x79, 0x41, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x38, 0x2e, 0x64, 0x74, 0x61, 0x2e, 0x77,
	0x65, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x63, 0x6f, 0x64, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x42,
	0x79, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x39, 0x2e, 0x64, 0x74, 0x61, 0x2e, 0x77, 0x65, 0x64, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x2e,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x42, 0x79, 0x41, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2b, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x25, 0x12, 0x23, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x2f, 0x7b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x63, 0x6f,
	0x64, 0x65, 0x7d, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x42, 0x4b, 0x5a, 0x49, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x77, 0x65, 0x6c, 0x74, 0x63, 0x6f, 0x72,
	0x70, 0x2f, 0x64, 0x74, 0x61, 0x2d, 0x77, 0x65, 0x64, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x64, 0x74, 0x61,
	0x2d, 0x77, 0x65, 0x64, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_dta_wed_api_v1_accesscodes_accesscodes_proto_rawDescOnce sync.Once
	file_dta_wed_api_v1_accesscodes_accesscodes_proto_rawDescData = file_dta_wed_api_v1_accesscodes_accesscodes_proto_rawDesc
)

func file_dta_wed_api_v1_accesscodes_accesscodes_proto_rawDescGZIP() []byte {
	file_dta_wed_api_v1_accesscodes_accesscodes_proto_rawDescOnce.Do(func() {
		file_dta_wed_api_v1_accesscodes_accesscodes_proto_rawDescData = protoimpl.X.CompressGZIP(file_dta_wed_api_v1_accesscodes_accesscodes_proto_rawDescData)
	})
	return file_dta_wed_api_v1_accesscodes_accesscodes_proto_rawDescData
}

var file_dta_wed_api_v1_accesscodes_accesscodes_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_dta_wed_api_v1_accesscodes_accesscodes_proto_goTypes = []interface{}{
	(*GetAccesscodePatientsRequest)(nil),  // 0: dta.wed.api.v1.accesscodes.GetAccesscodePatientsRequest
	(*AccesscodePatientData)(nil),         // 1: dta.wed.api.v1.accesscodes.AccesscodePatientData
	(*GetAccesscodePatientsResponse)(nil), // 2: dta.wed.api.v1.accesscodes.GetAccesscodePatientsResponse
	(*UpdateAccesscodeRequest)(nil),       // 3: dta.wed.api.v1.accesscodes.UpdateAccesscodeRequest
	(*GetUserIdByAccesscodeRequest)(nil),  // 4: dta.wed.api.v1.accesscodes.GetUserIdByAccesscodeRequest
	(*GetUserIdByAccesscodeResponse)(nil), // 5: dta.wed.api.v1.accesscodes.GetUserIdByAccesscodeResponse
	(*emptypb.Empty)(nil),                 // 6: google.protobuf.Empty
}
var file_dta_wed_api_v1_accesscodes_accesscodes_proto_depIdxs = []int32{
	1, // 0: dta.wed.api.v1.accesscodes.GetAccesscodePatientsResponse.data:type_name -> dta.wed.api.v1.accesscodes.AccesscodePatientData
	0, // 1: dta.wed.api.v1.accesscodes.AccesscodesData.GetAccesscodePatients:input_type -> dta.wed.api.v1.accesscodes.GetAccesscodePatientsRequest
	3, // 2: dta.wed.api.v1.accesscodes.AccesscodesData.UpdateAccesscode:input_type -> dta.wed.api.v1.accesscodes.UpdateAccesscodeRequest
	4, // 3: dta.wed.api.v1.accesscodes.AccesscodesData.GetUserIdByAccesscode:input_type -> dta.wed.api.v1.accesscodes.GetUserIdByAccesscodeRequest
	2, // 4: dta.wed.api.v1.accesscodes.AccesscodesData.GetAccesscodePatients:output_type -> dta.wed.api.v1.accesscodes.GetAccesscodePatientsResponse
	6, // 5: dta.wed.api.v1.accesscodes.AccesscodesData.UpdateAccesscode:output_type -> google.protobuf.Empty
	5, // 6: dta.wed.api.v1.accesscodes.AccesscodesData.GetUserIdByAccesscode:output_type -> dta.wed.api.v1.accesscodes.GetUserIdByAccesscodeResponse
	4, // [4:7] is the sub-list for method output_type
	1, // [1:4] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_dta_wed_api_v1_accesscodes_accesscodes_proto_init() }
func file_dta_wed_api_v1_accesscodes_accesscodes_proto_init() {
	if File_dta_wed_api_v1_accesscodes_accesscodes_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_dta_wed_api_v1_accesscodes_accesscodes_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAccesscodePatientsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dta_wed_api_v1_accesscodes_accesscodes_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccesscodePatientData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dta_wed_api_v1_accesscodes_accesscodes_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAccesscodePatientsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dta_wed_api_v1_accesscodes_accesscodes_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAccesscodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dta_wed_api_v1_accesscodes_accesscodes_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserIdByAccesscodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dta_wed_api_v1_accesscodes_accesscodes_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserIdByAccesscodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_dta_wed_api_v1_accesscodes_accesscodes_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_dta_wed_api_v1_accesscodes_accesscodes_proto_goTypes,
		DependencyIndexes: file_dta_wed_api_v1_accesscodes_accesscodes_proto_depIdxs,
		MessageInfos:      file_dta_wed_api_v1_accesscodes_accesscodes_proto_msgTypes,
	}.Build()
	File_dta_wed_api_v1_accesscodes_accesscodes_proto = out.File
	file_dta_wed_api_v1_accesscodes_accesscodes_proto_rawDesc = nil
	file_dta_wed_api_v1_accesscodes_accesscodes_proto_goTypes = nil
	file_dta_wed_api_v1_accesscodes_accesscodes_proto_depIdxs = nil
}
