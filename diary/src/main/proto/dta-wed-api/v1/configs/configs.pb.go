// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: dta-wed-api/v1/configs/configs.proto

package configs

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateUserDbmPermissionLogRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      int32            `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	DeviceName  string           `protobuf:"bytes,2,opt,name=deviceName,proto3" json:"deviceName,omitempty"`
	Platform    string           `protobuf:"bytes,3,opt,name=platform,proto3" json:"platform,omitempty"`
	Permissions *structpb.Struct `protobuf:"bytes,4,opt,name=permissions,proto3" json:"permissions,omitempty"`
}

func (x *CreateUserDbmPermissionLogRequest) Reset() {
	*x = CreateUserDbmPermissionLogRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dta_wed_api_v1_configs_configs_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserDbmPermissionLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserDbmPermissionLogRequest) ProtoMessage() {}

func (x *CreateUserDbmPermissionLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dta_wed_api_v1_configs_configs_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserDbmPermissionLogRequest.ProtoReflect.Descriptor instead.
func (*CreateUserDbmPermissionLogRequest) Descriptor() ([]byte, []int) {
	return file_dta_wed_api_v1_configs_configs_proto_rawDescGZIP(), []int{0}
}

func (x *CreateUserDbmPermissionLogRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CreateUserDbmPermissionLogRequest) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

func (x *CreateUserDbmPermissionLogRequest) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *CreateUserDbmPermissionLogRequest) GetPermissions() *structpb.Struct {
	if x != nil {
		return x.Permissions
	}
	return nil
}

type UpsertUserConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId                int32   `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	InAppPushNotification *bool   `protobuf:"varint,2,opt,name=inAppPushNotification,proto3,oneof" json:"inAppPushNotification,omitempty"`
	AppPushNotification   *bool   `protobuf:"varint,3,opt,name=appPushNotification,proto3,oneof" json:"appPushNotification,omitempty"`
	Platform              *string `protobuf:"bytes,4,opt,name=platform,proto3,oneof" json:"platform,omitempty"`
	DeviceName            *string `protobuf:"bytes,5,opt,name=deviceName,proto3,oneof" json:"deviceName,omitempty"`
	OsVersion             *string `protobuf:"bytes,6,opt,name=osVersion,proto3,oneof" json:"osVersion,omitempty"`
	AppVersion            *string `protobuf:"bytes,7,opt,name=appVersion,proto3,oneof" json:"appVersion,omitempty"`
	WebAppVersion         *string `protobuf:"bytes,8,opt,name=webAppVersion,proto3,oneof" json:"webAppVersion,omitempty"`
}

func (x *UpsertUserConfigRequest) Reset() {
	*x = UpsertUserConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dta_wed_api_v1_configs_configs_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertUserConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertUserConfigRequest) ProtoMessage() {}

func (x *UpsertUserConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dta_wed_api_v1_configs_configs_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertUserConfigRequest.ProtoReflect.Descriptor instead.
func (*UpsertUserConfigRequest) Descriptor() ([]byte, []int) {
	return file_dta_wed_api_v1_configs_configs_proto_rawDescGZIP(), []int{1}
}

func (x *UpsertUserConfigRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UpsertUserConfigRequest) GetInAppPushNotification() bool {
	if x != nil && x.InAppPushNotification != nil {
		return *x.InAppPushNotification
	}
	return false
}

func (x *UpsertUserConfigRequest) GetAppPushNotification() bool {
	if x != nil && x.AppPushNotification != nil {
		return *x.AppPushNotification
	}
	return false
}

func (x *UpsertUserConfigRequest) GetPlatform() string {
	if x != nil && x.Platform != nil {
		return *x.Platform
	}
	return ""
}

func (x *UpsertUserConfigRequest) GetDeviceName() string {
	if x != nil && x.DeviceName != nil {
		return *x.DeviceName
	}
	return ""
}

func (x *UpsertUserConfigRequest) GetOsVersion() string {
	if x != nil && x.OsVersion != nil {
		return *x.OsVersion
	}
	return ""
}

func (x *UpsertUserConfigRequest) GetAppVersion() string {
	if x != nil && x.AppVersion != nil {
		return *x.AppVersion
	}
	return ""
}

func (x *UpsertUserConfigRequest) GetWebAppVersion() string {
	if x != nil && x.WebAppVersion != nil {
		return *x.WebAppVersion
	}
	return ""
}

type GetUserConfigPushNotificationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int32 `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *GetUserConfigPushNotificationRequest) Reset() {
	*x = GetUserConfigPushNotificationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dta_wed_api_v1_configs_configs_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserConfigPushNotificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserConfigPushNotificationRequest) ProtoMessage() {}

func (x *GetUserConfigPushNotificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dta_wed_api_v1_configs_configs_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserConfigPushNotificationRequest.ProtoReflect.Descriptor instead.
func (*GetUserConfigPushNotificationRequest) Descriptor() ([]byte, []int) {
	return file_dta_wed_api_v1_configs_configs_proto_rawDescGZIP(), []int{2}
}

func (x *GetUserConfigPushNotificationRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type GetUserConfigPushNotificationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId                int32 `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	InAppPushNotification bool  `protobuf:"varint,2,opt,name=inAppPushNotification,proto3" json:"inAppPushNotification,omitempty"`
}

func (x *GetUserConfigPushNotificationResponse) Reset() {
	*x = GetUserConfigPushNotificationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dta_wed_api_v1_configs_configs_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserConfigPushNotificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserConfigPushNotificationResponse) ProtoMessage() {}

func (x *GetUserConfigPushNotificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dta_wed_api_v1_configs_configs_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserConfigPushNotificationResponse.ProtoReflect.Descriptor instead.
func (*GetUserConfigPushNotificationResponse) Descriptor() ([]byte, []int) {
	return file_dta_wed_api_v1_configs_configs_proto_rawDescGZIP(), []int{3}
}

func (x *GetUserConfigPushNotificationResponse) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetUserConfigPushNotificationResponse) GetInAppPushNotification() bool {
	if x != nil {
		return x.InAppPushNotification
	}
	return false
}

type UpsertUserFcmTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   int32  `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Os       string `protobuf:"bytes,2,opt,name=os,proto3" json:"os,omitempty"`
	FcmToken string `protobuf:"bytes,3,opt,name=fcmToken,proto3" json:"fcmToken,omitempty"`
}

func (x *UpsertUserFcmTokenRequest) Reset() {
	*x = UpsertUserFcmTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dta_wed_api_v1_configs_configs_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertUserFcmTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertUserFcmTokenRequest) ProtoMessage() {}

func (x *UpsertUserFcmTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dta_wed_api_v1_configs_configs_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertUserFcmTokenRequest.ProtoReflect.Descriptor instead.
func (*UpsertUserFcmTokenRequest) Descriptor() ([]byte, []int) {
	return file_dta_wed_api_v1_configs_configs_proto_rawDescGZIP(), []int{4}
}

func (x *UpsertUserFcmTokenRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UpsertUserFcmTokenRequest) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *UpsertUserFcmTokenRequest) GetFcmToken() string {
	if x != nil {
		return x.FcmToken
	}
	return ""
}

type CreateIssueAndEmailAssigneeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId  int32  `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Subject string `protobuf:"bytes,2,opt,name=subject,proto3" json:"subject,omitempty"`
	Content string `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *CreateIssueAndEmailAssigneeRequest) Reset() {
	*x = CreateIssueAndEmailAssigneeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dta_wed_api_v1_configs_configs_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateIssueAndEmailAssigneeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateIssueAndEmailAssigneeRequest) ProtoMessage() {}

func (x *CreateIssueAndEmailAssigneeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dta_wed_api_v1_configs_configs_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateIssueAndEmailAssigneeRequest.ProtoReflect.Descriptor instead.
func (*CreateIssueAndEmailAssigneeRequest) Descriptor() ([]byte, []int) {
	return file_dta_wed_api_v1_configs_configs_proto_rawDescGZIP(), []int{5}
}

func (x *CreateIssueAndEmailAssigneeRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CreateIssueAndEmailAssigneeRequest) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *CreateIssueAndEmailAssigneeRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type GetUserFcmTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int32 `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *GetUserFcmTokenRequest) Reset() {
	*x = GetUserFcmTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dta_wed_api_v1_configs_configs_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserFcmTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserFcmTokenRequest) ProtoMessage() {}

func (x *GetUserFcmTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dta_wed_api_v1_configs_configs_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserFcmTokenRequest.ProtoReflect.Descriptor instead.
func (*GetUserFcmTokenRequest) Descriptor() ([]byte, []int) {
	return file_dta_wed_api_v1_configs_configs_proto_rawDescGZIP(), []int{6}
}

func (x *GetUserFcmTokenRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type GetUserFcmTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   int32  `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Os       string `protobuf:"bytes,2,opt,name=os,proto3" json:"os,omitempty"`
	FcmToken string `protobuf:"bytes,3,opt,name=fcmToken,proto3" json:"fcmToken,omitempty"`
}

func (x *GetUserFcmTokenResponse) Reset() {
	*x = GetUserFcmTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dta_wed_api_v1_configs_configs_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserFcmTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserFcmTokenResponse) ProtoMessage() {}

func (x *GetUserFcmTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dta_wed_api_v1_configs_configs_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserFcmTokenResponse.ProtoReflect.Descriptor instead.
func (*GetUserFcmTokenResponse) Descriptor() ([]byte, []int) {
	return file_dta_wed_api_v1_configs_configs_proto_rawDescGZIP(), []int{7}
}

func (x *GetUserFcmTokenResponse) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetUserFcmTokenResponse) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *GetUserFcmTokenResponse) GetFcmToken() string {
	if x != nil {
		return x.FcmToken
	}
	return ""
}

var File_dta_wed_api_v1_configs_configs_proto protoreflect.FileDescriptor

var file_dta_wed_api_v1_configs_configs_proto_rawDesc = []byte{
	0x0a, 0x24, 0x64, 0x74, 0x61, 0x2d, 0x77, 0x65, 0x64, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31,
	0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x16, 0x64, 0x74, 0x61, 0x2e, 0x77, 0x65, 0x64, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x1a, 0x17,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xcd, 0x01, 0x0a, 0x21, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x44,
	0x62, 0x6d, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x20, 0x00, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x72, 0x02, 0x10, 0x01, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x23, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x08, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x39, 0x0a, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x52, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x22, 0xe2, 0x03, 0x0a, 0x17, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x1a, 0x02, 0x20, 0x00, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x39, 0x0a,
	0x15, 0x69, 0x6e, 0x41, 0x70, 0x70, 0x50, 0x75, 0x73, 0x68, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x15,
	0x69, 0x6e, 0x41, 0x70, 0x70, 0x50, 0x75, 0x73, 0x68, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x35, 0x0a, 0x13, 0x61, 0x70, 0x70, 0x50,
	0x75, 0x73, 0x68, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x48, 0x01, 0x52, 0x13, 0x61, 0x70, 0x70, 0x50, 0x75, 0x73, 0x68,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12,
	0x1f, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x02, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x88, 0x01, 0x01,
	0x12, 0x23, 0x0a, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x6f, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x09, 0x6f, 0x73, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0a, 0x61, 0x70, 0x70, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x0a,
	0x61, 0x70, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x29, 0x0a,
	0x0d, 0x77, 0x65, 0x62, 0x41, 0x70, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x0d, 0x77, 0x65, 0x62, 0x41, 0x70, 0x70, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x18, 0x0a, 0x16, 0x5f, 0x69, 0x6e, 0x41,
	0x70, 0x70, 0x50, 0x75, 0x73, 0x68, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x42, 0x16, 0x0a, 0x14, 0x5f, 0x61, 0x70, 0x70, 0x50, 0x75, 0x73, 0x68, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x6f, 0x73, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x61, 0x70, 0x70, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x77, 0x65, 0x62, 0x41, 0x70, 0x70, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x47, 0x0a, 0x24, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x50, 0x75, 0x73, 0x68, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x1a, 0x02, 0x20, 0x00, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x75,
	0x0a, 0x25, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x50,
	0x75, 0x73, 0x68, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x34, 0x0a, 0x15, 0x69, 0x6e, 0x41, 0x70, 0x70, 0x50, 0x75, 0x73, 0x68, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15,
	0x69, 0x6e, 0x41, 0x70, 0x70, 0x50, 0x75, 0x73, 0x68, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x5f, 0x0a, 0x19, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x46, 0x63, 0x6d, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6f, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x63,
	0x6d, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x63,
	0x6d, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x8b, 0x01, 0x0a, 0x22, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x49, 0x73, 0x73, 0x75, 0x65, 0x41, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x41, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x65, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x1a, 0x02, 0x20, 0x00, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21,
	0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x12, 0x21, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x22, 0x30, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x46,
	0x63, 0x6d, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x5d, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x46, 0x63, 0x6d, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6f, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x63, 0x6d,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x63, 0x6d,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x32, 0xbd, 0x07, 0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0xa3, 0x01, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x44, 0x62, 0x6d, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x4c, 0x6f, 0x67, 0x12, 0x39, 0x2e, 0x64, 0x74, 0x61, 0x2e, 0x77, 0x65, 0x64, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x44, 0x62, 0x6d, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x32, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2c, 0x22,
	0x27, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x62, 0x6d, 0x2f, 0x6c, 0x6f, 0x67, 0x73, 0x2f, 0x75, 0x73,
	0x65, 0x72, 0x73, 0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x7d, 0x2f, 0x70, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x3a, 0x01, 0x2a, 0x12, 0x82, 0x01, 0x0a, 0x10,
	0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x2f, 0x2e, 0x64, 0x74, 0x61, 0x2e, 0x77, 0x65, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x2e, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x1f, 0x1a, 0x1a, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x2f, 0x75,
	0x73, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x7d, 0x3a, 0x01, 0x2a,
	0x12, 0xd1, 0x01, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x50, 0x75, 0x73, 0x68, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x3c, 0x2e, 0x64, 0x74, 0x61, 0x2e, 0x77, 0x65, 0x64, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x50, 0x75, 0x73, 0x68, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x3d, 0x2e, 0x64, 0x74, 0x61, 0x2e, 0x77, 0x65, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x50, 0x75, 0x73, 0x68, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x33, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2d, 0x12, 0x2b, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x73, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x7d, 0x2f, 0x70, 0x75, 0x73, 0x68, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x88, 0x01, 0x0a, 0x12, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x46, 0x63, 0x6d, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x31, 0x2e, 0x64, 0x74,
	0x61, 0x2e, 0x77, 0x65, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x73, 0x2e, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x55, 0x73, 0x65, 0x72, 0x46,
	0x63, 0x6d, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x1a, 0x1c,
	0x2f, 0x76, 0x31, 0x2f, 0x66, 0x63, 0x6d, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x2f, 0x75, 0x73,
	0x65, 0x72, 0x73, 0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x7d, 0x3a, 0x01, 0x2a, 0x12,
	0x98, 0x01, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x46, 0x63, 0x6d, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x2e, 0x2e, 0x64, 0x74, 0x61, 0x2e, 0x77, 0x65, 0x64, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x2e, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x46, 0x63, 0x6d, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x64, 0x74, 0x61, 0x2e, 0x77, 0x65, 0x64, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x2e, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x46, 0x63, 0x6d, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x12, 0x1c, 0x2f, 0x76,
	0x31, 0x2f, 0x66, 0x63, 0x6d, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x2f, 0x75, 0x73, 0x65, 0x72,
	0x73, 0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x7d, 0x12, 0x88, 0x01, 0x0a, 0x1b, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x73, 0x73, 0x75, 0x65, 0x41, 0x6e, 0x64, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x65, 0x12, 0x3a, 0x2e, 0x64, 0x74, 0x61,
	0x2e, 0x77, 0x65, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x73, 0x73, 0x75, 0x65, 0x41,
	0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x15,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0f, 0x22, 0x0a, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x73, 0x73, 0x75,
	0x65, 0x73, 0x3a, 0x01, 0x2a, 0x42, 0x47, 0x5a, 0x45, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x77, 0x65, 0x6c, 0x74, 0x63, 0x6f, 0x72, 0x70, 0x2f, 0x64, 0x74, 0x61,
	0x2d, 0x77, 0x65, 0x64, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x64, 0x74, 0x61, 0x2d, 0x77, 0x65, 0x64, 0x2d,
	0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_dta_wed_api_v1_configs_configs_proto_rawDescOnce sync.Once
	file_dta_wed_api_v1_configs_configs_proto_rawDescData = file_dta_wed_api_v1_configs_configs_proto_rawDesc
)

func file_dta_wed_api_v1_configs_configs_proto_rawDescGZIP() []byte {
	file_dta_wed_api_v1_configs_configs_proto_rawDescOnce.Do(func() {
		file_dta_wed_api_v1_configs_configs_proto_rawDescData = protoimpl.X.CompressGZIP(file_dta_wed_api_v1_configs_configs_proto_rawDescData)
	})
	return file_dta_wed_api_v1_configs_configs_proto_rawDescData
}

var file_dta_wed_api_v1_configs_configs_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_dta_wed_api_v1_configs_configs_proto_goTypes = []interface{}{
	(*CreateUserDbmPermissionLogRequest)(nil),     // 0: dta.wed.api.v1.configs.CreateUserDbmPermissionLogRequest
	(*UpsertUserConfigRequest)(nil),               // 1: dta.wed.api.v1.configs.UpsertUserConfigRequest
	(*GetUserConfigPushNotificationRequest)(nil),  // 2: dta.wed.api.v1.configs.GetUserConfigPushNotificationRequest
	(*GetUserConfigPushNotificationResponse)(nil), // 3: dta.wed.api.v1.configs.GetUserConfigPushNotificationResponse
	(*UpsertUserFcmTokenRequest)(nil),             // 4: dta.wed.api.v1.configs.UpsertUserFcmTokenRequest
	(*CreateIssueAndEmailAssigneeRequest)(nil),    // 5: dta.wed.api.v1.configs.CreateIssueAndEmailAssigneeRequest
	(*GetUserFcmTokenRequest)(nil),                // 6: dta.wed.api.v1.configs.GetUserFcmTokenRequest
	(*GetUserFcmTokenResponse)(nil),               // 7: dta.wed.api.v1.configs.GetUserFcmTokenResponse
	(*structpb.Struct)(nil),                       // 8: google.protobuf.Struct
	(*emptypb.Empty)(nil),                         // 9: google.protobuf.Empty
}
var file_dta_wed_api_v1_configs_configs_proto_depIdxs = []int32{
	8, // 0: dta.wed.api.v1.configs.CreateUserDbmPermissionLogRequest.permissions:type_name -> google.protobuf.Struct
	0, // 1: dta.wed.api.v1.configs.ConfigsData.CreateUserDbmPermissionLog:input_type -> dta.wed.api.v1.configs.CreateUserDbmPermissionLogRequest
	1, // 2: dta.wed.api.v1.configs.ConfigsData.UpsertUserConfig:input_type -> dta.wed.api.v1.configs.UpsertUserConfigRequest
	2, // 3: dta.wed.api.v1.configs.ConfigsData.GetUserConfigPushNotification:input_type -> dta.wed.api.v1.configs.GetUserConfigPushNotificationRequest
	4, // 4: dta.wed.api.v1.configs.ConfigsData.UpsertUserFcmToken:input_type -> dta.wed.api.v1.configs.UpsertUserFcmTokenRequest
	6, // 5: dta.wed.api.v1.configs.ConfigsData.GetUserFcmToken:input_type -> dta.wed.api.v1.configs.GetUserFcmTokenRequest
	5, // 6: dta.wed.api.v1.configs.ConfigsData.CreateIssueAndEmailAssignee:input_type -> dta.wed.api.v1.configs.CreateIssueAndEmailAssigneeRequest
	9, // 7: dta.wed.api.v1.configs.ConfigsData.CreateUserDbmPermissionLog:output_type -> google.protobuf.Empty
	9, // 8: dta.wed.api.v1.configs.ConfigsData.UpsertUserConfig:output_type -> google.protobuf.Empty
	3, // 9: dta.wed.api.v1.configs.ConfigsData.GetUserConfigPushNotification:output_type -> dta.wed.api.v1.configs.GetUserConfigPushNotificationResponse
	9, // 10: dta.wed.api.v1.configs.ConfigsData.UpsertUserFcmToken:output_type -> google.protobuf.Empty
	7, // 11: dta.wed.api.v1.configs.ConfigsData.GetUserFcmToken:output_type -> dta.wed.api.v1.configs.GetUserFcmTokenResponse
	9, // 12: dta.wed.api.v1.configs.ConfigsData.CreateIssueAndEmailAssignee:output_type -> google.protobuf.Empty
	7, // [7:13] is the sub-list for method output_type
	1, // [1:7] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_dta_wed_api_v1_configs_configs_proto_init() }
func file_dta_wed_api_v1_configs_configs_proto_init() {
	if File_dta_wed_api_v1_configs_configs_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_dta_wed_api_v1_configs_configs_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserDbmPermissionLogRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dta_wed_api_v1_configs_configs_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertUserConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dta_wed_api_v1_configs_configs_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserConfigPushNotificationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dta_wed_api_v1_configs_configs_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserConfigPushNotificationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dta_wed_api_v1_configs_configs_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertUserFcmTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dta_wed_api_v1_configs_configs_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateIssueAndEmailAssigneeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dta_wed_api_v1_configs_configs_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserFcmTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dta_wed_api_v1_configs_configs_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserFcmTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_dta_wed_api_v1_configs_configs_proto_msgTypes[1].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_dta_wed_api_v1_configs_configs_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_dta_wed_api_v1_configs_configs_proto_goTypes,
		DependencyIndexes: file_dta_wed_api_v1_configs_configs_proto_depIdxs,
		MessageInfos:      file_dta_wed_api_v1_configs_configs_proto_msgTypes,
	}.Build()
	File_dta_wed_api_v1_configs_configs_proto = out.File
	file_dta_wed_api_v1_configs_configs_proto_rawDesc = nil
	file_dta_wed_api_v1_configs_configs_proto_goTypes = nil
	file_dta_wed_api_v1_configs_configs_proto_depIdxs = nil
}
