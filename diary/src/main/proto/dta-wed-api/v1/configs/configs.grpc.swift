//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: dta-wed-api/v1/configs/configs.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import GRPC
import NIO
import NIOConcurrencyHelpers
import SwiftProtobuf


/// Usage: instantiate `Dta_Wed_Api_V1_Configs_ConfigsDataClient`, then call methods of this protocol to make API calls.
internal protocol Dta_Wed_Api_V1_Configs_ConfigsDataClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Dta_Wed_Api_V1_Configs_ConfigsDataClientInterceptorFactoryProtocol? { get }

  func createUserDbmPermissionLog(
    _ request: Dta_Wed_Api_V1_Configs_CreateUserDbmPermissionLogRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Dta_Wed_Api_V1_Configs_CreateUserDbmPermissionLogRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func upsertUserConfig(
    _ request: Dta_Wed_Api_V1_Configs_UpsertUserConfigRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Dta_Wed_Api_V1_Configs_UpsertUserConfigRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func getUserConfigPushNotification(
    _ request: Dta_Wed_Api_V1_Configs_GetUserConfigPushNotificationRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Dta_Wed_Api_V1_Configs_GetUserConfigPushNotificationRequest, Dta_Wed_Api_V1_Configs_GetUserConfigPushNotificationResponse>

  func upsertUserFcmToken(
    _ request: Dta_Wed_Api_V1_Configs_UpsertUserFcmTokenRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Dta_Wed_Api_V1_Configs_UpsertUserFcmTokenRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func getUserFcmToken(
    _ request: Dta_Wed_Api_V1_Configs_GetUserFcmTokenRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Dta_Wed_Api_V1_Configs_GetUserFcmTokenRequest, Dta_Wed_Api_V1_Configs_GetUserFcmTokenResponse>

  func createIssueAndEmailAssignee(
    _ request: Dta_Wed_Api_V1_Configs_CreateIssueAndEmailAssigneeRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Dta_Wed_Api_V1_Configs_CreateIssueAndEmailAssigneeRequest, SwiftProtobuf.Google_Protobuf_Empty>
}

extension Dta_Wed_Api_V1_Configs_ConfigsDataClientProtocol {
  internal var serviceName: String {
    return "dta.wed.api.v1.configs.ConfigsData"
  }

  /// Unary call to CreateUserDbmPermissionLog
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateUserDbmPermissionLog.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func createUserDbmPermissionLog(
    _ request: Dta_Wed_Api_V1_Configs_CreateUserDbmPermissionLogRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Dta_Wed_Api_V1_Configs_CreateUserDbmPermissionLogRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Dta_Wed_Api_V1_Configs_ConfigsDataClientMetadata.Methods.createUserDbmPermissionLog.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateUserDbmPermissionLogInterceptors() ?? []
    )
  }

  /// Unary call to UpsertUserConfig
  ///
  /// - Parameters:
  ///   - request: Request to send to UpsertUserConfig.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func upsertUserConfig(
    _ request: Dta_Wed_Api_V1_Configs_UpsertUserConfigRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Dta_Wed_Api_V1_Configs_UpsertUserConfigRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Dta_Wed_Api_V1_Configs_ConfigsDataClientMetadata.Methods.upsertUserConfig.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpsertUserConfigInterceptors() ?? []
    )
  }

  /// Unary call to GetUserConfigPushNotification
  ///
  /// - Parameters:
  ///   - request: Request to send to GetUserConfigPushNotification.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getUserConfigPushNotification(
    _ request: Dta_Wed_Api_V1_Configs_GetUserConfigPushNotificationRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Dta_Wed_Api_V1_Configs_GetUserConfigPushNotificationRequest, Dta_Wed_Api_V1_Configs_GetUserConfigPushNotificationResponse> {
    return self.makeUnaryCall(
      path: Dta_Wed_Api_V1_Configs_ConfigsDataClientMetadata.Methods.getUserConfigPushNotification.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetUserConfigPushNotificationInterceptors() ?? []
    )
  }

  /// Unary call to UpsertUserFcmToken
  ///
  /// - Parameters:
  ///   - request: Request to send to UpsertUserFcmToken.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func upsertUserFcmToken(
    _ request: Dta_Wed_Api_V1_Configs_UpsertUserFcmTokenRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Dta_Wed_Api_V1_Configs_UpsertUserFcmTokenRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Dta_Wed_Api_V1_Configs_ConfigsDataClientMetadata.Methods.upsertUserFcmToken.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpsertUserFcmTokenInterceptors() ?? []
    )
  }

  /// Unary call to GetUserFcmToken
  ///
  /// - Parameters:
  ///   - request: Request to send to GetUserFcmToken.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getUserFcmToken(
    _ request: Dta_Wed_Api_V1_Configs_GetUserFcmTokenRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Dta_Wed_Api_V1_Configs_GetUserFcmTokenRequest, Dta_Wed_Api_V1_Configs_GetUserFcmTokenResponse> {
    return self.makeUnaryCall(
      path: Dta_Wed_Api_V1_Configs_ConfigsDataClientMetadata.Methods.getUserFcmToken.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetUserFcmTokenInterceptors() ?? []
    )
  }

  /// Unary call to CreateIssueAndEmailAssignee
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateIssueAndEmailAssignee.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func createIssueAndEmailAssignee(
    _ request: Dta_Wed_Api_V1_Configs_CreateIssueAndEmailAssigneeRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Dta_Wed_Api_V1_Configs_CreateIssueAndEmailAssigneeRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Dta_Wed_Api_V1_Configs_ConfigsDataClientMetadata.Methods.createIssueAndEmailAssignee.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateIssueAndEmailAssigneeInterceptors() ?? []
    )
  }
}

#if compiler(>=5.6)
@available(*, deprecated)
extension Dta_Wed_Api_V1_Configs_ConfigsDataClient: @unchecked Sendable {}
#endif // compiler(>=5.6)

@available(*, deprecated, renamed: "Dta_Wed_Api_V1_Configs_ConfigsDataNIOClient")
internal final class Dta_Wed_Api_V1_Configs_ConfigsDataClient: Dta_Wed_Api_V1_Configs_ConfigsDataClientProtocol {
  private let lock = Lock()
  private var _defaultCallOptions: CallOptions
  private var _interceptors: Dta_Wed_Api_V1_Configs_ConfigsDataClientInterceptorFactoryProtocol?
  internal let channel: GRPCChannel
  internal var defaultCallOptions: CallOptions {
    get { self.lock.withLock { return self._defaultCallOptions } }
    set { self.lock.withLockVoid { self._defaultCallOptions = newValue } }
  }
  internal var interceptors: Dta_Wed_Api_V1_Configs_ConfigsDataClientInterceptorFactoryProtocol? {
    get { self.lock.withLock { return self._interceptors } }
    set { self.lock.withLockVoid { self._interceptors = newValue } }
  }

  /// Creates a client for the dta.wed.api.v1.configs.ConfigsData service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Dta_Wed_Api_V1_Configs_ConfigsDataClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self._defaultCallOptions = defaultCallOptions
    self._interceptors = interceptors
  }
}

internal struct Dta_Wed_Api_V1_Configs_ConfigsDataNIOClient: Dta_Wed_Api_V1_Configs_ConfigsDataClientProtocol {
  internal var channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Dta_Wed_Api_V1_Configs_ConfigsDataClientInterceptorFactoryProtocol?

  /// Creates a client for the dta.wed.api.v1.configs.ConfigsData service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Dta_Wed_Api_V1_Configs_ConfigsDataClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

#if compiler(>=5.6)
@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal protocol Dta_Wed_Api_V1_Configs_ConfigsDataAsyncClientProtocol: GRPCClient {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Dta_Wed_Api_V1_Configs_ConfigsDataClientInterceptorFactoryProtocol? { get }

  func makeCreateUserDbmPermissionLogCall(
    _ request: Dta_Wed_Api_V1_Configs_CreateUserDbmPermissionLogRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Dta_Wed_Api_V1_Configs_CreateUserDbmPermissionLogRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func makeUpsertUserConfigCall(
    _ request: Dta_Wed_Api_V1_Configs_UpsertUserConfigRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Dta_Wed_Api_V1_Configs_UpsertUserConfigRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func makeGetUserConfigPushNotificationCall(
    _ request: Dta_Wed_Api_V1_Configs_GetUserConfigPushNotificationRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Dta_Wed_Api_V1_Configs_GetUserConfigPushNotificationRequest, Dta_Wed_Api_V1_Configs_GetUserConfigPushNotificationResponse>

  func makeUpsertUserFcmTokenCall(
    _ request: Dta_Wed_Api_V1_Configs_UpsertUserFcmTokenRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Dta_Wed_Api_V1_Configs_UpsertUserFcmTokenRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func makeGetUserFcmTokenCall(
    _ request: Dta_Wed_Api_V1_Configs_GetUserFcmTokenRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Dta_Wed_Api_V1_Configs_GetUserFcmTokenRequest, Dta_Wed_Api_V1_Configs_GetUserFcmTokenResponse>

  func makeCreateIssueAndEmailAssigneeCall(
    _ request: Dta_Wed_Api_V1_Configs_CreateIssueAndEmailAssigneeRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Dta_Wed_Api_V1_Configs_CreateIssueAndEmailAssigneeRequest, SwiftProtobuf.Google_Protobuf_Empty>
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Dta_Wed_Api_V1_Configs_ConfigsDataAsyncClientProtocol {
  internal static var serviceDescriptor: GRPCServiceDescriptor {
    return Dta_Wed_Api_V1_Configs_ConfigsDataClientMetadata.serviceDescriptor
  }

  internal var interceptors: Dta_Wed_Api_V1_Configs_ConfigsDataClientInterceptorFactoryProtocol? {
    return nil
  }

  internal func makeCreateUserDbmPermissionLogCall(
    _ request: Dta_Wed_Api_V1_Configs_CreateUserDbmPermissionLogRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Dta_Wed_Api_V1_Configs_CreateUserDbmPermissionLogRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Dta_Wed_Api_V1_Configs_ConfigsDataClientMetadata.Methods.createUserDbmPermissionLog.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateUserDbmPermissionLogInterceptors() ?? []
    )
  }

  internal func makeUpsertUserConfigCall(
    _ request: Dta_Wed_Api_V1_Configs_UpsertUserConfigRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Dta_Wed_Api_V1_Configs_UpsertUserConfigRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Dta_Wed_Api_V1_Configs_ConfigsDataClientMetadata.Methods.upsertUserConfig.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpsertUserConfigInterceptors() ?? []
    )
  }

  internal func makeGetUserConfigPushNotificationCall(
    _ request: Dta_Wed_Api_V1_Configs_GetUserConfigPushNotificationRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Dta_Wed_Api_V1_Configs_GetUserConfigPushNotificationRequest, Dta_Wed_Api_V1_Configs_GetUserConfigPushNotificationResponse> {
    return self.makeAsyncUnaryCall(
      path: Dta_Wed_Api_V1_Configs_ConfigsDataClientMetadata.Methods.getUserConfigPushNotification.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetUserConfigPushNotificationInterceptors() ?? []
    )
  }

  internal func makeUpsertUserFcmTokenCall(
    _ request: Dta_Wed_Api_V1_Configs_UpsertUserFcmTokenRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Dta_Wed_Api_V1_Configs_UpsertUserFcmTokenRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Dta_Wed_Api_V1_Configs_ConfigsDataClientMetadata.Methods.upsertUserFcmToken.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpsertUserFcmTokenInterceptors() ?? []
    )
  }

  internal func makeGetUserFcmTokenCall(
    _ request: Dta_Wed_Api_V1_Configs_GetUserFcmTokenRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Dta_Wed_Api_V1_Configs_GetUserFcmTokenRequest, Dta_Wed_Api_V1_Configs_GetUserFcmTokenResponse> {
    return self.makeAsyncUnaryCall(
      path: Dta_Wed_Api_V1_Configs_ConfigsDataClientMetadata.Methods.getUserFcmToken.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetUserFcmTokenInterceptors() ?? []
    )
  }

  internal func makeCreateIssueAndEmailAssigneeCall(
    _ request: Dta_Wed_Api_V1_Configs_CreateIssueAndEmailAssigneeRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Dta_Wed_Api_V1_Configs_CreateIssueAndEmailAssigneeRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Dta_Wed_Api_V1_Configs_ConfigsDataClientMetadata.Methods.createIssueAndEmailAssignee.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateIssueAndEmailAssigneeInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Dta_Wed_Api_V1_Configs_ConfigsDataAsyncClientProtocol {
  internal func createUserDbmPermissionLog(
    _ request: Dta_Wed_Api_V1_Configs_CreateUserDbmPermissionLogRequest,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Dta_Wed_Api_V1_Configs_ConfigsDataClientMetadata.Methods.createUserDbmPermissionLog.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateUserDbmPermissionLogInterceptors() ?? []
    )
  }

  internal func upsertUserConfig(
    _ request: Dta_Wed_Api_V1_Configs_UpsertUserConfigRequest,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Dta_Wed_Api_V1_Configs_ConfigsDataClientMetadata.Methods.upsertUserConfig.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpsertUserConfigInterceptors() ?? []
    )
  }

  internal func getUserConfigPushNotification(
    _ request: Dta_Wed_Api_V1_Configs_GetUserConfigPushNotificationRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Dta_Wed_Api_V1_Configs_GetUserConfigPushNotificationResponse {
    return try await self.performAsyncUnaryCall(
      path: Dta_Wed_Api_V1_Configs_ConfigsDataClientMetadata.Methods.getUserConfigPushNotification.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetUserConfigPushNotificationInterceptors() ?? []
    )
  }

  internal func upsertUserFcmToken(
    _ request: Dta_Wed_Api_V1_Configs_UpsertUserFcmTokenRequest,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Dta_Wed_Api_V1_Configs_ConfigsDataClientMetadata.Methods.upsertUserFcmToken.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpsertUserFcmTokenInterceptors() ?? []
    )
  }

  internal func getUserFcmToken(
    _ request: Dta_Wed_Api_V1_Configs_GetUserFcmTokenRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Dta_Wed_Api_V1_Configs_GetUserFcmTokenResponse {
    return try await self.performAsyncUnaryCall(
      path: Dta_Wed_Api_V1_Configs_ConfigsDataClientMetadata.Methods.getUserFcmToken.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetUserFcmTokenInterceptors() ?? []
    )
  }

  internal func createIssueAndEmailAssignee(
    _ request: Dta_Wed_Api_V1_Configs_CreateIssueAndEmailAssigneeRequest,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Dta_Wed_Api_V1_Configs_ConfigsDataClientMetadata.Methods.createIssueAndEmailAssignee.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateIssueAndEmailAssigneeInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal struct Dta_Wed_Api_V1_Configs_ConfigsDataAsyncClient: Dta_Wed_Api_V1_Configs_ConfigsDataAsyncClientProtocol {
  internal var channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Dta_Wed_Api_V1_Configs_ConfigsDataClientInterceptorFactoryProtocol?

  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Dta_Wed_Api_V1_Configs_ConfigsDataClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

#endif // compiler(>=5.6)

internal protocol Dta_Wed_Api_V1_Configs_ConfigsDataClientInterceptorFactoryProtocol: GRPCSendable {

  /// - Returns: Interceptors to use when invoking 'createUserDbmPermissionLog'.
  func makeCreateUserDbmPermissionLogInterceptors() -> [ClientInterceptor<Dta_Wed_Api_V1_Configs_CreateUserDbmPermissionLogRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'upsertUserConfig'.
  func makeUpsertUserConfigInterceptors() -> [ClientInterceptor<Dta_Wed_Api_V1_Configs_UpsertUserConfigRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'getUserConfigPushNotification'.
  func makeGetUserConfigPushNotificationInterceptors() -> [ClientInterceptor<Dta_Wed_Api_V1_Configs_GetUserConfigPushNotificationRequest, Dta_Wed_Api_V1_Configs_GetUserConfigPushNotificationResponse>]

  /// - Returns: Interceptors to use when invoking 'upsertUserFcmToken'.
  func makeUpsertUserFcmTokenInterceptors() -> [ClientInterceptor<Dta_Wed_Api_V1_Configs_UpsertUserFcmTokenRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'getUserFcmToken'.
  func makeGetUserFcmTokenInterceptors() -> [ClientInterceptor<Dta_Wed_Api_V1_Configs_GetUserFcmTokenRequest, Dta_Wed_Api_V1_Configs_GetUserFcmTokenResponse>]

  /// - Returns: Interceptors to use when invoking 'createIssueAndEmailAssignee'.
  func makeCreateIssueAndEmailAssigneeInterceptors() -> [ClientInterceptor<Dta_Wed_Api_V1_Configs_CreateIssueAndEmailAssigneeRequest, SwiftProtobuf.Google_Protobuf_Empty>]
}

internal enum Dta_Wed_Api_V1_Configs_ConfigsDataClientMetadata {
  internal static let serviceDescriptor = GRPCServiceDescriptor(
    name: "ConfigsData",
    fullName: "dta.wed.api.v1.configs.ConfigsData",
    methods: [
      Dta_Wed_Api_V1_Configs_ConfigsDataClientMetadata.Methods.createUserDbmPermissionLog,
      Dta_Wed_Api_V1_Configs_ConfigsDataClientMetadata.Methods.upsertUserConfig,
      Dta_Wed_Api_V1_Configs_ConfigsDataClientMetadata.Methods.getUserConfigPushNotification,
      Dta_Wed_Api_V1_Configs_ConfigsDataClientMetadata.Methods.upsertUserFcmToken,
      Dta_Wed_Api_V1_Configs_ConfigsDataClientMetadata.Methods.getUserFcmToken,
      Dta_Wed_Api_V1_Configs_ConfigsDataClientMetadata.Methods.createIssueAndEmailAssignee,
    ]
  )

  internal enum Methods {
    internal static let createUserDbmPermissionLog = GRPCMethodDescriptor(
      name: "CreateUserDbmPermissionLog",
      path: "/dta.wed.api.v1.configs.ConfigsData/CreateUserDbmPermissionLog",
      type: GRPCCallType.unary
    )

    internal static let upsertUserConfig = GRPCMethodDescriptor(
      name: "UpsertUserConfig",
      path: "/dta.wed.api.v1.configs.ConfigsData/UpsertUserConfig",
      type: GRPCCallType.unary
    )

    internal static let getUserConfigPushNotification = GRPCMethodDescriptor(
      name: "GetUserConfigPushNotification",
      path: "/dta.wed.api.v1.configs.ConfigsData/GetUserConfigPushNotification",
      type: GRPCCallType.unary
    )

    internal static let upsertUserFcmToken = GRPCMethodDescriptor(
      name: "UpsertUserFcmToken",
      path: "/dta.wed.api.v1.configs.ConfigsData/UpsertUserFcmToken",
      type: GRPCCallType.unary
    )

    internal static let getUserFcmToken = GRPCMethodDescriptor(
      name: "GetUserFcmToken",
      path: "/dta.wed.api.v1.configs.ConfigsData/GetUserFcmToken",
      type: GRPCCallType.unary
    )

    internal static let createIssueAndEmailAssignee = GRPCMethodDescriptor(
      name: "CreateIssueAndEmailAssignee",
      path: "/dta.wed.api.v1.configs.ConfigsData/CreateIssueAndEmailAssignee",
      type: GRPCCallType.unary
    )
  }
}

