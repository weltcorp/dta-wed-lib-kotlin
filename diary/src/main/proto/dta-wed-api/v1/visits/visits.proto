syntax = "proto3";
package dta.wed.api.v1.visits;

option go_package = "github.com/weltcorp/dta-wed-api/internal/proto/dta-wed-api/v1/visits";

import "validate/validate.proto";
import "google/api/annotations.proto";
import "google/protobuf/empty.proto";

service VisitsData {
  rpc GetUserVisits(GetUserVisitsRequest) returns (GetUserVisitsResponse) {
    option (google.api.http) = { get: "/v1/visits/users/{userId}" };
  }
  rpc UpsertUserVisit(UpsertUserVisitRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = { put: "/v1/visits/{visitId}/users/{userId}", body: "*" };
  }
  rpc GetUserVisitByUserIdAndVisitId(GetUserVisitByUserIdAndVisitIdRequest) returns (GetUserVisitByUserIdAndVisitIdResponse) {
    option (google.api.http) = { get: "/v1/visits/{visitId}/users/{userId}" };
  }

}

message GetUserVisitsRequest {
  int32 userId = 1[(validate.rules).int32.gt = 0];
}

message GetUserVisitsResponse {
  message Data {
    int32 userId = 1;
    int32 visitId = 2;
    int32 visitAt = 3;
    int32 remainingDays = 4;
    string note = 5;
    int32 noteCreatedAt = 6;
    int32 noteUpdatedAt = 7;
    int32 status = 8;
  }
  repeated Data data = 1;
}

message UpsertUserVisitRequest {
  int32 userId = 1[(validate.rules).int32.gt = 0];
  int32 authorAccountId = 2;
  int32 visitId = 3[(validate.rules).int32.gt = 0];
  string note = 4;
  optional int32 status = 5;
}

message GetUserVisitByUserIdAndVisitIdRequest {
  int32 userId = 1[(validate.rules).int32.gt = 0];
  int32 visitId = 2[(validate.rules).int32.gt = 0];
}

message GetUserVisitByUserIdAndVisitIdResponse {
  int32 userId = 1;
  int32 visitId = 2;
  int32 visitAt = 3;
  int32 remainingDays = 4;
  string note = 5;
  int32 noteCreatedAt = 6;
  int32 noteUpdatedAt = 7;
}