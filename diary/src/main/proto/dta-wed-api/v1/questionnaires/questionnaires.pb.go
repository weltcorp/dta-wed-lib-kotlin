// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: dta-wed-api/v1/questionnaires/questionnaires.proto

package wedQuestionnaires

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetQuestionnaireAnswersByUserIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId  int32  `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Limit   int32  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Page    int32  `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	OrderBy string `protobuf:"bytes,4,opt,name=orderBy,proto3" json:"orderBy,omitempty"`
	Asc     string `protobuf:"bytes,5,opt,name=asc,proto3" json:"asc,omitempty"`
}

func (x *GetQuestionnaireAnswersByUserIdRequest) Reset() {
	*x = GetQuestionnaireAnswersByUserIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dta_wed_api_v1_questionnaires_questionnaires_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetQuestionnaireAnswersByUserIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQuestionnaireAnswersByUserIdRequest) ProtoMessage() {}

func (x *GetQuestionnaireAnswersByUserIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dta_wed_api_v1_questionnaires_questionnaires_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQuestionnaireAnswersByUserIdRequest.ProtoReflect.Descriptor instead.
func (*GetQuestionnaireAnswersByUserIdRequest) Descriptor() ([]byte, []int) {
	return file_dta_wed_api_v1_questionnaires_questionnaires_proto_rawDescGZIP(), []int{0}
}

func (x *GetQuestionnaireAnswersByUserIdRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetQuestionnaireAnswersByUserIdRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetQuestionnaireAnswersByUserIdRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetQuestionnaireAnswersByUserIdRequest) GetOrderBy() string {
	if x != nil {
		return x.OrderBy
	}
	return ""
}

func (x *GetQuestionnaireAnswersByUserIdRequest) GetAsc() string {
	if x != nil {
		return x.Asc
	}
	return ""
}

type QuestionnaireAnswerSummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuestionnaireId int32  `protobuf:"varint,1,opt,name=questionnaireId,proto3" json:"questionnaireId,omitempty"`
	Date            string `protobuf:"bytes,2,opt,name=date,proto3" json:"date,omitempty"`
	AnswerId        int32  `protobuf:"varint,3,opt,name=answerId,proto3" json:"answerId,omitempty"`
}

func (x *QuestionnaireAnswerSummary) Reset() {
	*x = QuestionnaireAnswerSummary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dta_wed_api_v1_questionnaires_questionnaires_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuestionnaireAnswerSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuestionnaireAnswerSummary) ProtoMessage() {}

func (x *QuestionnaireAnswerSummary) ProtoReflect() protoreflect.Message {
	mi := &file_dta_wed_api_v1_questionnaires_questionnaires_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuestionnaireAnswerSummary.ProtoReflect.Descriptor instead.
func (*QuestionnaireAnswerSummary) Descriptor() ([]byte, []int) {
	return file_dta_wed_api_v1_questionnaires_questionnaires_proto_rawDescGZIP(), []int{1}
}

func (x *QuestionnaireAnswerSummary) GetQuestionnaireId() int32 {
	if x != nil {
		return x.QuestionnaireId
	}
	return 0
}

func (x *QuestionnaireAnswerSummary) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *QuestionnaireAnswerSummary) GetAnswerId() int32 {
	if x != nil {
		return x.AnswerId
	}
	return 0
}

type GetQuestionnaireAnswersByUserIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalCount int32                         `protobuf:"varint,1,opt,name=totalCount,proto3" json:"totalCount,omitempty"`
	Page       int32                         `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	Count      int32                         `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
	Data       []*QuestionnaireAnswerSummary `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetQuestionnaireAnswersByUserIdResponse) Reset() {
	*x = GetQuestionnaireAnswersByUserIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dta_wed_api_v1_questionnaires_questionnaires_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetQuestionnaireAnswersByUserIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQuestionnaireAnswersByUserIdResponse) ProtoMessage() {}

func (x *GetQuestionnaireAnswersByUserIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dta_wed_api_v1_questionnaires_questionnaires_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQuestionnaireAnswersByUserIdResponse.ProtoReflect.Descriptor instead.
func (*GetQuestionnaireAnswersByUserIdResponse) Descriptor() ([]byte, []int) {
	return file_dta_wed_api_v1_questionnaires_questionnaires_proto_rawDescGZIP(), []int{2}
}

func (x *GetQuestionnaireAnswersByUserIdResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *GetQuestionnaireAnswersByUserIdResponse) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetQuestionnaireAnswersByUserIdResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *GetQuestionnaireAnswersByUserIdResponse) GetData() []*QuestionnaireAnswerSummary {
	if x != nil {
		return x.Data
	}
	return nil
}

type QuestionnaireAnswerOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuestionnaireOptionId int32  `protobuf:"varint,1,opt,name=questionnaireOptionId,proto3" json:"questionnaireOptionId,omitempty"`
	AnswerText            string `protobuf:"bytes,2,opt,name=answerText,proto3" json:"answerText,omitempty"`
	Data                  string `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *QuestionnaireAnswerOption) Reset() {
	*x = QuestionnaireAnswerOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dta_wed_api_v1_questionnaires_questionnaires_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuestionnaireAnswerOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuestionnaireAnswerOption) ProtoMessage() {}

func (x *QuestionnaireAnswerOption) ProtoReflect() protoreflect.Message {
	mi := &file_dta_wed_api_v1_questionnaires_questionnaires_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuestionnaireAnswerOption.ProtoReflect.Descriptor instead.
func (*QuestionnaireAnswerOption) Descriptor() ([]byte, []int) {
	return file_dta_wed_api_v1_questionnaires_questionnaires_proto_rawDescGZIP(), []int{3}
}

func (x *QuestionnaireAnswerOption) GetQuestionnaireOptionId() int32 {
	if x != nil {
		return x.QuestionnaireOptionId
	}
	return 0
}

func (x *QuestionnaireAnswerOption) GetAnswerText() string {
	if x != nil {
		return x.AnswerText
	}
	return ""
}

func (x *QuestionnaireAnswerOption) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type QuestionnaireAnswer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuestionnaireItemId int32                        `protobuf:"varint,1,opt,name=questionnaireItemId,proto3" json:"questionnaireItemId,omitempty"`
	Options             []*QuestionnaireAnswerOption `protobuf:"bytes,2,rep,name=options,proto3" json:"options,omitempty"`
}

func (x *QuestionnaireAnswer) Reset() {
	*x = QuestionnaireAnswer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dta_wed_api_v1_questionnaires_questionnaires_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuestionnaireAnswer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuestionnaireAnswer) ProtoMessage() {}

func (x *QuestionnaireAnswer) ProtoReflect() protoreflect.Message {
	mi := &file_dta_wed_api_v1_questionnaires_questionnaires_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuestionnaireAnswer.ProtoReflect.Descriptor instead.
func (*QuestionnaireAnswer) Descriptor() ([]byte, []int) {
	return file_dta_wed_api_v1_questionnaires_questionnaires_proto_rawDescGZIP(), []int{4}
}

func (x *QuestionnaireAnswer) GetQuestionnaireItemId() int32 {
	if x != nil {
		return x.QuestionnaireItemId
	}
	return 0
}

func (x *QuestionnaireAnswer) GetOptions() []*QuestionnaireAnswerOption {
	if x != nil {
		return x.Options
	}
	return nil
}

type CreateQuestionnaireAnswersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuestionnaireId int32                  `protobuf:"varint,1,opt,name=questionnaireId,proto3" json:"questionnaireId,omitempty"`
	UserId          int32                  `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`
	Date            int32                  `protobuf:"varint,3,opt,name=date,proto3" json:"date,omitempty"`
	Answers         []*QuestionnaireAnswer `protobuf:"bytes,4,rep,name=answers,proto3" json:"answers,omitempty"`
}

func (x *CreateQuestionnaireAnswersRequest) Reset() {
	*x = CreateQuestionnaireAnswersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dta_wed_api_v1_questionnaires_questionnaires_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateQuestionnaireAnswersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateQuestionnaireAnswersRequest) ProtoMessage() {}

func (x *CreateQuestionnaireAnswersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dta_wed_api_v1_questionnaires_questionnaires_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateQuestionnaireAnswersRequest.ProtoReflect.Descriptor instead.
func (*CreateQuestionnaireAnswersRequest) Descriptor() ([]byte, []int) {
	return file_dta_wed_api_v1_questionnaires_questionnaires_proto_rawDescGZIP(), []int{5}
}

func (x *CreateQuestionnaireAnswersRequest) GetQuestionnaireId() int32 {
	if x != nil {
		return x.QuestionnaireId
	}
	return 0
}

func (x *CreateQuestionnaireAnswersRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CreateQuestionnaireAnswersRequest) GetDate() int32 {
	if x != nil {
		return x.Date
	}
	return 0
}

func (x *CreateQuestionnaireAnswersRequest) GetAnswers() []*QuestionnaireAnswer {
	if x != nil {
		return x.Answers
	}
	return nil
}

type CreateQuestionnaireAnswersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateQuestionnaireAnswersResponse) Reset() {
	*x = CreateQuestionnaireAnswersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dta_wed_api_v1_questionnaires_questionnaires_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateQuestionnaireAnswersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateQuestionnaireAnswersResponse) ProtoMessage() {}

func (x *CreateQuestionnaireAnswersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dta_wed_api_v1_questionnaires_questionnaires_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateQuestionnaireAnswersResponse.ProtoReflect.Descriptor instead.
func (*CreateQuestionnaireAnswersResponse) Descriptor() ([]byte, []int) {
	return file_dta_wed_api_v1_questionnaires_questionnaires_proto_rawDescGZIP(), []int{6}
}

type GetQuestionnaireItemsByQuestionnaireIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuestionnaireId int32 `protobuf:"varint,1,opt,name=questionnaireId,proto3" json:"questionnaireId,omitempty"`
}

func (x *GetQuestionnaireItemsByQuestionnaireIdRequest) Reset() {
	*x = GetQuestionnaireItemsByQuestionnaireIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dta_wed_api_v1_questionnaires_questionnaires_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetQuestionnaireItemsByQuestionnaireIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQuestionnaireItemsByQuestionnaireIdRequest) ProtoMessage() {}

func (x *GetQuestionnaireItemsByQuestionnaireIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dta_wed_api_v1_questionnaires_questionnaires_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQuestionnaireItemsByQuestionnaireIdRequest.ProtoReflect.Descriptor instead.
func (*GetQuestionnaireItemsByQuestionnaireIdRequest) Descriptor() ([]byte, []int) {
	return file_dta_wed_api_v1_questionnaires_questionnaires_proto_rawDescGZIP(), []int{7}
}

func (x *GetQuestionnaireItemsByQuestionnaireIdRequest) GetQuestionnaireId() int32 {
	if x != nil {
		return x.QuestionnaireId
	}
	return 0
}

type QuestionnaireItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title       string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Required    bool                   `protobuf:"varint,4,opt,name=required,proto3" json:"required,omitempty"`
	Status      int32                  `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`
	ItemTypeId  int32                  `protobuf:"varint,6,opt,name=itemTypeId,proto3" json:"itemTypeId,omitempty"`
	Order       int32                  `protobuf:"varint,7,opt,name=order,proto3" json:"order,omitempty"`
	Options     []*QuestionnaireOption `protobuf:"bytes,10,rep,name=options,proto3" json:"options,omitempty"`
}

func (x *QuestionnaireItem) Reset() {
	*x = QuestionnaireItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dta_wed_api_v1_questionnaires_questionnaires_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuestionnaireItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuestionnaireItem) ProtoMessage() {}

func (x *QuestionnaireItem) ProtoReflect() protoreflect.Message {
	mi := &file_dta_wed_api_v1_questionnaires_questionnaires_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuestionnaireItem.ProtoReflect.Descriptor instead.
func (*QuestionnaireItem) Descriptor() ([]byte, []int) {
	return file_dta_wed_api_v1_questionnaires_questionnaires_proto_rawDescGZIP(), []int{8}
}

func (x *QuestionnaireItem) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QuestionnaireItem) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *QuestionnaireItem) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *QuestionnaireItem) GetRequired() bool {
	if x != nil {
		return x.Required
	}
	return false
}

func (x *QuestionnaireItem) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *QuestionnaireItem) GetItemTypeId() int32 {
	if x != nil {
		return x.ItemTypeId
	}
	return 0
}

func (x *QuestionnaireItem) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *QuestionnaireItem) GetOptions() []*QuestionnaireOption {
	if x != nil {
		return x.Options
	}
	return nil
}

type QuestionnaireOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    int32            `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title string           `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Order int32            `protobuf:"varint,3,opt,name=order,proto3" json:"order,omitempty"`
	Data  *structpb.Struct `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *QuestionnaireOption) Reset() {
	*x = QuestionnaireOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dta_wed_api_v1_questionnaires_questionnaires_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuestionnaireOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuestionnaireOption) ProtoMessage() {}

func (x *QuestionnaireOption) ProtoReflect() protoreflect.Message {
	mi := &file_dta_wed_api_v1_questionnaires_questionnaires_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuestionnaireOption.ProtoReflect.Descriptor instead.
func (*QuestionnaireOption) Descriptor() ([]byte, []int) {
	return file_dta_wed_api_v1_questionnaires_questionnaires_proto_rawDescGZIP(), []int{9}
}

func (x *QuestionnaireOption) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QuestionnaireOption) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *QuestionnaireOption) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *QuestionnaireOption) GetData() *structpb.Struct {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetQuestionnaireItemsByQuestionnaireIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*QuestionnaireItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *GetQuestionnaireItemsByQuestionnaireIdResponse) Reset() {
	*x = GetQuestionnaireItemsByQuestionnaireIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dta_wed_api_v1_questionnaires_questionnaires_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetQuestionnaireItemsByQuestionnaireIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQuestionnaireItemsByQuestionnaireIdResponse) ProtoMessage() {}

func (x *GetQuestionnaireItemsByQuestionnaireIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dta_wed_api_v1_questionnaires_questionnaires_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQuestionnaireItemsByQuestionnaireIdResponse.ProtoReflect.Descriptor instead.
func (*GetQuestionnaireItemsByQuestionnaireIdResponse) Descriptor() ([]byte, []int) {
	return file_dta_wed_api_v1_questionnaires_questionnaires_proto_rawDescGZIP(), []int{10}
}

func (x *GetQuestionnaireItemsByQuestionnaireIdResponse) GetItems() []*QuestionnaireItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type GetQuestionnaireAnswersByAnswerIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AnswerId int32 `protobuf:"varint,1,opt,name=answerId,proto3" json:"answerId,omitempty"`
}

func (x *GetQuestionnaireAnswersByAnswerIdRequest) Reset() {
	*x = GetQuestionnaireAnswersByAnswerIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dta_wed_api_v1_questionnaires_questionnaires_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetQuestionnaireAnswersByAnswerIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQuestionnaireAnswersByAnswerIdRequest) ProtoMessage() {}

func (x *GetQuestionnaireAnswersByAnswerIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dta_wed_api_v1_questionnaires_questionnaires_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQuestionnaireAnswersByAnswerIdRequest.ProtoReflect.Descriptor instead.
func (*GetQuestionnaireAnswersByAnswerIdRequest) Descriptor() ([]byte, []int) {
	return file_dta_wed_api_v1_questionnaires_questionnaires_proto_rawDescGZIP(), []int{11}
}

func (x *GetQuestionnaireAnswersByAnswerIdRequest) GetAnswerId() int32 {
	if x != nil {
		return x.AnswerId
	}
	return 0
}

type QuestionnaireItemAnswers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId      int32                      `protobuf:"varint,1,opt,name=itemId,proto3" json:"itemId,omitempty"`
	ItemAnswers []*QuestionnaireItemAnswer `protobuf:"bytes,2,rep,name=itemAnswers,proto3" json:"itemAnswers,omitempty"`
}

func (x *QuestionnaireItemAnswers) Reset() {
	*x = QuestionnaireItemAnswers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dta_wed_api_v1_questionnaires_questionnaires_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuestionnaireItemAnswers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuestionnaireItemAnswers) ProtoMessage() {}

func (x *QuestionnaireItemAnswers) ProtoReflect() protoreflect.Message {
	mi := &file_dta_wed_api_v1_questionnaires_questionnaires_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuestionnaireItemAnswers.ProtoReflect.Descriptor instead.
func (*QuestionnaireItemAnswers) Descriptor() ([]byte, []int) {
	return file_dta_wed_api_v1_questionnaires_questionnaires_proto_rawDescGZIP(), []int{12}
}

func (x *QuestionnaireItemAnswers) GetItemId() int32 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *QuestionnaireItemAnswers) GetItemAnswers() []*QuestionnaireItemAnswer {
	if x != nil {
		return x.ItemAnswers
	}
	return nil
}

type QuestionnaireItemAnswer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OptionId       int32            `protobuf:"varint,1,opt,name=optionId,proto3" json:"optionId,omitempty"`
	ItemAnswerText string           `protobuf:"bytes,2,opt,name=itemAnswerText,proto3" json:"itemAnswerText,omitempty"`
	ItemAnswerData *structpb.Struct `protobuf:"bytes,3,opt,name=itemAnswerData,proto3" json:"itemAnswerData,omitempty"`
	ItemAnswerId   int32            `protobuf:"varint,4,opt,name=itemAnswerId,proto3" json:"itemAnswerId,omitempty"`
}

func (x *QuestionnaireItemAnswer) Reset() {
	*x = QuestionnaireItemAnswer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dta_wed_api_v1_questionnaires_questionnaires_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuestionnaireItemAnswer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuestionnaireItemAnswer) ProtoMessage() {}

func (x *QuestionnaireItemAnswer) ProtoReflect() protoreflect.Message {
	mi := &file_dta_wed_api_v1_questionnaires_questionnaires_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuestionnaireItemAnswer.ProtoReflect.Descriptor instead.
func (*QuestionnaireItemAnswer) Descriptor() ([]byte, []int) {
	return file_dta_wed_api_v1_questionnaires_questionnaires_proto_rawDescGZIP(), []int{13}
}

func (x *QuestionnaireItemAnswer) GetOptionId() int32 {
	if x != nil {
		return x.OptionId
	}
	return 0
}

func (x *QuestionnaireItemAnswer) GetItemAnswerText() string {
	if x != nil {
		return x.ItemAnswerText
	}
	return ""
}

func (x *QuestionnaireItemAnswer) GetItemAnswerData() *structpb.Struct {
	if x != nil {
		return x.ItemAnswerData
	}
	return nil
}

func (x *QuestionnaireItemAnswer) GetItemAnswerId() int32 {
	if x != nil {
		return x.ItemAnswerId
	}
	return 0
}

type GetQuestionnaireAnswersByAnswerIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date     string                      `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
	AnswerId int32                       `protobuf:"varint,2,opt,name=answerId,proto3" json:"answerId,omitempty"`
	Items    []*QuestionnaireItemAnswers `protobuf:"bytes,3,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *GetQuestionnaireAnswersByAnswerIdResponse) Reset() {
	*x = GetQuestionnaireAnswersByAnswerIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dta_wed_api_v1_questionnaires_questionnaires_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetQuestionnaireAnswersByAnswerIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQuestionnaireAnswersByAnswerIdResponse) ProtoMessage() {}

func (x *GetQuestionnaireAnswersByAnswerIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dta_wed_api_v1_questionnaires_questionnaires_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQuestionnaireAnswersByAnswerIdResponse.ProtoReflect.Descriptor instead.
func (*GetQuestionnaireAnswersByAnswerIdResponse) Descriptor() ([]byte, []int) {
	return file_dta_wed_api_v1_questionnaires_questionnaires_proto_rawDescGZIP(), []int{14}
}

func (x *GetQuestionnaireAnswersByAnswerIdResponse) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *GetQuestionnaireAnswersByAnswerIdResponse) GetAnswerId() int32 {
	if x != nil {
		return x.AnswerId
	}
	return 0
}

func (x *GetQuestionnaireAnswersByAnswerIdResponse) GetItems() []*QuestionnaireItemAnswers {
	if x != nil {
		return x.Items
	}
	return nil
}

type DeleteQuestionnaireAnswersByAnswerIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AnswerId int32 `protobuf:"varint,1,opt,name=answerId,proto3" json:"answerId,omitempty"`
}

func (x *DeleteQuestionnaireAnswersByAnswerIdRequest) Reset() {
	*x = DeleteQuestionnaireAnswersByAnswerIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dta_wed_api_v1_questionnaires_questionnaires_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteQuestionnaireAnswersByAnswerIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteQuestionnaireAnswersByAnswerIdRequest) ProtoMessage() {}

func (x *DeleteQuestionnaireAnswersByAnswerIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dta_wed_api_v1_questionnaires_questionnaires_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteQuestionnaireAnswersByAnswerIdRequest.ProtoReflect.Descriptor instead.
func (*DeleteQuestionnaireAnswersByAnswerIdRequest) Descriptor() ([]byte, []int) {
	return file_dta_wed_api_v1_questionnaires_questionnaires_proto_rawDescGZIP(), []int{15}
}

func (x *DeleteQuestionnaireAnswersByAnswerIdRequest) GetAnswerId() int32 {
	if x != nil {
		return x.AnswerId
	}
	return 0
}

var File_dta_wed_api_v1_questionnaires_questionnaires_proto protoreflect.FileDescriptor

var file_dta_wed_api_v1_questionnaires_questionnaires_proto_rawDesc = []byte{
	0x0a, 0x32, 0x64, 0x74, 0x61, 0x2d, 0x77, 0x65, 0x64, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31,
	0x2f, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x73, 0x2f,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1d, 0x64, 0x74, 0x61, 0x2e, 0x77, 0x65, 0x64, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69,
	0x72, 0x65, 0x73, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x96, 0x01, 0x0a, 0x26, 0x47, 0x65, 0x74, 0x51, 0x75, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72,
	0x73, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x61, 0x73, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x73, 0x63, 0x22, 0x76,
	0x0a, 0x1a, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x41,
	0x6e, 0x73, 0x77, 0x65, 0x72, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x28, 0x0a, 0x0f,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e,
	0x61, 0x69, 0x72, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x6e,
	0x73, 0x77, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x61, 0x6e,
	0x73, 0x77, 0x65, 0x72, 0x49, 0x64, 0x22, 0xc2, 0x01, 0x0a, 0x27, 0x47, 0x65, 0x74, 0x51, 0x75,
	0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x41, 0x6e, 0x73, 0x77, 0x65,
	0x72, 0x73, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x4d, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x64, 0x74, 0x61,
	0x2e, 0x77, 0x65, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x73, 0x2e, 0x51, 0x75, 0x65, 0x73, 0x74,
	0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x53, 0x75,
	0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x85, 0x01, 0x0a, 0x19,
	0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x41, 0x6e, 0x73,
	0x77, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x15, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x15, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x1e, 0x0a, 0x0a, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x54, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x54, 0x65, 0x78, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x9b, 0x01, 0x0a, 0x13, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e,
	0x6e, 0x61, 0x69, 0x72, 0x65, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x12, 0x30, 0x0a, 0x13, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x49, 0x74, 0x65, 0x6d,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x52, 0x0a,
	0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x38,
	0x2e, 0x64, 0x74, 0x61, 0x2e, 0x77, 0x65, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x73, 0x2e, 0x51,
	0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x41, 0x6e, 0x73, 0x77,
	0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x22, 0xe2, 0x01, 0x0a, 0x21, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x51, 0x75, 0x65, 0x73,
	0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x0f, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x20, 0x00, 0x52, 0x0f, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a,
	0x02, 0x20, 0x00, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02,
	0x20, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x4c, 0x0a, 0x07, 0x61, 0x6e, 0x73, 0x77,
	0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x64, 0x74, 0x61, 0x2e,
	0x77, 0x65, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x73, 0x2e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x52, 0x07, 0x61,
	0x6e, 0x73, 0x77, 0x65, 0x72, 0x73, 0x22, 0x24, 0x0a, 0x22, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x41, 0x6e, 0x73,
	0x77, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x59, 0x0a, 0x2d,
	0x47, 0x65, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65,
	0x49, 0x74, 0x65, 0x6d, 0x73, 0x42, 0x79, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e,
	0x61, 0x69, 0x72, 0x65, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a,
	0x0f, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e,
	0x6e, 0x61, 0x69, 0x72, 0x65, 0x49, 0x64, 0x22, 0x93, 0x02, 0x0a, 0x11, 0x51, 0x75, 0x65, 0x73,
	0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x74, 0x65,
	0x6d, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x69,
	0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12,
	0x4c, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x32, 0x2e, 0x64, 0x74, 0x61, 0x2e, 0x77, 0x65, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x73,
	0x2e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x7e, 0x0a,
	0x13, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x12, 0x2b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x78, 0x0a,
	0x2e, 0x47, 0x65, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72,
	0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x42, 0x79, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e,
	0x6e, 0x61, 0x69, 0x72, 0x65, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x46, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30,
	0x2e, 0x64, 0x74, 0x61, 0x2e, 0x77, 0x65, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x73, 0x2e, 0x51,
	0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x46, 0x0a, 0x28, 0x47, 0x65, 0x74, 0x51, 0x75,
	0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x41, 0x6e, 0x73, 0x77, 0x65,
	0x72, 0x73, 0x42, 0x79, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x49, 0x64, 0x22,
	0x8c, 0x01, 0x0a, 0x18, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72,
	0x65, 0x49, 0x74, 0x65, 0x6d, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x69, 0x74,
	0x65, 0x6d, 0x49, 0x64, 0x12, 0x58, 0x0a, 0x0b, 0x69, 0x74, 0x65, 0x6d, 0x41, 0x6e, 0x73, 0x77,
	0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x64, 0x74, 0x61, 0x2e,
	0x77, 0x65, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x73, 0x2e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x41, 0x6e, 0x73, 0x77, 0x65,
	0x72, 0x52, 0x0b, 0x69, 0x74, 0x65, 0x6d, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x73, 0x22, 0xc2,
	0x01, 0x0a, 0x17, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65,
	0x49, 0x74, 0x65, 0x6d, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x69, 0x74, 0x65, 0x6d, 0x41, 0x6e,
	0x73, 0x77, 0x65, 0x72, 0x54, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x69, 0x74, 0x65, 0x6d, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x54, 0x65, 0x78, 0x74, 0x12, 0x3f,
	0x0a, 0x0e, 0x69, 0x74, 0x65, 0x6d, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52,
	0x0e, 0x69, 0x74, 0x65, 0x6d, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x22, 0x0a, 0x0c, 0x69, 0x74, 0x65, 0x6d, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x69, 0x74, 0x65, 0x6d, 0x41, 0x6e, 0x73, 0x77, 0x65,
	0x72, 0x49, 0x64, 0x22, 0xaa, 0x01, 0x0a, 0x29, 0x47, 0x65, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74,
	0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x73, 0x42,
	0x79, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x4d, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x37, 0x2e, 0x64, 0x74, 0x61, 0x2e, 0x77, 0x65, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x73,
	0x2e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x49, 0x74,
	0x65, 0x6d, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x73, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x22, 0x49, 0x0a, 0x2b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x73, 0x42, 0x79,
	0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x49, 0x64, 0x32, 0x80, 0x09, 0x0a, 0x12,
	0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x73, 0x44, 0x61,
	0x74, 0x61, 0x12, 0xf3, 0x01, 0x0a, 0x26, 0x47, 0x65, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x42, 0x79, 0x51, 0x75,
	0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x49, 0x64, 0x12, 0x4c, 0x2e,
	0x64, 0x74, 0x61, 0x2e, 0x77, 0x65, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x73, 0x2e, 0x47, 0x65,
	0x74, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x49, 0x74,
	0x65, 0x6d, 0x73, 0x42, 0x79, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69,
	0x72, 0x65, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x4d, 0x2e, 0x64, 0x74,
	0x61, 0x2e, 0x77, 0x65, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x51,
	0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x49, 0x74, 0x65, 0x6d,
	0x73, 0x42, 0x79, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65,
	0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2c, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x26, 0x12, 0x24, 0x2f, 0x76, 0x31, 0x2f, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e,
	0x6e, 0x61, 0x69, 0x72, 0x65, 0x73, 0x2f, 0x7b, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e,
	0x6e, 0x61, 0x69, 0x72, 0x65, 0x49, 0x64, 0x7d, 0x12, 0xe9, 0x01, 0x0a, 0x1a, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65,
	0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x73, 0x12, 0x40, 0x2e, 0x64, 0x74, 0x61, 0x2e, 0x77, 0x65,
	0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f,
	0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x51, 0x75,
	0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x41, 0x6e, 0x73, 0x77, 0x65,
	0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x41, 0x2e, 0x64, 0x74, 0x61, 0x2e,
	0x77, 0x65, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x41, 0x6e, 0x73,
	0x77, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x46, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x40, 0x22, 0x3b, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72,
	0x73, 0x2f, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x73,
	0x2f, 0x7b, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x49,
	0x64, 0x7d, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x7d, 0x3a, 0x01, 0x2a, 0x12, 0xe3, 0x01, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x51, 0x75, 0x65, 0x73,
	0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x73,
	0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x45, 0x2e, 0x64, 0x74, 0x61, 0x2e, 0x77,
	0x65, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x51, 0x75, 0x65, 0x73,
	0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x73,
	0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x46, 0x2e, 0x64, 0x74, 0x61, 0x2e, 0x77, 0x65, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x73, 0x2e,
	0x47, 0x65, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65,
	0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x73, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x31, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2b, 0x12,
	0x29, 0x2f, 0x76, 0x31, 0x2f, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69,
	0x72, 0x65, 0x73, 0x2f, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x73, 0x2f, 0x75, 0x73, 0x65, 0x72,
	0x73, 0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x7d, 0x12, 0xe5, 0x01, 0x0a, 0x21, 0x47,
	0x65, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x41,
	0x6e, 0x73, 0x77, 0x65, 0x72, 0x73, 0x42, 0x79, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x47, 0x2e, 0x64, 0x74, 0x61, 0x2e, 0x77, 0x65, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x73,
	0x2e, 0x47, 0x65, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72,
	0x65, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x73, 0x42, 0x79, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72,
	0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x48, 0x2e, 0x64, 0x74, 0x61, 0x2e,
	0x77, 0x65, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x51, 0x75, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72,
	0x73, 0x42, 0x79, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x2d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x27, 0x12, 0x25, 0x2f, 0x76, 0x31,
	0x2f, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x73, 0x2f,
	0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x49,
	0x64, 0x7d, 0x12, 0xb9, 0x01, 0x0a, 0x24, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x51, 0x75, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72,
	0x73, 0x42, 0x79, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x49, 0x64, 0x12, 0x4a, 0x2e, 0x64, 0x74,
	0x61, 0x2e, 0x77, 0x65, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x41,
	0x6e, 0x73, 0x77, 0x65, 0x72, 0x73, 0x42, 0x79, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x49, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x2d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x27, 0x2a, 0x25, 0x2f, 0x76, 0x31, 0x2f, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x73, 0x2f, 0x61, 0x6e, 0x73, 0x77,
	0x65, 0x72, 0x73, 0x2f, 0x7b, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x49, 0x64, 0x7d, 0x42, 0x51,
	0x5a, 0x4f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x77, 0x65, 0x6c,
	0x74, 0x63, 0x6f, 0x72, 0x70, 0x2f, 0x64, 0x74, 0x61, 0x2d, 0x77, 0x65, 0x64, 0x2d, 0x61, 0x70,
	0x69, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x64, 0x74, 0x61, 0x2d, 0x77, 0x65, 0x64, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f,
	0x77, 0x65, 0x64, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65,
	0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_dta_wed_api_v1_questionnaires_questionnaires_proto_rawDescOnce sync.Once
	file_dta_wed_api_v1_questionnaires_questionnaires_proto_rawDescData = file_dta_wed_api_v1_questionnaires_questionnaires_proto_rawDesc
)

func file_dta_wed_api_v1_questionnaires_questionnaires_proto_rawDescGZIP() []byte {
	file_dta_wed_api_v1_questionnaires_questionnaires_proto_rawDescOnce.Do(func() {
		file_dta_wed_api_v1_questionnaires_questionnaires_proto_rawDescData = protoimpl.X.CompressGZIP(file_dta_wed_api_v1_questionnaires_questionnaires_proto_rawDescData)
	})
	return file_dta_wed_api_v1_questionnaires_questionnaires_proto_rawDescData
}

var file_dta_wed_api_v1_questionnaires_questionnaires_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_dta_wed_api_v1_questionnaires_questionnaires_proto_goTypes = []interface{}{
	(*GetQuestionnaireAnswersByUserIdRequest)(nil),         // 0: dta.wed.api.v1.questionnaires.GetQuestionnaireAnswersByUserIdRequest
	(*QuestionnaireAnswerSummary)(nil),                     // 1: dta.wed.api.v1.questionnaires.QuestionnaireAnswerSummary
	(*GetQuestionnaireAnswersByUserIdResponse)(nil),        // 2: dta.wed.api.v1.questionnaires.GetQuestionnaireAnswersByUserIdResponse
	(*QuestionnaireAnswerOption)(nil),                      // 3: dta.wed.api.v1.questionnaires.QuestionnaireAnswerOption
	(*QuestionnaireAnswer)(nil),                            // 4: dta.wed.api.v1.questionnaires.QuestionnaireAnswer
	(*CreateQuestionnaireAnswersRequest)(nil),              // 5: dta.wed.api.v1.questionnaires.CreateQuestionnaireAnswersRequest
	(*CreateQuestionnaireAnswersResponse)(nil),             // 6: dta.wed.api.v1.questionnaires.CreateQuestionnaireAnswersResponse
	(*GetQuestionnaireItemsByQuestionnaireIdRequest)(nil),  // 7: dta.wed.api.v1.questionnaires.GetQuestionnaireItemsByQuestionnaireIdRequest
	(*QuestionnaireItem)(nil),                              // 8: dta.wed.api.v1.questionnaires.QuestionnaireItem
	(*QuestionnaireOption)(nil),                            // 9: dta.wed.api.v1.questionnaires.QuestionnaireOption
	(*GetQuestionnaireItemsByQuestionnaireIdResponse)(nil), // 10: dta.wed.api.v1.questionnaires.GetQuestionnaireItemsByQuestionnaireIdResponse
	(*GetQuestionnaireAnswersByAnswerIdRequest)(nil),       // 11: dta.wed.api.v1.questionnaires.GetQuestionnaireAnswersByAnswerIdRequest
	(*QuestionnaireItemAnswers)(nil),                       // 12: dta.wed.api.v1.questionnaires.QuestionnaireItemAnswers
	(*QuestionnaireItemAnswer)(nil),                        // 13: dta.wed.api.v1.questionnaires.QuestionnaireItemAnswer
	(*GetQuestionnaireAnswersByAnswerIdResponse)(nil),      // 14: dta.wed.api.v1.questionnaires.GetQuestionnaireAnswersByAnswerIdResponse
	(*DeleteQuestionnaireAnswersByAnswerIdRequest)(nil),    // 15: dta.wed.api.v1.questionnaires.DeleteQuestionnaireAnswersByAnswerIdRequest
	(*structpb.Struct)(nil),                                // 16: google.protobuf.Struct
	(*emptypb.Empty)(nil),                                  // 17: google.protobuf.Empty
}
var file_dta_wed_api_v1_questionnaires_questionnaires_proto_depIdxs = []int32{
	1,  // 0: dta.wed.api.v1.questionnaires.GetQuestionnaireAnswersByUserIdResponse.data:type_name -> dta.wed.api.v1.questionnaires.QuestionnaireAnswerSummary
	3,  // 1: dta.wed.api.v1.questionnaires.QuestionnaireAnswer.options:type_name -> dta.wed.api.v1.questionnaires.QuestionnaireAnswerOption
	4,  // 2: dta.wed.api.v1.questionnaires.CreateQuestionnaireAnswersRequest.answers:type_name -> dta.wed.api.v1.questionnaires.QuestionnaireAnswer
	9,  // 3: dta.wed.api.v1.questionnaires.QuestionnaireItem.options:type_name -> dta.wed.api.v1.questionnaires.QuestionnaireOption
	16, // 4: dta.wed.api.v1.questionnaires.QuestionnaireOption.data:type_name -> google.protobuf.Struct
	8,  // 5: dta.wed.api.v1.questionnaires.GetQuestionnaireItemsByQuestionnaireIdResponse.items:type_name -> dta.wed.api.v1.questionnaires.QuestionnaireItem
	13, // 6: dta.wed.api.v1.questionnaires.QuestionnaireItemAnswers.itemAnswers:type_name -> dta.wed.api.v1.questionnaires.QuestionnaireItemAnswer
	16, // 7: dta.wed.api.v1.questionnaires.QuestionnaireItemAnswer.itemAnswerData:type_name -> google.protobuf.Struct
	12, // 8: dta.wed.api.v1.questionnaires.GetQuestionnaireAnswersByAnswerIdResponse.items:type_name -> dta.wed.api.v1.questionnaires.QuestionnaireItemAnswers
	7,  // 9: dta.wed.api.v1.questionnaires.QuestionnairesData.GetQuestionnaireItemsByQuestionnaireId:input_type -> dta.wed.api.v1.questionnaires.GetQuestionnaireItemsByQuestionnaireIdRequest
	5,  // 10: dta.wed.api.v1.questionnaires.QuestionnairesData.CreateQuestionnaireAnswers:input_type -> dta.wed.api.v1.questionnaires.CreateQuestionnaireAnswersRequest
	0,  // 11: dta.wed.api.v1.questionnaires.QuestionnairesData.GetQuestionnaireAnswersByUserId:input_type -> dta.wed.api.v1.questionnaires.GetQuestionnaireAnswersByUserIdRequest
	11, // 12: dta.wed.api.v1.questionnaires.QuestionnairesData.GetQuestionnaireAnswersByAnswerId:input_type -> dta.wed.api.v1.questionnaires.GetQuestionnaireAnswersByAnswerIdRequest
	15, // 13: dta.wed.api.v1.questionnaires.QuestionnairesData.DeleteQuestionnaireAnswersByAnswerId:input_type -> dta.wed.api.v1.questionnaires.DeleteQuestionnaireAnswersByAnswerIdRequest
	10, // 14: dta.wed.api.v1.questionnaires.QuestionnairesData.GetQuestionnaireItemsByQuestionnaireId:output_type -> dta.wed.api.v1.questionnaires.GetQuestionnaireItemsByQuestionnaireIdResponse
	6,  // 15: dta.wed.api.v1.questionnaires.QuestionnairesData.CreateQuestionnaireAnswers:output_type -> dta.wed.api.v1.questionnaires.CreateQuestionnaireAnswersResponse
	2,  // 16: dta.wed.api.v1.questionnaires.QuestionnairesData.GetQuestionnaireAnswersByUserId:output_type -> dta.wed.api.v1.questionnaires.GetQuestionnaireAnswersByUserIdResponse
	14, // 17: dta.wed.api.v1.questionnaires.QuestionnairesData.GetQuestionnaireAnswersByAnswerId:output_type -> dta.wed.api.v1.questionnaires.GetQuestionnaireAnswersByAnswerIdResponse
	17, // 18: dta.wed.api.v1.questionnaires.QuestionnairesData.DeleteQuestionnaireAnswersByAnswerId:output_type -> google.protobuf.Empty
	14, // [14:19] is the sub-list for method output_type
	9,  // [9:14] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_dta_wed_api_v1_questionnaires_questionnaires_proto_init() }
func file_dta_wed_api_v1_questionnaires_questionnaires_proto_init() {
	if File_dta_wed_api_v1_questionnaires_questionnaires_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_dta_wed_api_v1_questionnaires_questionnaires_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetQuestionnaireAnswersByUserIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dta_wed_api_v1_questionnaires_questionnaires_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuestionnaireAnswerSummary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dta_wed_api_v1_questionnaires_questionnaires_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetQuestionnaireAnswersByUserIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dta_wed_api_v1_questionnaires_questionnaires_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuestionnaireAnswerOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dta_wed_api_v1_questionnaires_questionnaires_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuestionnaireAnswer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dta_wed_api_v1_questionnaires_questionnaires_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateQuestionnaireAnswersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dta_wed_api_v1_questionnaires_questionnaires_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateQuestionnaireAnswersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dta_wed_api_v1_questionnaires_questionnaires_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetQuestionnaireItemsByQuestionnaireIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dta_wed_api_v1_questionnaires_questionnaires_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuestionnaireItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dta_wed_api_v1_questionnaires_questionnaires_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuestionnaireOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dta_wed_api_v1_questionnaires_questionnaires_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetQuestionnaireItemsByQuestionnaireIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dta_wed_api_v1_questionnaires_questionnaires_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetQuestionnaireAnswersByAnswerIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dta_wed_api_v1_questionnaires_questionnaires_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuestionnaireItemAnswers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dta_wed_api_v1_questionnaires_questionnaires_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuestionnaireItemAnswer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dta_wed_api_v1_questionnaires_questionnaires_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetQuestionnaireAnswersByAnswerIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dta_wed_api_v1_questionnaires_questionnaires_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteQuestionnaireAnswersByAnswerIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_dta_wed_api_v1_questionnaires_questionnaires_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_dta_wed_api_v1_questionnaires_questionnaires_proto_goTypes,
		DependencyIndexes: file_dta_wed_api_v1_questionnaires_questionnaires_proto_depIdxs,
		MessageInfos:      file_dta_wed_api_v1_questionnaires_questionnaires_proto_msgTypes,
	}.Build()
	File_dta_wed_api_v1_questionnaires_questionnaires_proto = out.File
	file_dta_wed_api_v1_questionnaires_questionnaires_proto_rawDesc = nil
	file_dta_wed_api_v1_questionnaires_questionnaires_proto_goTypes = nil
	file_dta_wed_api_v1_questionnaires_questionnaires_proto_depIdxs = nil
}
