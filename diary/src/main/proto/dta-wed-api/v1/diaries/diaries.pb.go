// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: dta-wed-api/v1/diaries/diaries.proto

package diaries

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetUserDiariesByDateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int32 `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Date   int32 `protobuf:"varint,2,opt,name=date,proto3" json:"date,omitempty"`
}

func (x *GetUserDiariesByDateRequest) Reset() {
	*x = GetUserDiariesByDateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dta_wed_api_v1_diaries_diaries_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserDiariesByDateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserDiariesByDateRequest) ProtoMessage() {}

func (x *GetUserDiariesByDateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dta_wed_api_v1_diaries_diaries_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserDiariesByDateRequest.ProtoReflect.Descriptor instead.
func (*GetUserDiariesByDateRequest) Descriptor() ([]byte, []int) {
	return file_dta_wed_api_v1_diaries_diaries_proto_rawDescGZIP(), []int{0}
}

func (x *GetUserDiariesByDateRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetUserDiariesByDateRequest) GetDate() int32 {
	if x != nil {
		return x.Date
	}
	return 0
}

type MealDiarySchedule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled bool   `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	When    string `protobuf:"bytes,2,opt,name=when,proto3" json:"when,omitempty"`
}

func (x *MealDiarySchedule) Reset() {
	*x = MealDiarySchedule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dta_wed_api_v1_diaries_diaries_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MealDiarySchedule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MealDiarySchedule) ProtoMessage() {}

func (x *MealDiarySchedule) ProtoReflect() protoreflect.Message {
	mi := &file_dta_wed_api_v1_diaries_diaries_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MealDiarySchedule.ProtoReflect.Descriptor instead.
func (*MealDiarySchedule) Descriptor() ([]byte, []int) {
	return file_dta_wed_api_v1_diaries_diaries_proto_rawDescGZIP(), []int{1}
}

func (x *MealDiarySchedule) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *MealDiarySchedule) GetWhen() string {
	if x != nil {
		return x.When
	}
	return ""
}

type MealDiary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int32              `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Status   int32              `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	MealTime string             `protobuf:"bytes,3,opt,name=mealTime,proto3" json:"mealTime,omitempty"`
	Emotion  int32              `protobuf:"varint,4,opt,name=emotion,proto3" json:"emotion,omitempty"`
	Body     string             `protobuf:"bytes,5,opt,name=body,proto3" json:"body,omitempty"`
	AnswerId *int32             `protobuf:"varint,6,opt,name=answerId,proto3,oneof" json:"answerId,omitempty"`
	Schedule *MealDiarySchedule `protobuf:"bytes,7,opt,name=schedule,proto3" json:"schedule,omitempty"`
}

func (x *MealDiary) Reset() {
	*x = MealDiary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dta_wed_api_v1_diaries_diaries_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MealDiary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MealDiary) ProtoMessage() {}

func (x *MealDiary) ProtoReflect() protoreflect.Message {
	mi := &file_dta_wed_api_v1_diaries_diaries_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MealDiary.ProtoReflect.Descriptor instead.
func (*MealDiary) Descriptor() ([]byte, []int) {
	return file_dta_wed_api_v1_diaries_diaries_proto_rawDescGZIP(), []int{2}
}

func (x *MealDiary) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MealDiary) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *MealDiary) GetMealTime() string {
	if x != nil {
		return x.MealTime
	}
	return ""
}

func (x *MealDiary) GetEmotion() int32 {
	if x != nil {
		return x.Emotion
	}
	return 0
}

func (x *MealDiary) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *MealDiary) GetAnswerId() int32 {
	if x != nil && x.AnswerId != nil {
		return *x.AnswerId
	}
	return 0
}

func (x *MealDiary) GetSchedule() *MealDiarySchedule {
	if x != nil {
		return x.Schedule
	}
	return nil
}

type GetUserDiariesByDateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*MealDiary `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetUserDiariesByDateResponse) Reset() {
	*x = GetUserDiariesByDateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dta_wed_api_v1_diaries_diaries_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserDiariesByDateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserDiariesByDateResponse) ProtoMessage() {}

func (x *GetUserDiariesByDateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dta_wed_api_v1_diaries_diaries_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserDiariesByDateResponse.ProtoReflect.Descriptor instead.
func (*GetUserDiariesByDateResponse) Descriptor() ([]byte, []int) {
	return file_dta_wed_api_v1_diaries_diaries_proto_rawDescGZIP(), []int{3}
}

func (x *GetUserDiariesByDateResponse) GetData() []*MealDiary {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetUserDiaryCalendarRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    int32 `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	StartDate int32 `protobuf:"varint,2,opt,name=startDate,proto3" json:"startDate,omitempty"`
	EndDate   int32 `protobuf:"varint,3,opt,name=endDate,proto3" json:"endDate,omitempty"`
}

func (x *GetUserDiaryCalendarRequest) Reset() {
	*x = GetUserDiaryCalendarRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dta_wed_api_v1_diaries_diaries_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserDiaryCalendarRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserDiaryCalendarRequest) ProtoMessage() {}

func (x *GetUserDiaryCalendarRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dta_wed_api_v1_diaries_diaries_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserDiaryCalendarRequest.ProtoReflect.Descriptor instead.
func (*GetUserDiaryCalendarRequest) Descriptor() ([]byte, []int) {
	return file_dta_wed_api_v1_diaries_diaries_proto_rawDescGZIP(), []int{4}
}

func (x *GetUserDiaryCalendarRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetUserDiaryCalendarRequest) GetStartDate() int32 {
	if x != nil {
		return x.StartDate
	}
	return 0
}

func (x *GetUserDiaryCalendarRequest) GetEndDate() int32 {
	if x != nil {
		return x.EndDate
	}
	return 0
}

type CalendarDiary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DiaryId int32 `protobuf:"varint,1,opt,name=diaryId,proto3" json:"diaryId,omitempty"`
	Answer  bool  `protobuf:"varint,2,opt,name=answer,proto3" json:"answer,omitempty"`
}

func (x *CalendarDiary) Reset() {
	*x = CalendarDiary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dta_wed_api_v1_diaries_diaries_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CalendarDiary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalendarDiary) ProtoMessage() {}

func (x *CalendarDiary) ProtoReflect() protoreflect.Message {
	mi := &file_dta_wed_api_v1_diaries_diaries_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalendarDiary.ProtoReflect.Descriptor instead.
func (*CalendarDiary) Descriptor() ([]byte, []int) {
	return file_dta_wed_api_v1_diaries_diaries_proto_rawDescGZIP(), []int{5}
}

func (x *CalendarDiary) GetDiaryId() int32 {
	if x != nil {
		return x.DiaryId
	}
	return 0
}

func (x *CalendarDiary) GetAnswer() bool {
	if x != nil {
		return x.Answer
	}
	return false
}

type UserDiaryCalendar struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date    string           `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
	Diaries []*CalendarDiary `protobuf:"bytes,2,rep,name=diaries,proto3" json:"diaries,omitempty"`
}

func (x *UserDiaryCalendar) Reset() {
	*x = UserDiaryCalendar{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dta_wed_api_v1_diaries_diaries_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserDiaryCalendar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserDiaryCalendar) ProtoMessage() {}

func (x *UserDiaryCalendar) ProtoReflect() protoreflect.Message {
	mi := &file_dta_wed_api_v1_diaries_diaries_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserDiaryCalendar.ProtoReflect.Descriptor instead.
func (*UserDiaryCalendar) Descriptor() ([]byte, []int) {
	return file_dta_wed_api_v1_diaries_diaries_proto_rawDescGZIP(), []int{6}
}

func (x *UserDiaryCalendar) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *UserDiaryCalendar) GetDiaries() []*CalendarDiary {
	if x != nil {
		return x.Diaries
	}
	return nil
}

type GetUserDiaryCalendarResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*UserDiaryCalendar `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetUserDiaryCalendarResponse) Reset() {
	*x = GetUserDiaryCalendarResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dta_wed_api_v1_diaries_diaries_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserDiaryCalendarResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserDiaryCalendarResponse) ProtoMessage() {}

func (x *GetUserDiaryCalendarResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dta_wed_api_v1_diaries_diaries_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserDiaryCalendarResponse.ProtoReflect.Descriptor instead.
func (*GetUserDiaryCalendarResponse) Descriptor() ([]byte, []int) {
	return file_dta_wed_api_v1_diaries_diaries_proto_rawDescGZIP(), []int{7}
}

func (x *GetUserDiaryCalendarResponse) GetData() []*UserDiaryCalendar {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetDiaryByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DiaryId int32 `protobuf:"varint,1,opt,name=diaryId,proto3" json:"diaryId,omitempty"`
}

func (x *GetDiaryByIdRequest) Reset() {
	*x = GetDiaryByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dta_wed_api_v1_diaries_diaries_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDiaryByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDiaryByIdRequest) ProtoMessage() {}

func (x *GetDiaryByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dta_wed_api_v1_diaries_diaries_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDiaryByIdRequest.ProtoReflect.Descriptor instead.
func (*GetDiaryByIdRequest) Descriptor() ([]byte, []int) {
	return file_dta_wed_api_v1_diaries_diaries_proto_rawDescGZIP(), []int{8}
}

func (x *GetDiaryByIdRequest) GetDiaryId() int32 {
	if x != nil {
		return x.DiaryId
	}
	return 0
}

type DiaryItemOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int32            `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title       string           `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Index       int32            `protobuf:"varint,3,opt,name=index,proto3" json:"index,omitempty"`
	Memo        string           `protobuf:"bytes,5,opt,name=memo,proto3" json:"memo,omitempty"`
	DiaryItemId int32            `protobuf:"varint,8,opt,name=diaryItemId,proto3" json:"diaryItemId,omitempty"`
	Data        *structpb.Struct `protobuf:"bytes,9,opt,name=data,proto3" json:"data,omitempty"`
	Order       int32            `protobuf:"varint,12,opt,name=order,proto3" json:"order,omitempty"`
}

func (x *DiaryItemOption) Reset() {
	*x = DiaryItemOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dta_wed_api_v1_diaries_diaries_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiaryItemOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiaryItemOption) ProtoMessage() {}

func (x *DiaryItemOption) ProtoReflect() protoreflect.Message {
	mi := &file_dta_wed_api_v1_diaries_diaries_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiaryItemOption.ProtoReflect.Descriptor instead.
func (*DiaryItemOption) Descriptor() ([]byte, []int) {
	return file_dta_wed_api_v1_diaries_diaries_proto_rawDescGZIP(), []int{9}
}

func (x *DiaryItemOption) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DiaryItemOption) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *DiaryItemOption) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *DiaryItemOption) GetMemo() string {
	if x != nil {
		return x.Memo
	}
	return ""
}

func (x *DiaryItemOption) GetDiaryItemId() int32 {
	if x != nil {
		return x.DiaryItemId
	}
	return 0
}

func (x *DiaryItemOption) GetData() *structpb.Struct {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *DiaryItemOption) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

type DiaryItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int32              `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title         string             `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description   string             `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Required      bool               `protobuf:"varint,4,opt,name=required,proto3" json:"required,omitempty"`
	Url           string             `protobuf:"bytes,5,opt,name=url,proto3" json:"url,omitempty"`
	Memo          string             `protobuf:"bytes,6,opt,name=memo,proto3" json:"memo,omitempty"`
	DiaryId       int32              `protobuf:"varint,9,opt,name=diaryId,proto3" json:"diaryId,omitempty"`
	DiaryStatusId int32              `protobuf:"varint,10,opt,name=diaryStatusId,proto3" json:"diaryStatusId,omitempty"`
	ItemTypeId    int32              `protobuf:"varint,11,opt,name=itemTypeId,proto3" json:"itemTypeId,omitempty"`
	Order         int32              `protobuf:"varint,12,opt,name=order,proto3" json:"order,omitempty"`
	Data          *structpb.Struct   `protobuf:"bytes,13,opt,name=data,proto3" json:"data,omitempty"`
	Options       []*DiaryItemOption `protobuf:"bytes,14,rep,name=options,proto3" json:"options,omitempty"`
}

func (x *DiaryItem) Reset() {
	*x = DiaryItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dta_wed_api_v1_diaries_diaries_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiaryItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiaryItem) ProtoMessage() {}

func (x *DiaryItem) ProtoReflect() protoreflect.Message {
	mi := &file_dta_wed_api_v1_diaries_diaries_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiaryItem.ProtoReflect.Descriptor instead.
func (*DiaryItem) Descriptor() ([]byte, []int) {
	return file_dta_wed_api_v1_diaries_diaries_proto_rawDescGZIP(), []int{10}
}

func (x *DiaryItem) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DiaryItem) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *DiaryItem) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *DiaryItem) GetRequired() bool {
	if x != nil {
		return x.Required
	}
	return false
}

func (x *DiaryItem) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *DiaryItem) GetMemo() string {
	if x != nil {
		return x.Memo
	}
	return ""
}

func (x *DiaryItem) GetDiaryId() int32 {
	if x != nil {
		return x.DiaryId
	}
	return 0
}

func (x *DiaryItem) GetDiaryStatusId() int32 {
	if x != nil {
		return x.DiaryStatusId
	}
	return 0
}

func (x *DiaryItem) GetItemTypeId() int32 {
	if x != nil {
		return x.ItemTypeId
	}
	return 0
}

func (x *DiaryItem) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *DiaryItem) GetData() *structpb.Struct {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *DiaryItem) GetOptions() []*DiaryItemOption {
	if x != nil {
		return x.Options
	}
	return nil
}

type GetDiaryByIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*DiaryItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *GetDiaryByIdResponse) Reset() {
	*x = GetDiaryByIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dta_wed_api_v1_diaries_diaries_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDiaryByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDiaryByIdResponse) ProtoMessage() {}

func (x *GetDiaryByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dta_wed_api_v1_diaries_diaries_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDiaryByIdResponse.ProtoReflect.Descriptor instead.
func (*GetDiaryByIdResponse) Descriptor() ([]byte, []int) {
	return file_dta_wed_api_v1_diaries_diaries_proto_rawDescGZIP(), []int{11}
}

func (x *GetDiaryByIdResponse) GetItems() []*DiaryItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type DiaryAnswerOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DiaryOptionId int32            `protobuf:"varint,1,opt,name=diaryOptionId,proto3" json:"diaryOptionId,omitempty"`
	AnswerText    string           `protobuf:"bytes,2,opt,name=answerText,proto3" json:"answerText,omitempty"`
	Data          *structpb.Struct `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DiaryAnswerOption) Reset() {
	*x = DiaryAnswerOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dta_wed_api_v1_diaries_diaries_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiaryAnswerOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiaryAnswerOption) ProtoMessage() {}

func (x *DiaryAnswerOption) ProtoReflect() protoreflect.Message {
	mi := &file_dta_wed_api_v1_diaries_diaries_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiaryAnswerOption.ProtoReflect.Descriptor instead.
func (*DiaryAnswerOption) Descriptor() ([]byte, []int) {
	return file_dta_wed_api_v1_diaries_diaries_proto_rawDescGZIP(), []int{12}
}

func (x *DiaryAnswerOption) GetDiaryOptionId() int32 {
	if x != nil {
		return x.DiaryOptionId
	}
	return 0
}

func (x *DiaryAnswerOption) GetAnswerText() string {
	if x != nil {
		return x.AnswerText
	}
	return ""
}

func (x *DiaryAnswerOption) GetData() *structpb.Struct {
	if x != nil {
		return x.Data
	}
	return nil
}

type DiaryAnswer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DiaryItemId int32                `protobuf:"varint,1,opt,name=diaryItemId,proto3" json:"diaryItemId,omitempty"`
	Options     []*DiaryAnswerOption `protobuf:"bytes,2,rep,name=options,proto3" json:"options,omitempty"`
}

func (x *DiaryAnswer) Reset() {
	*x = DiaryAnswer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dta_wed_api_v1_diaries_diaries_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiaryAnswer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiaryAnswer) ProtoMessage() {}

func (x *DiaryAnswer) ProtoReflect() protoreflect.Message {
	mi := &file_dta_wed_api_v1_diaries_diaries_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiaryAnswer.ProtoReflect.Descriptor instead.
func (*DiaryAnswer) Descriptor() ([]byte, []int) {
	return file_dta_wed_api_v1_diaries_diaries_proto_rawDescGZIP(), []int{13}
}

func (x *DiaryAnswer) GetDiaryItemId() int32 {
	if x != nil {
		return x.DiaryItemId
	}
	return 0
}

func (x *DiaryAnswer) GetOptions() []*DiaryAnswerOption {
	if x != nil {
		return x.Options
	}
	return nil
}

type UpsertDiaryAnswersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DiaryId int32          `protobuf:"varint,1,opt,name=diaryId,proto3" json:"diaryId,omitempty"`
	UserId  int32          `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`
	Date    int32          `protobuf:"varint,3,opt,name=date,proto3" json:"date,omitempty"`
	Answers []*DiaryAnswer `protobuf:"bytes,4,rep,name=answers,proto3" json:"answers,omitempty"`
}

func (x *UpsertDiaryAnswersRequest) Reset() {
	*x = UpsertDiaryAnswersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dta_wed_api_v1_diaries_diaries_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertDiaryAnswersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertDiaryAnswersRequest) ProtoMessage() {}

func (x *UpsertDiaryAnswersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dta_wed_api_v1_diaries_diaries_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertDiaryAnswersRequest.ProtoReflect.Descriptor instead.
func (*UpsertDiaryAnswersRequest) Descriptor() ([]byte, []int) {
	return file_dta_wed_api_v1_diaries_diaries_proto_rawDescGZIP(), []int{14}
}

func (x *UpsertDiaryAnswersRequest) GetDiaryId() int32 {
	if x != nil {
		return x.DiaryId
	}
	return 0
}

func (x *UpsertDiaryAnswersRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UpsertDiaryAnswersRequest) GetDate() int32 {
	if x != nil {
		return x.Date
	}
	return 0
}

func (x *UpsertDiaryAnswersRequest) GetAnswers() []*DiaryAnswer {
	if x != nil {
		return x.Answers
	}
	return nil
}

type CreateDiaryAnswersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DiaryId int32          `protobuf:"varint,1,opt,name=diaryId,proto3" json:"diaryId,omitempty"`
	UserId  int32          `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`
	Date    int32          `protobuf:"varint,3,opt,name=date,proto3" json:"date,omitempty"`
	Answers []*DiaryAnswer `protobuf:"bytes,4,rep,name=answers,proto3" json:"answers,omitempty"`
}

func (x *CreateDiaryAnswersRequest) Reset() {
	*x = CreateDiaryAnswersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dta_wed_api_v1_diaries_diaries_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDiaryAnswersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDiaryAnswersRequest) ProtoMessage() {}

func (x *CreateDiaryAnswersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dta_wed_api_v1_diaries_diaries_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDiaryAnswersRequest.ProtoReflect.Descriptor instead.
func (*CreateDiaryAnswersRequest) Descriptor() ([]byte, []int) {
	return file_dta_wed_api_v1_diaries_diaries_proto_rawDescGZIP(), []int{15}
}

func (x *CreateDiaryAnswersRequest) GetDiaryId() int32 {
	if x != nil {
		return x.DiaryId
	}
	return 0
}

func (x *CreateDiaryAnswersRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CreateDiaryAnswersRequest) GetDate() int32 {
	if x != nil {
		return x.Date
	}
	return 0
}

func (x *CreateDiaryAnswersRequest) GetAnswers() []*DiaryAnswer {
	if x != nil {
		return x.Answers
	}
	return nil
}

type UpdateDiaryAnswersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AnswerId int32          `protobuf:"varint,1,opt,name=answerId,proto3" json:"answerId,omitempty"`
	Date     int32          `protobuf:"varint,3,opt,name=date,proto3" json:"date,omitempty"`
	Answers  []*DiaryAnswer `protobuf:"bytes,4,rep,name=answers,proto3" json:"answers,omitempty"`
}

func (x *UpdateDiaryAnswersRequest) Reset() {
	*x = UpdateDiaryAnswersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dta_wed_api_v1_diaries_diaries_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDiaryAnswersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDiaryAnswersRequest) ProtoMessage() {}

func (x *UpdateDiaryAnswersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dta_wed_api_v1_diaries_diaries_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDiaryAnswersRequest.ProtoReflect.Descriptor instead.
func (*UpdateDiaryAnswersRequest) Descriptor() ([]byte, []int) {
	return file_dta_wed_api_v1_diaries_diaries_proto_rawDescGZIP(), []int{16}
}

func (x *UpdateDiaryAnswersRequest) GetAnswerId() int32 {
	if x != nil {
		return x.AnswerId
	}
	return 0
}

func (x *UpdateDiaryAnswersRequest) GetDate() int32 {
	if x != nil {
		return x.Date
	}
	return 0
}

func (x *UpdateDiaryAnswersRequest) GetAnswers() []*DiaryAnswer {
	if x != nil {
		return x.Answers
	}
	return nil
}

type DeleteDiaryAnswersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AnswerId int32 `protobuf:"varint,1,opt,name=answerId,proto3" json:"answerId,omitempty"`
}

func (x *DeleteDiaryAnswersRequest) Reset() {
	*x = DeleteDiaryAnswersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dta_wed_api_v1_diaries_diaries_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDiaryAnswersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDiaryAnswersRequest) ProtoMessage() {}

func (x *DeleteDiaryAnswersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dta_wed_api_v1_diaries_diaries_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDiaryAnswersRequest.ProtoReflect.Descriptor instead.
func (*DeleteDiaryAnswersRequest) Descriptor() ([]byte, []int) {
	return file_dta_wed_api_v1_diaries_diaries_proto_rawDescGZIP(), []int{17}
}

func (x *DeleteDiaryAnswersRequest) GetAnswerId() int32 {
	if x != nil {
		return x.AnswerId
	}
	return 0
}

type GetDiaryAnswerByAnswerIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AnswerId int32 `protobuf:"varint,1,opt,name=answerId,proto3" json:"answerId,omitempty"`
}

func (x *GetDiaryAnswerByAnswerIdRequest) Reset() {
	*x = GetDiaryAnswerByAnswerIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dta_wed_api_v1_diaries_diaries_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDiaryAnswerByAnswerIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDiaryAnswerByAnswerIdRequest) ProtoMessage() {}

func (x *GetDiaryAnswerByAnswerIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dta_wed_api_v1_diaries_diaries_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDiaryAnswerByAnswerIdRequest.ProtoReflect.Descriptor instead.
func (*GetDiaryAnswerByAnswerIdRequest) Descriptor() ([]byte, []int) {
	return file_dta_wed_api_v1_diaries_diaries_proto_rawDescGZIP(), []int{18}
}

func (x *GetDiaryAnswerByAnswerIdRequest) GetAnswerId() int32 {
	if x != nil {
		return x.AnswerId
	}
	return 0
}

type DiaryItemAnswers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId      int32              `protobuf:"varint,1,opt,name=itemId,proto3" json:"itemId,omitempty"`
	ItemAnswers []*DiaryItemAnswer `protobuf:"bytes,2,rep,name=itemAnswers,proto3" json:"itemAnswers,omitempty"`
}

func (x *DiaryItemAnswers) Reset() {
	*x = DiaryItemAnswers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dta_wed_api_v1_diaries_diaries_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiaryItemAnswers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiaryItemAnswers) ProtoMessage() {}

func (x *DiaryItemAnswers) ProtoReflect() protoreflect.Message {
	mi := &file_dta_wed_api_v1_diaries_diaries_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiaryItemAnswers.ProtoReflect.Descriptor instead.
func (*DiaryItemAnswers) Descriptor() ([]byte, []int) {
	return file_dta_wed_api_v1_diaries_diaries_proto_rawDescGZIP(), []int{19}
}

func (x *DiaryItemAnswers) GetItemId() int32 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *DiaryItemAnswers) GetItemAnswers() []*DiaryItemAnswer {
	if x != nil {
		return x.ItemAnswers
	}
	return nil
}

type DiaryItemAnswer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OptionId            int32            `protobuf:"varint,1,opt,name=optionId,proto3" json:"optionId,omitempty"`
	DiaryItemAnswerText string           `protobuf:"bytes,2,opt,name=diaryItemAnswerText,proto3" json:"diaryItemAnswerText,omitempty"`
	DiaryItemAnswerData *structpb.Struct `protobuf:"bytes,3,opt,name=diaryItemAnswerData,proto3" json:"diaryItemAnswerData,omitempty"`
	DiaryItemAnswerId   int32            `protobuf:"varint,4,opt,name=diaryItemAnswerId,proto3" json:"diaryItemAnswerId,omitempty"`
}

func (x *DiaryItemAnswer) Reset() {
	*x = DiaryItemAnswer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dta_wed_api_v1_diaries_diaries_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiaryItemAnswer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiaryItemAnswer) ProtoMessage() {}

func (x *DiaryItemAnswer) ProtoReflect() protoreflect.Message {
	mi := &file_dta_wed_api_v1_diaries_diaries_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiaryItemAnswer.ProtoReflect.Descriptor instead.
func (*DiaryItemAnswer) Descriptor() ([]byte, []int) {
	return file_dta_wed_api_v1_diaries_diaries_proto_rawDescGZIP(), []int{20}
}

func (x *DiaryItemAnswer) GetOptionId() int32 {
	if x != nil {
		return x.OptionId
	}
	return 0
}

func (x *DiaryItemAnswer) GetDiaryItemAnswerText() string {
	if x != nil {
		return x.DiaryItemAnswerText
	}
	return ""
}

func (x *DiaryItemAnswer) GetDiaryItemAnswerData() *structpb.Struct {
	if x != nil {
		return x.DiaryItemAnswerData
	}
	return nil
}

func (x *DiaryItemAnswer) GetDiaryItemAnswerId() int32 {
	if x != nil {
		return x.DiaryItemAnswerId
	}
	return 0
}

type GetDiaryAnswerByAnswerIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date     string              `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
	AnswerId int32               `protobuf:"varint,2,opt,name=answerId,proto3" json:"answerId,omitempty"`
	Items    []*DiaryItemAnswers `protobuf:"bytes,3,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *GetDiaryAnswerByAnswerIdResponse) Reset() {
	*x = GetDiaryAnswerByAnswerIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dta_wed_api_v1_diaries_diaries_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDiaryAnswerByAnswerIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDiaryAnswerByAnswerIdResponse) ProtoMessage() {}

func (x *GetDiaryAnswerByAnswerIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dta_wed_api_v1_diaries_diaries_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDiaryAnswerByAnswerIdResponse.ProtoReflect.Descriptor instead.
func (*GetDiaryAnswerByAnswerIdResponse) Descriptor() ([]byte, []int) {
	return file_dta_wed_api_v1_diaries_diaries_proto_rawDescGZIP(), []int{21}
}

func (x *GetDiaryAnswerByAnswerIdResponse) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *GetDiaryAnswerByAnswerIdResponse) GetAnswerId() int32 {
	if x != nil {
		return x.AnswerId
	}
	return 0
}

func (x *GetDiaryAnswerByAnswerIdResponse) GetItems() []*DiaryItemAnswers {
	if x != nil {
		return x.Items
	}
	return nil
}

var File_dta_wed_api_v1_diaries_diaries_proto protoreflect.FileDescriptor

var file_dta_wed_api_v1_diaries_diaries_proto_rawDesc = []byte{
	0x0a, 0x24, 0x64, 0x74, 0x61, 0x2d, 0x77, 0x65, 0x64, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31,
	0x2f, 0x64, 0x69, 0x61, 0x72, 0x69, 0x65, 0x73, 0x2f, 0x64, 0x69, 0x61, 0x72, 0x69, 0x65, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x16, 0x64, 0x74, 0x61, 0x2e, 0x77, 0x65, 0x64, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x64, 0x69, 0x61, 0x72, 0x69, 0x65, 0x73, 0x1a, 0x17,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x5b, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x69, 0x61, 0x72, 0x69,
	0x65, 0x73, 0x42, 0x79, 0x44, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1f, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x20, 0x00, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x1b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x1a, 0x02, 0x20, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x22, 0x41, 0x0a,
	0x11, 0x4d, 0x65, 0x61, 0x6c, 0x44, 0x69, 0x61, 0x72, 0x79, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x77, 0x68, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x77, 0x68, 0x65, 0x6e,
	0x22, 0xf2, 0x01, 0x0a, 0x09, 0x4d, 0x65, 0x61, 0x6c, 0x44, 0x69, 0x61, 0x72, 0x79, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x61, 0x6c, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x61, 0x6c, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04,
	0x62, 0x6f, 0x64, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79,
	0x12, 0x1f, 0x0a, 0x08, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x48, 0x00, 0x52, 0x08, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x49, 0x64, 0x88, 0x01,
	0x01, 0x12, 0x45, 0x0a, 0x08, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x64, 0x74, 0x61, 0x2e, 0x77, 0x65, 0x64, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x64, 0x69, 0x61, 0x72, 0x69, 0x65, 0x73, 0x2e, 0x4d, 0x65, 0x61,
	0x6c, 0x44, 0x69, 0x61, 0x72, 0x79, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x08,
	0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x61, 0x6e, 0x73,
	0x77, 0x65, 0x72, 0x49, 0x64, 0x22, 0x55, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x44, 0x69, 0x61, 0x72, 0x69, 0x65, 0x73, 0x42, 0x79, 0x44, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x64, 0x74, 0x61, 0x2e, 0x77, 0x65, 0x64, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x64, 0x69, 0x61, 0x72, 0x69, 0x65, 0x73, 0x2e, 0x4d, 0x65, 0x61,
	0x6c, 0x44, 0x69, 0x61, 0x72, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x76, 0x0a, 0x1b,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x69, 0x61, 0x72, 0x79, 0x43, 0x61, 0x6c, 0x65,
	0x6e, 0x64, 0x61, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x1a, 0x02, 0x20, 0x00, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e,
	0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x6e, 0x64,
	0x44, 0x61, 0x74, 0x65, 0x22, 0x41, 0x0a, 0x0d, 0x43, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72,
	0x44, 0x69, 0x61, 0x72, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x69, 0x61, 0x72, 0x79, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x64, 0x69, 0x61, 0x72, 0x79, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x22, 0x68, 0x0a, 0x11, 0x55, 0x73, 0x65, 0x72, 0x44,
	0x69, 0x61, 0x72, 0x79, 0x43, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65,
	0x12, 0x3f, 0x0a, 0x07, 0x64, 0x69, 0x61, 0x72, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x64, 0x74, 0x61, 0x2e, 0x77, 0x65, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x64, 0x69, 0x61, 0x72, 0x69, 0x65, 0x73, 0x2e, 0x43, 0x61, 0x6c, 0x65, 0x6e,
	0x64, 0x61, 0x72, 0x44, 0x69, 0x61, 0x72, 0x79, 0x52, 0x07, 0x64, 0x69, 0x61, 0x72, 0x69, 0x65,
	0x73, 0x22, 0x5d, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x69, 0x61, 0x72,
	0x79, 0x43, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3d, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x29, 0x2e, 0x64, 0x74, 0x61, 0x2e, 0x77, 0x65, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x64, 0x69, 0x61, 0x72, 0x69, 0x65, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x69, 0x61,
	0x72, 0x79, 0x43, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x2f, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x44, 0x69, 0x61, 0x72, 0x79, 0x42, 0x79, 0x49, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x69, 0x61, 0x72, 0x79,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x64, 0x69, 0x61, 0x72, 0x79, 0x49,
	0x64, 0x22, 0xc6, 0x01, 0x0a, 0x0f, 0x44, 0x69, 0x61, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x65, 0x6d, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6d, 0x65, 0x6d, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x69, 0x61, 0x72, 0x79, 0x49, 0x74,
	0x65, 0x6d, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x64, 0x69, 0x61, 0x72,
	0x79, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x22, 0xfb, 0x02, 0x0a, 0x09, 0x44,
	0x69, 0x61, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x12,
	0x0a, 0x04, 0x6d, 0x65, 0x6d, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x65,
	0x6d, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x69, 0x61, 0x72, 0x79, 0x49, 0x64, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x64, 0x69, 0x61, 0x72, 0x79, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d,
	0x64, 0x69, 0x61, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x64, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0d, 0x64, 0x69, 0x61, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x69, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x2b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x41, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x64, 0x74, 0x61, 0x2e, 0x77, 0x65, 0x64,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x64, 0x69, 0x61, 0x72, 0x69, 0x65, 0x73, 0x2e,
	0x44, 0x69, 0x61, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x4f, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x44,
	0x69, 0x61, 0x72, 0x79, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x37, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x64, 0x74, 0x61, 0x2e, 0x77, 0x65, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x64, 0x69, 0x61, 0x72, 0x69, 0x65, 0x73, 0x2e, 0x44, 0x69, 0x61, 0x72, 0x79, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x86, 0x01, 0x0a, 0x11, 0x44, 0x69,
	0x61, 0x72, 0x79, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x24, 0x0a, 0x0d, 0x64, 0x69, 0x61, 0x72, 0x79, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x64, 0x69, 0x61, 0x72, 0x79, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x54,
	0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x6e, 0x73, 0x77, 0x65,
	0x72, 0x54, 0x65, 0x78, 0x74, 0x12, 0x2b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x74, 0x0a, 0x0b, 0x44, 0x69, 0x61, 0x72, 0x79, 0x41, 0x6e, 0x73, 0x77, 0x65,
	0x72, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x69, 0x61, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x64, 0x69, 0x61, 0x72, 0x79, 0x49, 0x74, 0x65,
	0x6d, 0x49, 0x64, 0x12, 0x43, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x64, 0x74, 0x61, 0x2e, 0x77, 0x65, 0x64, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x64, 0x69, 0x61, 0x72, 0x69, 0x65, 0x73, 0x2e, 0x44, 0x69,
	0x61, 0x72, 0x79, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xbb, 0x01, 0x0a, 0x19, 0x55, 0x70, 0x73,
	0x65, 0x72, 0x74, 0x44, 0x69, 0x61, 0x72, 0x79, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x07, 0x64, 0x69, 0x61, 0x72, 0x79, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x20, 0x00,
	0x52, 0x07, 0x64, 0x69, 0x61, 0x72, 0x79, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02,
	0x20, 0x00, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x20,
	0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x3d, 0x0a, 0x07, 0x61, 0x6e, 0x73, 0x77, 0x65,
	0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x64, 0x74, 0x61, 0x2e, 0x77,
	0x65, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x64, 0x69, 0x61, 0x72, 0x69, 0x65,
	0x73, 0x2e, 0x44, 0x69, 0x61, 0x72, 0x79, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x52, 0x07, 0x61,
	0x6e, 0x73, 0x77, 0x65, 0x72, 0x73, 0x22, 0xbb, 0x01, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x44, 0x69, 0x61, 0x72, 0x79, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x07, 0x64, 0x69, 0x61, 0x72, 0x79, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x20, 0x00, 0x52, 0x07,
	0x64, 0x69, 0x61, 0x72, 0x79, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x20, 0x00,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x20, 0x00, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x3d, 0x0a, 0x07, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x64, 0x74, 0x61, 0x2e, 0x77, 0x65, 0x64,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x64, 0x69, 0x61, 0x72, 0x69, 0x65, 0x73, 0x2e,
	0x44, 0x69, 0x61, 0x72, 0x79, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x52, 0x07, 0x61, 0x6e, 0x73,
	0x77, 0x65, 0x72, 0x73, 0x22, 0x9c, 0x01, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44,
	0x69, 0x61, 0x72, 0x79, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x23, 0x0a, 0x08, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x20, 0x00, 0x52, 0x08, 0x61,
	0x6e, 0x73, 0x77, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x20, 0x00, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x65, 0x12, 0x3d, 0x0a, 0x07, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x64, 0x74, 0x61, 0x2e, 0x77, 0x65, 0x64, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x64, 0x69, 0x61, 0x72, 0x69, 0x65, 0x73, 0x2e, 0x44,
	0x69, 0x61, 0x72, 0x79, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x52, 0x07, 0x61, 0x6e, 0x73, 0x77,
	0x65, 0x72, 0x73, 0x22, 0x40, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x69, 0x61,
	0x72, 0x79, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x23, 0x0a, 0x08, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x20, 0x00, 0x52, 0x08, 0x61, 0x6e, 0x73,
	0x77, 0x65, 0x72, 0x49, 0x64, 0x22, 0x46, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x44, 0x69, 0x61, 0x72,
	0x79, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x42, 0x79, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x08, 0x61, 0x6e, 0x73, 0x77,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a,
	0x02, 0x20, 0x00, 0x52, 0x08, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x49, 0x64, 0x22, 0x75, 0x0a,
	0x10, 0x44, 0x69, 0x61, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x49, 0x0a, 0x0b, 0x69, 0x74, 0x65,
	0x6d, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27,
	0x2e, 0x64, 0x74, 0x61, 0x2e, 0x77, 0x65, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x64, 0x69, 0x61, 0x72, 0x69, 0x65, 0x73, 0x2e, 0x44, 0x69, 0x61, 0x72, 0x79, 0x49, 0x74, 0x65,
	0x6d, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x52, 0x0b, 0x69, 0x74, 0x65, 0x6d, 0x41, 0x6e, 0x73,
	0x77, 0x65, 0x72, 0x73, 0x22, 0xd8, 0x01, 0x0a, 0x0f, 0x44, 0x69, 0x61, 0x72, 0x79, 0x49, 0x74,
	0x65, 0x6d, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x13, 0x64, 0x69, 0x61, 0x72, 0x79, 0x49, 0x74, 0x65,
	0x6d, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x54, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x13, 0x64, 0x69, 0x61, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x41, 0x6e, 0x73, 0x77,
	0x65, 0x72, 0x54, 0x65, 0x78, 0x74, 0x12, 0x49, 0x0a, 0x13, 0x64, 0x69, 0x61, 0x72, 0x79, 0x49,
	0x74, 0x65, 0x6d, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x13, 0x64, 0x69,
	0x61, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x2c, 0x0a, 0x11, 0x64, 0x69, 0x61, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x41, 0x6e,
	0x73, 0x77, 0x65, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x64, 0x69,
	0x61, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x49, 0x64, 0x22,
	0x92, 0x01, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x44, 0x69, 0x61, 0x72, 0x79, 0x41, 0x6e, 0x73, 0x77,
	0x65, 0x72, 0x42, 0x79, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x6e, 0x73, 0x77,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x61, 0x6e, 0x73, 0x77,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x3e, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x64, 0x74, 0x61, 0x2e, 0x77, 0x65, 0x64, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x64, 0x69, 0x61, 0x72, 0x69, 0x65, 0x73, 0x2e, 0x44, 0x69, 0x61,
	0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x73, 0x52, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x32, 0x89, 0x0a, 0x0a, 0x0b, 0x44, 0x69, 0x61, 0x72, 0x69, 0x65, 0x73,
	0x44, 0x61, 0x74, 0x61, 0x12, 0xb2, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x44, 0x69, 0x61, 0x72, 0x69, 0x65, 0x73, 0x42, 0x79, 0x44, 0x61, 0x74, 0x65, 0x12, 0x33, 0x2e,
	0x64, 0x74, 0x61, 0x2e, 0x77, 0x65, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x64,
	0x69, 0x61, 0x72, 0x69, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x69,
	0x61, 0x72, 0x69, 0x65, 0x73, 0x42, 0x79, 0x44, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x34, 0x2e, 0x64, 0x74, 0x61, 0x2e, 0x77, 0x65, 0x64, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x64, 0x69, 0x61, 0x72, 0x69, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x44, 0x69, 0x61, 0x72, 0x69, 0x65, 0x73, 0x42, 0x79, 0x44, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x29,
	0x12, 0x27, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x69, 0x61, 0x72, 0x69, 0x65, 0x73, 0x2f, 0x75, 0x73,
	0x65, 0x72, 0x73, 0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x7d, 0x2f, 0x64, 0x61, 0x74,
	0x65, 0x73, 0x2f, 0x7b, 0x64, 0x61, 0x74, 0x65, 0x7d, 0x12, 0xae, 0x01, 0x0a, 0x14, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x69, 0x61, 0x72, 0x79, 0x43, 0x61, 0x6c, 0x65, 0x6e, 0x64,
	0x61, 0x72, 0x12, 0x33, 0x2e, 0x64, 0x74, 0x61, 0x2e, 0x77, 0x65, 0x64, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x64, 0x69, 0x61, 0x72, 0x69, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x44, 0x69, 0x61, 0x72, 0x79, 0x43, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x64, 0x74, 0x61, 0x2e, 0x77, 0x65,
	0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x64, 0x69, 0x61, 0x72, 0x69, 0x65, 0x73,
	0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x69, 0x61, 0x72, 0x79, 0x43, 0x61, 0x6c,
	0x65, 0x6e, 0x64, 0x61, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2b, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x25, 0x12, 0x23, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x69, 0x61, 0x72, 0x69,
	0x65, 0x73, 0x2f, 0x63, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x2f, 0x75, 0x73, 0x65, 0x72,
	0x73, 0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x7d, 0x12, 0x8e, 0x01, 0x0a, 0x0c, 0x47,
	0x65, 0x74, 0x44, 0x69, 0x61, 0x72, 0x79, 0x42, 0x79, 0x49, 0x64, 0x12, 0x2b, 0x2e, 0x64, 0x74,
	0x61, 0x2e, 0x77, 0x65, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x64, 0x69, 0x61,
	0x72, 0x69, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x69, 0x61, 0x72, 0x79, 0x42, 0x79, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x64, 0x74, 0x61, 0x2e, 0x77,
	0x65, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x64, 0x69, 0x61, 0x72, 0x69, 0x65,
	0x73, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x69, 0x61, 0x72, 0x79, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x12, 0x1b,
	0x2f, 0x76, 0x31, 0x2f, 0x64, 0x69, 0x61, 0x72, 0x69, 0x65, 0x73, 0x2f, 0x7b, 0x64, 0x69, 0x61,
	0x72, 0x79, 0x49, 0x64, 0x7d, 0x2f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x98, 0x01, 0x0a, 0x12,
	0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x44, 0x69, 0x61, 0x72, 0x79, 0x41, 0x6e, 0x73, 0x77, 0x65,
	0x72, 0x73, 0x12, 0x31, 0x2e, 0x64, 0x74, 0x61, 0x2e, 0x77, 0x65, 0x64, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x64, 0x69, 0x61, 0x72, 0x69, 0x65, 0x73, 0x2e, 0x55, 0x70, 0x73, 0x65,
	0x72, 0x74, 0x44, 0x69, 0x61, 0x72, 0x79, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x37, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x31, 0x1a, 0x2c, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x6e, 0x73, 0x77, 0x65,
	0x72, 0x73, 0x2f, 0x64, 0x69, 0x61, 0x72, 0x69, 0x65, 0x73, 0x2f, 0x7b, 0x64, 0x69, 0x61, 0x72,
	0x79, 0x49, 0x64, 0x7d, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x7d, 0x3a, 0x01, 0x2a, 0x12, 0x98, 0x01, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x44, 0x69, 0x61, 0x72, 0x79, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x73, 0x12, 0x31, 0x2e,
	0x64, 0x74, 0x61, 0x2e, 0x77, 0x65, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x64,
	0x69, 0x61, 0x72, 0x69, 0x65, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x69, 0x61,
	0x72, 0x79, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x37, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x31,
	0x22, 0x2c, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x73, 0x2f, 0x64, 0x69,
	0x61, 0x72, 0x69, 0x65, 0x73, 0x2f, 0x7b, 0x64, 0x69, 0x61, 0x72, 0x79, 0x49, 0x64, 0x7d, 0x2f,
	0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x7d, 0x3a, 0x01,
	0x2a, 0x12, 0x8a, 0x01, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x69, 0x61, 0x72,
	0x79, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x73, 0x12, 0x31, 0x2e, 0x64, 0x74, 0x61, 0x2e, 0x77,
	0x65, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x64, 0x69, 0x61, 0x72, 0x69, 0x65,
	0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x69, 0x61, 0x72, 0x79, 0x41, 0x6e, 0x73,
	0x77, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x29, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23, 0x32, 0x1e, 0x2f, 0x76, 0x31,
	0x2f, 0x64, 0x69, 0x61, 0x72, 0x69, 0x65, 0x73, 0x2f, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x73,
	0x2f, 0x7b, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x49, 0x64, 0x7d, 0x3a, 0x01, 0x2a, 0x12, 0xb5,
	0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x44, 0x69, 0x61, 0x72, 0x79, 0x41, 0x6e, 0x73, 0x77, 0x65,
	0x72, 0x42, 0x79, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x49, 0x64, 0x12, 0x37, 0x2e, 0x64, 0x74,
	0x61, 0x2e, 0x77, 0x65, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x64, 0x69, 0x61,
	0x72, 0x69, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x69, 0x61, 0x72, 0x79, 0x41, 0x6e, 0x73,
	0x77, 0x65, 0x72, 0x42, 0x79, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x64, 0x74, 0x61, 0x2e, 0x77, 0x65, 0x64, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x64, 0x69, 0x61, 0x72, 0x69, 0x65, 0x73, 0x2e, 0x47, 0x65,
	0x74, 0x44, 0x69, 0x61, 0x72, 0x79, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x42, 0x79, 0x41, 0x6e,
	0x73, 0x77, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x26,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x12, 0x1e, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x69, 0x61, 0x72,
	0x69, 0x65, 0x73, 0x2f, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x61, 0x6e, 0x73,
	0x77, 0x65, 0x72, 0x49, 0x64, 0x7d, 0x12, 0x87, 0x01, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x44, 0x69, 0x61, 0x72, 0x79, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x73, 0x12, 0x31, 0x2e,
	0x64, 0x74, 0x61, 0x2e, 0x77, 0x65, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x64,
	0x69, 0x61, 0x72, 0x69, 0x65, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x69, 0x61,
	0x72, 0x79, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20,
	0x2a, 0x1e, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x69, 0x61, 0x72, 0x69, 0x65, 0x73, 0x2f, 0x61, 0x6e,
	0x73, 0x77, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x49, 0x64, 0x7d,
	0x42, 0x47, 0x5a, 0x45, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x77,
	0x65, 0x6c, 0x74, 0x63, 0x6f, 0x72, 0x70, 0x2f, 0x64, 0x74, 0x61, 0x2d, 0x77, 0x65, 0x64, 0x2d,
	0x61, 0x70, 0x69, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x64, 0x74, 0x61, 0x2d, 0x77, 0x65, 0x64, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x76,
	0x31, 0x2f, 0x64, 0x69, 0x61, 0x72, 0x69, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_dta_wed_api_v1_diaries_diaries_proto_rawDescOnce sync.Once
	file_dta_wed_api_v1_diaries_diaries_proto_rawDescData = file_dta_wed_api_v1_diaries_diaries_proto_rawDesc
)

func file_dta_wed_api_v1_diaries_diaries_proto_rawDescGZIP() []byte {
	file_dta_wed_api_v1_diaries_diaries_proto_rawDescOnce.Do(func() {
		file_dta_wed_api_v1_diaries_diaries_proto_rawDescData = protoimpl.X.CompressGZIP(file_dta_wed_api_v1_diaries_diaries_proto_rawDescData)
	})
	return file_dta_wed_api_v1_diaries_diaries_proto_rawDescData
}

var file_dta_wed_api_v1_diaries_diaries_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_dta_wed_api_v1_diaries_diaries_proto_goTypes = []interface{}{
	(*GetUserDiariesByDateRequest)(nil),      // 0: dta.wed.api.v1.diaries.GetUserDiariesByDateRequest
	(*MealDiarySchedule)(nil),                // 1: dta.wed.api.v1.diaries.MealDiarySchedule
	(*MealDiary)(nil),                        // 2: dta.wed.api.v1.diaries.MealDiary
	(*GetUserDiariesByDateResponse)(nil),     // 3: dta.wed.api.v1.diaries.GetUserDiariesByDateResponse
	(*GetUserDiaryCalendarRequest)(nil),      // 4: dta.wed.api.v1.diaries.GetUserDiaryCalendarRequest
	(*CalendarDiary)(nil),                    // 5: dta.wed.api.v1.diaries.CalendarDiary
	(*UserDiaryCalendar)(nil),                // 6: dta.wed.api.v1.diaries.UserDiaryCalendar
	(*GetUserDiaryCalendarResponse)(nil),     // 7: dta.wed.api.v1.diaries.GetUserDiaryCalendarResponse
	(*GetDiaryByIdRequest)(nil),              // 8: dta.wed.api.v1.diaries.GetDiaryByIdRequest
	(*DiaryItemOption)(nil),                  // 9: dta.wed.api.v1.diaries.DiaryItemOption
	(*DiaryItem)(nil),                        // 10: dta.wed.api.v1.diaries.DiaryItem
	(*GetDiaryByIdResponse)(nil),             // 11: dta.wed.api.v1.diaries.GetDiaryByIdResponse
	(*DiaryAnswerOption)(nil),                // 12: dta.wed.api.v1.diaries.DiaryAnswerOption
	(*DiaryAnswer)(nil),                      // 13: dta.wed.api.v1.diaries.DiaryAnswer
	(*UpsertDiaryAnswersRequest)(nil),        // 14: dta.wed.api.v1.diaries.UpsertDiaryAnswersRequest
	(*CreateDiaryAnswersRequest)(nil),        // 15: dta.wed.api.v1.diaries.CreateDiaryAnswersRequest
	(*UpdateDiaryAnswersRequest)(nil),        // 16: dta.wed.api.v1.diaries.UpdateDiaryAnswersRequest
	(*DeleteDiaryAnswersRequest)(nil),        // 17: dta.wed.api.v1.diaries.DeleteDiaryAnswersRequest
	(*GetDiaryAnswerByAnswerIdRequest)(nil),  // 18: dta.wed.api.v1.diaries.GetDiaryAnswerByAnswerIdRequest
	(*DiaryItemAnswers)(nil),                 // 19: dta.wed.api.v1.diaries.DiaryItemAnswers
	(*DiaryItemAnswer)(nil),                  // 20: dta.wed.api.v1.diaries.DiaryItemAnswer
	(*GetDiaryAnswerByAnswerIdResponse)(nil), // 21: dta.wed.api.v1.diaries.GetDiaryAnswerByAnswerIdResponse
	(*structpb.Struct)(nil),                  // 22: google.protobuf.Struct
	(*emptypb.Empty)(nil),                    // 23: google.protobuf.Empty
}
var file_dta_wed_api_v1_diaries_diaries_proto_depIdxs = []int32{
	1,  // 0: dta.wed.api.v1.diaries.MealDiary.schedule:type_name -> dta.wed.api.v1.diaries.MealDiarySchedule
	2,  // 1: dta.wed.api.v1.diaries.GetUserDiariesByDateResponse.data:type_name -> dta.wed.api.v1.diaries.MealDiary
	5,  // 2: dta.wed.api.v1.diaries.UserDiaryCalendar.diaries:type_name -> dta.wed.api.v1.diaries.CalendarDiary
	6,  // 3: dta.wed.api.v1.diaries.GetUserDiaryCalendarResponse.data:type_name -> dta.wed.api.v1.diaries.UserDiaryCalendar
	22, // 4: dta.wed.api.v1.diaries.DiaryItemOption.data:type_name -> google.protobuf.Struct
	22, // 5: dta.wed.api.v1.diaries.DiaryItem.data:type_name -> google.protobuf.Struct
	9,  // 6: dta.wed.api.v1.diaries.DiaryItem.options:type_name -> dta.wed.api.v1.diaries.DiaryItemOption
	10, // 7: dta.wed.api.v1.diaries.GetDiaryByIdResponse.items:type_name -> dta.wed.api.v1.diaries.DiaryItem
	22, // 8: dta.wed.api.v1.diaries.DiaryAnswerOption.data:type_name -> google.protobuf.Struct
	12, // 9: dta.wed.api.v1.diaries.DiaryAnswer.options:type_name -> dta.wed.api.v1.diaries.DiaryAnswerOption
	13, // 10: dta.wed.api.v1.diaries.UpsertDiaryAnswersRequest.answers:type_name -> dta.wed.api.v1.diaries.DiaryAnswer
	13, // 11: dta.wed.api.v1.diaries.CreateDiaryAnswersRequest.answers:type_name -> dta.wed.api.v1.diaries.DiaryAnswer
	13, // 12: dta.wed.api.v1.diaries.UpdateDiaryAnswersRequest.answers:type_name -> dta.wed.api.v1.diaries.DiaryAnswer
	20, // 13: dta.wed.api.v1.diaries.DiaryItemAnswers.itemAnswers:type_name -> dta.wed.api.v1.diaries.DiaryItemAnswer
	22, // 14: dta.wed.api.v1.diaries.DiaryItemAnswer.diaryItemAnswerData:type_name -> google.protobuf.Struct
	19, // 15: dta.wed.api.v1.diaries.GetDiaryAnswerByAnswerIdResponse.items:type_name -> dta.wed.api.v1.diaries.DiaryItemAnswers
	0,  // 16: dta.wed.api.v1.diaries.DiariesData.GetUserDiariesByDate:input_type -> dta.wed.api.v1.diaries.GetUserDiariesByDateRequest
	4,  // 17: dta.wed.api.v1.diaries.DiariesData.GetUserDiaryCalendar:input_type -> dta.wed.api.v1.diaries.GetUserDiaryCalendarRequest
	8,  // 18: dta.wed.api.v1.diaries.DiariesData.GetDiaryById:input_type -> dta.wed.api.v1.diaries.GetDiaryByIdRequest
	14, // 19: dta.wed.api.v1.diaries.DiariesData.UpsertDiaryAnswers:input_type -> dta.wed.api.v1.diaries.UpsertDiaryAnswersRequest
	15, // 20: dta.wed.api.v1.diaries.DiariesData.CreateDiaryAnswers:input_type -> dta.wed.api.v1.diaries.CreateDiaryAnswersRequest
	16, // 21: dta.wed.api.v1.diaries.DiariesData.UpdateDiaryAnswers:input_type -> dta.wed.api.v1.diaries.UpdateDiaryAnswersRequest
	18, // 22: dta.wed.api.v1.diaries.DiariesData.GetDiaryAnswerByAnswerId:input_type -> dta.wed.api.v1.diaries.GetDiaryAnswerByAnswerIdRequest
	17, // 23: dta.wed.api.v1.diaries.DiariesData.DeleteDiaryAnswers:input_type -> dta.wed.api.v1.diaries.DeleteDiaryAnswersRequest
	3,  // 24: dta.wed.api.v1.diaries.DiariesData.GetUserDiariesByDate:output_type -> dta.wed.api.v1.diaries.GetUserDiariesByDateResponse
	7,  // 25: dta.wed.api.v1.diaries.DiariesData.GetUserDiaryCalendar:output_type -> dta.wed.api.v1.diaries.GetUserDiaryCalendarResponse
	11, // 26: dta.wed.api.v1.diaries.DiariesData.GetDiaryById:output_type -> dta.wed.api.v1.diaries.GetDiaryByIdResponse
	23, // 27: dta.wed.api.v1.diaries.DiariesData.UpsertDiaryAnswers:output_type -> google.protobuf.Empty
	23, // 28: dta.wed.api.v1.diaries.DiariesData.CreateDiaryAnswers:output_type -> google.protobuf.Empty
	23, // 29: dta.wed.api.v1.diaries.DiariesData.UpdateDiaryAnswers:output_type -> google.protobuf.Empty
	21, // 30: dta.wed.api.v1.diaries.DiariesData.GetDiaryAnswerByAnswerId:output_type -> dta.wed.api.v1.diaries.GetDiaryAnswerByAnswerIdResponse
	23, // 31: dta.wed.api.v1.diaries.DiariesData.DeleteDiaryAnswers:output_type -> google.protobuf.Empty
	24, // [24:32] is the sub-list for method output_type
	16, // [16:24] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_dta_wed_api_v1_diaries_diaries_proto_init() }
func file_dta_wed_api_v1_diaries_diaries_proto_init() {
	if File_dta_wed_api_v1_diaries_diaries_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_dta_wed_api_v1_diaries_diaries_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserDiariesByDateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dta_wed_api_v1_diaries_diaries_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MealDiarySchedule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dta_wed_api_v1_diaries_diaries_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MealDiary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dta_wed_api_v1_diaries_diaries_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserDiariesByDateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dta_wed_api_v1_diaries_diaries_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserDiaryCalendarRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dta_wed_api_v1_diaries_diaries_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CalendarDiary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dta_wed_api_v1_diaries_diaries_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserDiaryCalendar); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dta_wed_api_v1_diaries_diaries_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserDiaryCalendarResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dta_wed_api_v1_diaries_diaries_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDiaryByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dta_wed_api_v1_diaries_diaries_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiaryItemOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dta_wed_api_v1_diaries_diaries_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiaryItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dta_wed_api_v1_diaries_diaries_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDiaryByIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dta_wed_api_v1_diaries_diaries_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiaryAnswerOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dta_wed_api_v1_diaries_diaries_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiaryAnswer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dta_wed_api_v1_diaries_diaries_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertDiaryAnswersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dta_wed_api_v1_diaries_diaries_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDiaryAnswersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dta_wed_api_v1_diaries_diaries_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDiaryAnswersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dta_wed_api_v1_diaries_diaries_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteDiaryAnswersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dta_wed_api_v1_diaries_diaries_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDiaryAnswerByAnswerIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dta_wed_api_v1_diaries_diaries_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiaryItemAnswers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dta_wed_api_v1_diaries_diaries_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiaryItemAnswer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dta_wed_api_v1_diaries_diaries_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDiaryAnswerByAnswerIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_dta_wed_api_v1_diaries_diaries_proto_msgTypes[2].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_dta_wed_api_v1_diaries_diaries_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_dta_wed_api_v1_diaries_diaries_proto_goTypes,
		DependencyIndexes: file_dta_wed_api_v1_diaries_diaries_proto_depIdxs,
		MessageInfos:      file_dta_wed_api_v1_diaries_diaries_proto_msgTypes,
	}.Build()
	File_dta_wed_api_v1_diaries_diaries_proto = out.File
	file_dta_wed_api_v1_diaries_diaries_proto_rawDesc = nil
	file_dta_wed_api_v1_diaries_diaries_proto_goTypes = nil
	file_dta_wed_api_v1_diaries_diaries_proto_depIdxs = nil
}
