//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: dta-wed-api/v1/diaries/diaries.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import GRPC
import NIO
import NIOConcurrencyHelpers
import SwiftProtobuf


/// Usage: instantiate `Dta_Wed_Api_V1_Diaries_DiariesDataClient`, then call methods of this protocol to make API calls.
internal protocol Dta_Wed_Api_V1_Diaries_DiariesDataClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Dta_Wed_Api_V1_Diaries_DiariesDataClientInterceptorFactoryProtocol? { get }

  func getUserDiariesByDate(
    _ request: Dta_Wed_Api_V1_Diaries_GetUserDiariesByDateRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Dta_Wed_Api_V1_Diaries_GetUserDiariesByDateRequest, Dta_Wed_Api_V1_Diaries_GetUserDiariesByDateResponse>

  func getUserDiaryCalendar(
    _ request: Dta_Wed_Api_V1_Diaries_GetUserDiaryCalendarRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Dta_Wed_Api_V1_Diaries_GetUserDiaryCalendarRequest, Dta_Wed_Api_V1_Diaries_GetUserDiaryCalendarResponse>

  func getDiaryById(
    _ request: Dta_Wed_Api_V1_Diaries_GetDiaryByIdRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Dta_Wed_Api_V1_Diaries_GetDiaryByIdRequest, Dta_Wed_Api_V1_Diaries_GetDiaryByIdResponse>

  func upsertDiaryAnswers(
    _ request: Dta_Wed_Api_V1_Diaries_UpsertDiaryAnswersRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Dta_Wed_Api_V1_Diaries_UpsertDiaryAnswersRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func createDiaryAnswers(
    _ request: Dta_Wed_Api_V1_Diaries_CreateDiaryAnswersRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Dta_Wed_Api_V1_Diaries_CreateDiaryAnswersRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func updateDiaryAnswers(
    _ request: Dta_Wed_Api_V1_Diaries_UpdateDiaryAnswersRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Dta_Wed_Api_V1_Diaries_UpdateDiaryAnswersRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func getDiaryAnswerByAnswerId(
    _ request: Dta_Wed_Api_V1_Diaries_GetDiaryAnswerByAnswerIdRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Dta_Wed_Api_V1_Diaries_GetDiaryAnswerByAnswerIdRequest, Dta_Wed_Api_V1_Diaries_GetDiaryAnswerByAnswerIdResponse>

  func deleteDiaryAnswers(
    _ request: Dta_Wed_Api_V1_Diaries_DeleteDiaryAnswersRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Dta_Wed_Api_V1_Diaries_DeleteDiaryAnswersRequest, SwiftProtobuf.Google_Protobuf_Empty>
}

extension Dta_Wed_Api_V1_Diaries_DiariesDataClientProtocol {
  internal var serviceName: String {
    return "dta.wed.api.v1.diaries.DiariesData"
  }

  /// Unary call to GetUserDiariesByDate
  ///
  /// - Parameters:
  ///   - request: Request to send to GetUserDiariesByDate.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getUserDiariesByDate(
    _ request: Dta_Wed_Api_V1_Diaries_GetUserDiariesByDateRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Dta_Wed_Api_V1_Diaries_GetUserDiariesByDateRequest, Dta_Wed_Api_V1_Diaries_GetUserDiariesByDateResponse> {
    return self.makeUnaryCall(
      path: Dta_Wed_Api_V1_Diaries_DiariesDataClientMetadata.Methods.getUserDiariesByDate.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetUserDiariesByDateInterceptors() ?? []
    )
  }

  /// Unary call to GetUserDiaryCalendar
  ///
  /// - Parameters:
  ///   - request: Request to send to GetUserDiaryCalendar.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getUserDiaryCalendar(
    _ request: Dta_Wed_Api_V1_Diaries_GetUserDiaryCalendarRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Dta_Wed_Api_V1_Diaries_GetUserDiaryCalendarRequest, Dta_Wed_Api_V1_Diaries_GetUserDiaryCalendarResponse> {
    return self.makeUnaryCall(
      path: Dta_Wed_Api_V1_Diaries_DiariesDataClientMetadata.Methods.getUserDiaryCalendar.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetUserDiaryCalendarInterceptors() ?? []
    )
  }

  /// Unary call to GetDiaryById
  ///
  /// - Parameters:
  ///   - request: Request to send to GetDiaryById.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getDiaryById(
    _ request: Dta_Wed_Api_V1_Diaries_GetDiaryByIdRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Dta_Wed_Api_V1_Diaries_GetDiaryByIdRequest, Dta_Wed_Api_V1_Diaries_GetDiaryByIdResponse> {
    return self.makeUnaryCall(
      path: Dta_Wed_Api_V1_Diaries_DiariesDataClientMetadata.Methods.getDiaryById.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetDiaryByIdInterceptors() ?? []
    )
  }

  /// Unary call to UpsertDiaryAnswers
  ///
  /// - Parameters:
  ///   - request: Request to send to UpsertDiaryAnswers.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func upsertDiaryAnswers(
    _ request: Dta_Wed_Api_V1_Diaries_UpsertDiaryAnswersRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Dta_Wed_Api_V1_Diaries_UpsertDiaryAnswersRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Dta_Wed_Api_V1_Diaries_DiariesDataClientMetadata.Methods.upsertDiaryAnswers.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpsertDiaryAnswersInterceptors() ?? []
    )
  }

  /// Unary call to CreateDiaryAnswers
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateDiaryAnswers.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func createDiaryAnswers(
    _ request: Dta_Wed_Api_V1_Diaries_CreateDiaryAnswersRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Dta_Wed_Api_V1_Diaries_CreateDiaryAnswersRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Dta_Wed_Api_V1_Diaries_DiariesDataClientMetadata.Methods.createDiaryAnswers.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateDiaryAnswersInterceptors() ?? []
    )
  }

  /// Unary call to UpdateDiaryAnswers
  ///
  /// - Parameters:
  ///   - request: Request to send to UpdateDiaryAnswers.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func updateDiaryAnswers(
    _ request: Dta_Wed_Api_V1_Diaries_UpdateDiaryAnswersRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Dta_Wed_Api_V1_Diaries_UpdateDiaryAnswersRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Dta_Wed_Api_V1_Diaries_DiariesDataClientMetadata.Methods.updateDiaryAnswers.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateDiaryAnswersInterceptors() ?? []
    )
  }

  /// Unary call to GetDiaryAnswerByAnswerId
  ///
  /// - Parameters:
  ///   - request: Request to send to GetDiaryAnswerByAnswerId.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getDiaryAnswerByAnswerId(
    _ request: Dta_Wed_Api_V1_Diaries_GetDiaryAnswerByAnswerIdRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Dta_Wed_Api_V1_Diaries_GetDiaryAnswerByAnswerIdRequest, Dta_Wed_Api_V1_Diaries_GetDiaryAnswerByAnswerIdResponse> {
    return self.makeUnaryCall(
      path: Dta_Wed_Api_V1_Diaries_DiariesDataClientMetadata.Methods.getDiaryAnswerByAnswerId.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetDiaryAnswerByAnswerIdInterceptors() ?? []
    )
  }

  /// Unary call to DeleteDiaryAnswers
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteDiaryAnswers.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func deleteDiaryAnswers(
    _ request: Dta_Wed_Api_V1_Diaries_DeleteDiaryAnswersRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Dta_Wed_Api_V1_Diaries_DeleteDiaryAnswersRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Dta_Wed_Api_V1_Diaries_DiariesDataClientMetadata.Methods.deleteDiaryAnswers.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteDiaryAnswersInterceptors() ?? []
    )
  }
}

#if compiler(>=5.6)
@available(*, deprecated)
extension Dta_Wed_Api_V1_Diaries_DiariesDataClient: @unchecked Sendable {}
#endif // compiler(>=5.6)

@available(*, deprecated, renamed: "Dta_Wed_Api_V1_Diaries_DiariesDataNIOClient")
internal final class Dta_Wed_Api_V1_Diaries_DiariesDataClient: Dta_Wed_Api_V1_Diaries_DiariesDataClientProtocol {
  private let lock = Lock()
  private var _defaultCallOptions: CallOptions
  private var _interceptors: Dta_Wed_Api_V1_Diaries_DiariesDataClientInterceptorFactoryProtocol?
  internal let channel: GRPCChannel
  internal var defaultCallOptions: CallOptions {
    get { self.lock.withLock { return self._defaultCallOptions } }
    set { self.lock.withLockVoid { self._defaultCallOptions = newValue } }
  }
  internal var interceptors: Dta_Wed_Api_V1_Diaries_DiariesDataClientInterceptorFactoryProtocol? {
    get { self.lock.withLock { return self._interceptors } }
    set { self.lock.withLockVoid { self._interceptors = newValue } }
  }

  /// Creates a client for the dta.wed.api.v1.diaries.DiariesData service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Dta_Wed_Api_V1_Diaries_DiariesDataClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self._defaultCallOptions = defaultCallOptions
    self._interceptors = interceptors
  }
}

internal struct Dta_Wed_Api_V1_Diaries_DiariesDataNIOClient: Dta_Wed_Api_V1_Diaries_DiariesDataClientProtocol {
  internal var channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Dta_Wed_Api_V1_Diaries_DiariesDataClientInterceptorFactoryProtocol?

  /// Creates a client for the dta.wed.api.v1.diaries.DiariesData service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Dta_Wed_Api_V1_Diaries_DiariesDataClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

#if compiler(>=5.6)
@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal protocol Dta_Wed_Api_V1_Diaries_DiariesDataAsyncClientProtocol: GRPCClient {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Dta_Wed_Api_V1_Diaries_DiariesDataClientInterceptorFactoryProtocol? { get }

  func makeGetUserDiariesByDateCall(
    _ request: Dta_Wed_Api_V1_Diaries_GetUserDiariesByDateRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Dta_Wed_Api_V1_Diaries_GetUserDiariesByDateRequest, Dta_Wed_Api_V1_Diaries_GetUserDiariesByDateResponse>

  func makeGetUserDiaryCalendarCall(
    _ request: Dta_Wed_Api_V1_Diaries_GetUserDiaryCalendarRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Dta_Wed_Api_V1_Diaries_GetUserDiaryCalendarRequest, Dta_Wed_Api_V1_Diaries_GetUserDiaryCalendarResponse>

  func makeGetDiaryByIDCall(
    _ request: Dta_Wed_Api_V1_Diaries_GetDiaryByIdRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Dta_Wed_Api_V1_Diaries_GetDiaryByIdRequest, Dta_Wed_Api_V1_Diaries_GetDiaryByIdResponse>

  func makeUpsertDiaryAnswersCall(
    _ request: Dta_Wed_Api_V1_Diaries_UpsertDiaryAnswersRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Dta_Wed_Api_V1_Diaries_UpsertDiaryAnswersRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func makeCreateDiaryAnswersCall(
    _ request: Dta_Wed_Api_V1_Diaries_CreateDiaryAnswersRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Dta_Wed_Api_V1_Diaries_CreateDiaryAnswersRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func makeUpdateDiaryAnswersCall(
    _ request: Dta_Wed_Api_V1_Diaries_UpdateDiaryAnswersRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Dta_Wed_Api_V1_Diaries_UpdateDiaryAnswersRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func makeGetDiaryAnswerByAnswerIDCall(
    _ request: Dta_Wed_Api_V1_Diaries_GetDiaryAnswerByAnswerIdRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Dta_Wed_Api_V1_Diaries_GetDiaryAnswerByAnswerIdRequest, Dta_Wed_Api_V1_Diaries_GetDiaryAnswerByAnswerIdResponse>

  func makeDeleteDiaryAnswersCall(
    _ request: Dta_Wed_Api_V1_Diaries_DeleteDiaryAnswersRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Dta_Wed_Api_V1_Diaries_DeleteDiaryAnswersRequest, SwiftProtobuf.Google_Protobuf_Empty>
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Dta_Wed_Api_V1_Diaries_DiariesDataAsyncClientProtocol {
  internal static var serviceDescriptor: GRPCServiceDescriptor {
    return Dta_Wed_Api_V1_Diaries_DiariesDataClientMetadata.serviceDescriptor
  }

  internal var interceptors: Dta_Wed_Api_V1_Diaries_DiariesDataClientInterceptorFactoryProtocol? {
    return nil
  }

  internal func makeGetUserDiariesByDateCall(
    _ request: Dta_Wed_Api_V1_Diaries_GetUserDiariesByDateRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Dta_Wed_Api_V1_Diaries_GetUserDiariesByDateRequest, Dta_Wed_Api_V1_Diaries_GetUserDiariesByDateResponse> {
    return self.makeAsyncUnaryCall(
      path: Dta_Wed_Api_V1_Diaries_DiariesDataClientMetadata.Methods.getUserDiariesByDate.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetUserDiariesByDateInterceptors() ?? []
    )
  }

  internal func makeGetUserDiaryCalendarCall(
    _ request: Dta_Wed_Api_V1_Diaries_GetUserDiaryCalendarRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Dta_Wed_Api_V1_Diaries_GetUserDiaryCalendarRequest, Dta_Wed_Api_V1_Diaries_GetUserDiaryCalendarResponse> {
    return self.makeAsyncUnaryCall(
      path: Dta_Wed_Api_V1_Diaries_DiariesDataClientMetadata.Methods.getUserDiaryCalendar.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetUserDiaryCalendarInterceptors() ?? []
    )
  }

  internal func makeGetDiaryByIDCall(
    _ request: Dta_Wed_Api_V1_Diaries_GetDiaryByIdRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Dta_Wed_Api_V1_Diaries_GetDiaryByIdRequest, Dta_Wed_Api_V1_Diaries_GetDiaryByIdResponse> {
    return self.makeAsyncUnaryCall(
      path: Dta_Wed_Api_V1_Diaries_DiariesDataClientMetadata.Methods.getDiaryById.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetDiaryByIdInterceptors() ?? []
    )
  }

  internal func makeUpsertDiaryAnswersCall(
    _ request: Dta_Wed_Api_V1_Diaries_UpsertDiaryAnswersRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Dta_Wed_Api_V1_Diaries_UpsertDiaryAnswersRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Dta_Wed_Api_V1_Diaries_DiariesDataClientMetadata.Methods.upsertDiaryAnswers.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpsertDiaryAnswersInterceptors() ?? []
    )
  }

  internal func makeCreateDiaryAnswersCall(
    _ request: Dta_Wed_Api_V1_Diaries_CreateDiaryAnswersRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Dta_Wed_Api_V1_Diaries_CreateDiaryAnswersRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Dta_Wed_Api_V1_Diaries_DiariesDataClientMetadata.Methods.createDiaryAnswers.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateDiaryAnswersInterceptors() ?? []
    )
  }

  internal func makeUpdateDiaryAnswersCall(
    _ request: Dta_Wed_Api_V1_Diaries_UpdateDiaryAnswersRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Dta_Wed_Api_V1_Diaries_UpdateDiaryAnswersRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Dta_Wed_Api_V1_Diaries_DiariesDataClientMetadata.Methods.updateDiaryAnswers.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateDiaryAnswersInterceptors() ?? []
    )
  }

  internal func makeGetDiaryAnswerByAnswerIDCall(
    _ request: Dta_Wed_Api_V1_Diaries_GetDiaryAnswerByAnswerIdRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Dta_Wed_Api_V1_Diaries_GetDiaryAnswerByAnswerIdRequest, Dta_Wed_Api_V1_Diaries_GetDiaryAnswerByAnswerIdResponse> {
    return self.makeAsyncUnaryCall(
      path: Dta_Wed_Api_V1_Diaries_DiariesDataClientMetadata.Methods.getDiaryAnswerByAnswerId.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetDiaryAnswerByAnswerIdInterceptors() ?? []
    )
  }

  internal func makeDeleteDiaryAnswersCall(
    _ request: Dta_Wed_Api_V1_Diaries_DeleteDiaryAnswersRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Dta_Wed_Api_V1_Diaries_DeleteDiaryAnswersRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Dta_Wed_Api_V1_Diaries_DiariesDataClientMetadata.Methods.deleteDiaryAnswers.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteDiaryAnswersInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Dta_Wed_Api_V1_Diaries_DiariesDataAsyncClientProtocol {
  internal func getUserDiariesByDate(
    _ request: Dta_Wed_Api_V1_Diaries_GetUserDiariesByDateRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Dta_Wed_Api_V1_Diaries_GetUserDiariesByDateResponse {
    return try await self.performAsyncUnaryCall(
      path: Dta_Wed_Api_V1_Diaries_DiariesDataClientMetadata.Methods.getUserDiariesByDate.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetUserDiariesByDateInterceptors() ?? []
    )
  }

  internal func getUserDiaryCalendar(
    _ request: Dta_Wed_Api_V1_Diaries_GetUserDiaryCalendarRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Dta_Wed_Api_V1_Diaries_GetUserDiaryCalendarResponse {
    return try await self.performAsyncUnaryCall(
      path: Dta_Wed_Api_V1_Diaries_DiariesDataClientMetadata.Methods.getUserDiaryCalendar.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetUserDiaryCalendarInterceptors() ?? []
    )
  }

  internal func getDiaryById(
    _ request: Dta_Wed_Api_V1_Diaries_GetDiaryByIdRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Dta_Wed_Api_V1_Diaries_GetDiaryByIdResponse {
    return try await self.performAsyncUnaryCall(
      path: Dta_Wed_Api_V1_Diaries_DiariesDataClientMetadata.Methods.getDiaryById.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetDiaryByIdInterceptors() ?? []
    )
  }

  internal func upsertDiaryAnswers(
    _ request: Dta_Wed_Api_V1_Diaries_UpsertDiaryAnswersRequest,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Dta_Wed_Api_V1_Diaries_DiariesDataClientMetadata.Methods.upsertDiaryAnswers.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpsertDiaryAnswersInterceptors() ?? []
    )
  }

  internal func createDiaryAnswers(
    _ request: Dta_Wed_Api_V1_Diaries_CreateDiaryAnswersRequest,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Dta_Wed_Api_V1_Diaries_DiariesDataClientMetadata.Methods.createDiaryAnswers.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateDiaryAnswersInterceptors() ?? []
    )
  }

  internal func updateDiaryAnswers(
    _ request: Dta_Wed_Api_V1_Diaries_UpdateDiaryAnswersRequest,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Dta_Wed_Api_V1_Diaries_DiariesDataClientMetadata.Methods.updateDiaryAnswers.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateDiaryAnswersInterceptors() ?? []
    )
  }

  internal func getDiaryAnswerByAnswerId(
    _ request: Dta_Wed_Api_V1_Diaries_GetDiaryAnswerByAnswerIdRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Dta_Wed_Api_V1_Diaries_GetDiaryAnswerByAnswerIdResponse {
    return try await self.performAsyncUnaryCall(
      path: Dta_Wed_Api_V1_Diaries_DiariesDataClientMetadata.Methods.getDiaryAnswerByAnswerId.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetDiaryAnswerByAnswerIdInterceptors() ?? []
    )
  }

  internal func deleteDiaryAnswers(
    _ request: Dta_Wed_Api_V1_Diaries_DeleteDiaryAnswersRequest,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Dta_Wed_Api_V1_Diaries_DiariesDataClientMetadata.Methods.deleteDiaryAnswers.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteDiaryAnswersInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal struct Dta_Wed_Api_V1_Diaries_DiariesDataAsyncClient: Dta_Wed_Api_V1_Diaries_DiariesDataAsyncClientProtocol {
  internal var channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Dta_Wed_Api_V1_Diaries_DiariesDataClientInterceptorFactoryProtocol?

  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Dta_Wed_Api_V1_Diaries_DiariesDataClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

#endif // compiler(>=5.6)

internal protocol Dta_Wed_Api_V1_Diaries_DiariesDataClientInterceptorFactoryProtocol: GRPCSendable {

  /// - Returns: Interceptors to use when invoking 'getUserDiariesByDate'.
  func makeGetUserDiariesByDateInterceptors() -> [ClientInterceptor<Dta_Wed_Api_V1_Diaries_GetUserDiariesByDateRequest, Dta_Wed_Api_V1_Diaries_GetUserDiariesByDateResponse>]

  /// - Returns: Interceptors to use when invoking 'getUserDiaryCalendar'.
  func makeGetUserDiaryCalendarInterceptors() -> [ClientInterceptor<Dta_Wed_Api_V1_Diaries_GetUserDiaryCalendarRequest, Dta_Wed_Api_V1_Diaries_GetUserDiaryCalendarResponse>]

  /// - Returns: Interceptors to use when invoking 'getDiaryById'.
  func makeGetDiaryByIdInterceptors() -> [ClientInterceptor<Dta_Wed_Api_V1_Diaries_GetDiaryByIdRequest, Dta_Wed_Api_V1_Diaries_GetDiaryByIdResponse>]

  /// - Returns: Interceptors to use when invoking 'upsertDiaryAnswers'.
  func makeUpsertDiaryAnswersInterceptors() -> [ClientInterceptor<Dta_Wed_Api_V1_Diaries_UpsertDiaryAnswersRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'createDiaryAnswers'.
  func makeCreateDiaryAnswersInterceptors() -> [ClientInterceptor<Dta_Wed_Api_V1_Diaries_CreateDiaryAnswersRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'updateDiaryAnswers'.
  func makeUpdateDiaryAnswersInterceptors() -> [ClientInterceptor<Dta_Wed_Api_V1_Diaries_UpdateDiaryAnswersRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'getDiaryAnswerByAnswerId'.
  func makeGetDiaryAnswerByAnswerIdInterceptors() -> [ClientInterceptor<Dta_Wed_Api_V1_Diaries_GetDiaryAnswerByAnswerIdRequest, Dta_Wed_Api_V1_Diaries_GetDiaryAnswerByAnswerIdResponse>]

  /// - Returns: Interceptors to use when invoking 'deleteDiaryAnswers'.
  func makeDeleteDiaryAnswersInterceptors() -> [ClientInterceptor<Dta_Wed_Api_V1_Diaries_DeleteDiaryAnswersRequest, SwiftProtobuf.Google_Protobuf_Empty>]
}

internal enum Dta_Wed_Api_V1_Diaries_DiariesDataClientMetadata {
  internal static let serviceDescriptor = GRPCServiceDescriptor(
    name: "DiariesData",
    fullName: "dta.wed.api.v1.diaries.DiariesData",
    methods: [
      Dta_Wed_Api_V1_Diaries_DiariesDataClientMetadata.Methods.getUserDiariesByDate,
      Dta_Wed_Api_V1_Diaries_DiariesDataClientMetadata.Methods.getUserDiaryCalendar,
      Dta_Wed_Api_V1_Diaries_DiariesDataClientMetadata.Methods.getDiaryById,
      Dta_Wed_Api_V1_Diaries_DiariesDataClientMetadata.Methods.upsertDiaryAnswers,
      Dta_Wed_Api_V1_Diaries_DiariesDataClientMetadata.Methods.createDiaryAnswers,
      Dta_Wed_Api_V1_Diaries_DiariesDataClientMetadata.Methods.updateDiaryAnswers,
      Dta_Wed_Api_V1_Diaries_DiariesDataClientMetadata.Methods.getDiaryAnswerByAnswerId,
      Dta_Wed_Api_V1_Diaries_DiariesDataClientMetadata.Methods.deleteDiaryAnswers,
    ]
  )

  internal enum Methods {
    internal static let getUserDiariesByDate = GRPCMethodDescriptor(
      name: "GetUserDiariesByDate",
      path: "/dta.wed.api.v1.diaries.DiariesData/GetUserDiariesByDate",
      type: GRPCCallType.unary
    )

    internal static let getUserDiaryCalendar = GRPCMethodDescriptor(
      name: "GetUserDiaryCalendar",
      path: "/dta.wed.api.v1.diaries.DiariesData/GetUserDiaryCalendar",
      type: GRPCCallType.unary
    )

    internal static let getDiaryById = GRPCMethodDescriptor(
      name: "GetDiaryById",
      path: "/dta.wed.api.v1.diaries.DiariesData/GetDiaryById",
      type: GRPCCallType.unary
    )

    internal static let upsertDiaryAnswers = GRPCMethodDescriptor(
      name: "UpsertDiaryAnswers",
      path: "/dta.wed.api.v1.diaries.DiariesData/UpsertDiaryAnswers",
      type: GRPCCallType.unary
    )

    internal static let createDiaryAnswers = GRPCMethodDescriptor(
      name: "CreateDiaryAnswers",
      path: "/dta.wed.api.v1.diaries.DiariesData/CreateDiaryAnswers",
      type: GRPCCallType.unary
    )

    internal static let updateDiaryAnswers = GRPCMethodDescriptor(
      name: "UpdateDiaryAnswers",
      path: "/dta.wed.api.v1.diaries.DiariesData/UpdateDiaryAnswers",
      type: GRPCCallType.unary
    )

    internal static let getDiaryAnswerByAnswerId = GRPCMethodDescriptor(
      name: "GetDiaryAnswerByAnswerId",
      path: "/dta.wed.api.v1.diaries.DiariesData/GetDiaryAnswerByAnswerId",
      type: GRPCCallType.unary
    )

    internal static let deleteDiaryAnswers = GRPCMethodDescriptor(
      name: "DeleteDiaryAnswers",
      path: "/dta.wed.api.v1.diaries.DiariesData/DeleteDiaryAnswers",
      type: GRPCCallType.unary
    )
  }
}

