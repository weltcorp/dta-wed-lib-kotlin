syntax = "proto3";
package dta.wed.api.v2.diaries;

option go_package = "github.com/weltcorp/dta-wed-api/internal/proto/dta-wed-api/v2/diaries";

import "validate/validate.proto";
import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";

service DiariesData {
  rpc CreateDiary(CreateDiaryRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = { post: "/v2/diaries", body: "*" };
  }
  rpc UpdateDiary(UpdateDiaryRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = { patch: "/v2/diaries/{id}", body: "*" };
  }
  rpc GetDiaries(GetDiariesRequest) returns (GetDiariesResponse) {
    option (google.api.http) = { get: "/v2/diaries" };
  }
}

message DiaryFood {
  optional string text = 1;
  repeated string uris = 2;
}

message DiaryFeelingEvent {
  int32 id = 1 [(validate.rules).int32 = {gte: 0, lte: 6}];
  optional string text = 2;
}

message DiaryFeeling {
  int32 score = 1 [(validate.rules).int32 = {gte: 1, lte: 5}];
  optional DiaryFeelingEvent event = 2;
}

message DiarySchedule {
  bool enabled = 1;
  string time = 2;
}

message DiaryMeta {
  int32 id = 1;
  int32 type = 2 [(validate.rules).int32 = {gte: 0, lte: 6}];
  string description = 3;
  optional int32 emotion = 4;
  optional DiarySchedule schedule = 5;
  string dateString = 6;
  int32 date = 7;
}

message DiaryData {
  int32 type = 2 [(validate.rules).int32 = {gte: 0, lte: 6}];
  optional string time = 5;
  repeated int32 who = 6;
  optional int32 where = 7;
  optional DiaryFood food = 8;
  optional int32 beforeHungryScore = 9 [(validate.rules).int32 = {gte: 0, lte: 4}];
  optional int32 afterHungryScore = 10 [(validate.rules).int32 = {gte: 0, lte: 4}];
  optional DiaryFeeling feeling = 11;
  repeated int32 significants = 12;
  bool isSkip = 13;
}

message Diary {
  optional DiaryMeta meta = 1;
  optional DiaryData data = 2;
}

message CreateDiaryRequest {
  int64 userId = 1;
  int32 date = 2;
  optional DiaryData data = 3;
}

message UpdateDiaryRequest {
  int32 id = 1;
  optional DiaryData data = 2;
}

message GetDiariesRequest {
  int64 userId = 1;
  optional int32 date = 2;
  optional int32 startDate = 3;
  optional int32 endDate = 4;
}

message DiariesPerDay {
  int32 dateUnix = 1;
  string dateString = 2;
  repeated Diary diaries = 3;
}

message GetDiariesResponse {
  int64 startDate = 1;
  int64 endDate = 2;
  repeated DiariesPerDay diariesPerDays = 3;
}