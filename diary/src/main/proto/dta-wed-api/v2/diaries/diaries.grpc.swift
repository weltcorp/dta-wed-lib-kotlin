//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: dta-wed-api/v2/diaries/diaries.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import GRPC
import NIO
import NIOConcurrencyHelpers
import SwiftProtobuf


/// Usage: instantiate `Dta_Wed_Api_V2_Diaries_DiariesDataClient`, then call methods of this protocol to make API calls.
internal protocol Dta_Wed_Api_V2_Diaries_DiariesDataClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Dta_Wed_Api_V2_Diaries_DiariesDataClientInterceptorFactoryProtocol? { get }

  func createDiary(
    _ request: Dta_Wed_Api_V2_Diaries_CreateDiaryRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Dta_Wed_Api_V2_Diaries_CreateDiaryRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func updateDiary(
    _ request: Dta_Wed_Api_V2_Diaries_UpdateDiaryRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Dta_Wed_Api_V2_Diaries_UpdateDiaryRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func getDiaries(
    _ request: Dta_Wed_Api_V2_Diaries_GetDiariesRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Dta_Wed_Api_V2_Diaries_GetDiariesRequest, Dta_Wed_Api_V2_Diaries_GetDiariesResponse>
}

extension Dta_Wed_Api_V2_Diaries_DiariesDataClientProtocol {
  internal var serviceName: String {
    return "dta.wed.api.v2.diaries.DiariesData"
  }

  /// Unary call to CreateDiary
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateDiary.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func createDiary(
    _ request: Dta_Wed_Api_V2_Diaries_CreateDiaryRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Dta_Wed_Api_V2_Diaries_CreateDiaryRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Dta_Wed_Api_V2_Diaries_DiariesDataClientMetadata.Methods.createDiary.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateDiaryInterceptors() ?? []
    )
  }

  /// Unary call to UpdateDiary
  ///
  /// - Parameters:
  ///   - request: Request to send to UpdateDiary.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func updateDiary(
    _ request: Dta_Wed_Api_V2_Diaries_UpdateDiaryRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Dta_Wed_Api_V2_Diaries_UpdateDiaryRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Dta_Wed_Api_V2_Diaries_DiariesDataClientMetadata.Methods.updateDiary.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateDiaryInterceptors() ?? []
    )
  }

  /// Unary call to GetDiaries
  ///
  /// - Parameters:
  ///   - request: Request to send to GetDiaries.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getDiaries(
    _ request: Dta_Wed_Api_V2_Diaries_GetDiariesRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Dta_Wed_Api_V2_Diaries_GetDiariesRequest, Dta_Wed_Api_V2_Diaries_GetDiariesResponse> {
    return self.makeUnaryCall(
      path: Dta_Wed_Api_V2_Diaries_DiariesDataClientMetadata.Methods.getDiaries.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetDiariesInterceptors() ?? []
    )
  }
}

#if compiler(>=5.6)
@available(*, deprecated)
extension Dta_Wed_Api_V2_Diaries_DiariesDataClient: @unchecked Sendable {}
#endif // compiler(>=5.6)

@available(*, deprecated, renamed: "Dta_Wed_Api_V2_Diaries_DiariesDataNIOClient")
internal final class Dta_Wed_Api_V2_Diaries_DiariesDataClient: Dta_Wed_Api_V2_Diaries_DiariesDataClientProtocol {
  private let lock = Lock()
  private var _defaultCallOptions: CallOptions
  private var _interceptors: Dta_Wed_Api_V2_Diaries_DiariesDataClientInterceptorFactoryProtocol?
  internal let channel: GRPCChannel
  internal var defaultCallOptions: CallOptions {
    get { self.lock.withLock { return self._defaultCallOptions } }
    set { self.lock.withLockVoid { self._defaultCallOptions = newValue } }
  }
  internal var interceptors: Dta_Wed_Api_V2_Diaries_DiariesDataClientInterceptorFactoryProtocol? {
    get { self.lock.withLock { return self._interceptors } }
    set { self.lock.withLockVoid { self._interceptors = newValue } }
  }

  /// Creates a client for the dta.wed.api.v2.diaries.DiariesData service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Dta_Wed_Api_V2_Diaries_DiariesDataClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self._defaultCallOptions = defaultCallOptions
    self._interceptors = interceptors
  }
}

internal struct Dta_Wed_Api_V2_Diaries_DiariesDataNIOClient: Dta_Wed_Api_V2_Diaries_DiariesDataClientProtocol {
  internal var channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Dta_Wed_Api_V2_Diaries_DiariesDataClientInterceptorFactoryProtocol?

  /// Creates a client for the dta.wed.api.v2.diaries.DiariesData service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Dta_Wed_Api_V2_Diaries_DiariesDataClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

#if compiler(>=5.6)
@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal protocol Dta_Wed_Api_V2_Diaries_DiariesDataAsyncClientProtocol: GRPCClient {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Dta_Wed_Api_V2_Diaries_DiariesDataClientInterceptorFactoryProtocol? { get }

  func makeCreateDiaryCall(
    _ request: Dta_Wed_Api_V2_Diaries_CreateDiaryRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Dta_Wed_Api_V2_Diaries_CreateDiaryRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func makeUpdateDiaryCall(
    _ request: Dta_Wed_Api_V2_Diaries_UpdateDiaryRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Dta_Wed_Api_V2_Diaries_UpdateDiaryRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func makeGetDiariesCall(
    _ request: Dta_Wed_Api_V2_Diaries_GetDiariesRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Dta_Wed_Api_V2_Diaries_GetDiariesRequest, Dta_Wed_Api_V2_Diaries_GetDiariesResponse>
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Dta_Wed_Api_V2_Diaries_DiariesDataAsyncClientProtocol {
  internal static var serviceDescriptor: GRPCServiceDescriptor {
    return Dta_Wed_Api_V2_Diaries_DiariesDataClientMetadata.serviceDescriptor
  }

  internal var interceptors: Dta_Wed_Api_V2_Diaries_DiariesDataClientInterceptorFactoryProtocol? {
    return nil
  }

  internal func makeCreateDiaryCall(
    _ request: Dta_Wed_Api_V2_Diaries_CreateDiaryRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Dta_Wed_Api_V2_Diaries_CreateDiaryRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Dta_Wed_Api_V2_Diaries_DiariesDataClientMetadata.Methods.createDiary.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateDiaryInterceptors() ?? []
    )
  }

  internal func makeUpdateDiaryCall(
    _ request: Dta_Wed_Api_V2_Diaries_UpdateDiaryRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Dta_Wed_Api_V2_Diaries_UpdateDiaryRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Dta_Wed_Api_V2_Diaries_DiariesDataClientMetadata.Methods.updateDiary.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateDiaryInterceptors() ?? []
    )
  }

  internal func makeGetDiariesCall(
    _ request: Dta_Wed_Api_V2_Diaries_GetDiariesRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Dta_Wed_Api_V2_Diaries_GetDiariesRequest, Dta_Wed_Api_V2_Diaries_GetDiariesResponse> {
    return self.makeAsyncUnaryCall(
      path: Dta_Wed_Api_V2_Diaries_DiariesDataClientMetadata.Methods.getDiaries.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetDiariesInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Dta_Wed_Api_V2_Diaries_DiariesDataAsyncClientProtocol {
  internal func createDiary(
    _ request: Dta_Wed_Api_V2_Diaries_CreateDiaryRequest,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Dta_Wed_Api_V2_Diaries_DiariesDataClientMetadata.Methods.createDiary.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateDiaryInterceptors() ?? []
    )
  }

  internal func updateDiary(
    _ request: Dta_Wed_Api_V2_Diaries_UpdateDiaryRequest,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Dta_Wed_Api_V2_Diaries_DiariesDataClientMetadata.Methods.updateDiary.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateDiaryInterceptors() ?? []
    )
  }

  internal func getDiaries(
    _ request: Dta_Wed_Api_V2_Diaries_GetDiariesRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Dta_Wed_Api_V2_Diaries_GetDiariesResponse {
    return try await self.performAsyncUnaryCall(
      path: Dta_Wed_Api_V2_Diaries_DiariesDataClientMetadata.Methods.getDiaries.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetDiariesInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal struct Dta_Wed_Api_V2_Diaries_DiariesDataAsyncClient: Dta_Wed_Api_V2_Diaries_DiariesDataAsyncClientProtocol {
  internal var channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Dta_Wed_Api_V2_Diaries_DiariesDataClientInterceptorFactoryProtocol?

  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Dta_Wed_Api_V2_Diaries_DiariesDataClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

#endif // compiler(>=5.6)

internal protocol Dta_Wed_Api_V2_Diaries_DiariesDataClientInterceptorFactoryProtocol: GRPCSendable {

  /// - Returns: Interceptors to use when invoking 'createDiary'.
  func makeCreateDiaryInterceptors() -> [ClientInterceptor<Dta_Wed_Api_V2_Diaries_CreateDiaryRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'updateDiary'.
  func makeUpdateDiaryInterceptors() -> [ClientInterceptor<Dta_Wed_Api_V2_Diaries_UpdateDiaryRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'getDiaries'.
  func makeGetDiariesInterceptors() -> [ClientInterceptor<Dta_Wed_Api_V2_Diaries_GetDiariesRequest, Dta_Wed_Api_V2_Diaries_GetDiariesResponse>]
}

internal enum Dta_Wed_Api_V2_Diaries_DiariesDataClientMetadata {
  internal static let serviceDescriptor = GRPCServiceDescriptor(
    name: "DiariesData",
    fullName: "dta.wed.api.v2.diaries.DiariesData",
    methods: [
      Dta_Wed_Api_V2_Diaries_DiariesDataClientMetadata.Methods.createDiary,
      Dta_Wed_Api_V2_Diaries_DiariesDataClientMetadata.Methods.updateDiary,
      Dta_Wed_Api_V2_Diaries_DiariesDataClientMetadata.Methods.getDiaries,
    ]
  )

  internal enum Methods {
    internal static let createDiary = GRPCMethodDescriptor(
      name: "CreateDiary",
      path: "/dta.wed.api.v2.diaries.DiariesData/CreateDiary",
      type: GRPCCallType.unary
    )

    internal static let updateDiary = GRPCMethodDescriptor(
      name: "UpdateDiary",
      path: "/dta.wed.api.v2.diaries.DiariesData/UpdateDiary",
      type: GRPCCallType.unary
    )

    internal static let getDiaries = GRPCMethodDescriptor(
      name: "GetDiaries",
      path: "/dta.wed.api.v2.diaries.DiariesData/GetDiaries",
      type: GRPCCallType.unary
    )
  }
}

